[comment encoding = UTF-8 /]
[module GenerateCIndexFile('http://www.upb.de/lina/cfg/controlflow', 'http://www.upb.de/lina/cfg/gendata', 'http://www.upb.de/llvm_parser/llvm', 'http://www.eclipse.org/emf/2002/Ecore')]
[import de::upb::lina::transformations::acceleo::TransformationCommon/]
[import de::upb::lina::transformations::acceleo::kiv::KivCommon/]

[template public generateCIndexFile(genData: GeneratorData)]
[file ('specs/cindex.utf8', false, 'UTF-8')]
data specification
	IJ = [for (cfg : ControlFlowDiagram | genData.cfgs) separator ('|')] [generateCfgLabel(genData, cfg)/]ini [/for];
	CJ = [for (cfg : ControlFlowDiagram | genData.cfgs->select(getCopTransitions()->size() > 0)) separator (' |')] [for (transition : Transition | getCopTransitions(cfg)) separator (' | ')][getLabelForTransition(transition)/][/for][/for];
	RJ = [for (transition : Transition | getAllReturnTransitions(genData))separator ('|')] [transition.label/]ret [/for];
variables
		ij : IJ;
		cj : CJ;
		rj : RJ;
end data specification
[/file]
[/template]

[query private getLabelForTransition(transition : Transition) : String = 
	if(doesInstructionNeedMultipleLabels(transition)) then
		getPositiveLabelForTransition(transition) + ' | ' + getNegativeLabelForTransition(transition)
	else
		transition.label
	endif
/]


[query private doesInstructionNeedMultipleLabels(transition : Transition): Boolean = 
	if not transition.instruction.oclIsUndefined() then 
		if transition.instruction.oclIsKindOf(Select) 
		or transition.instruction.oclIsTypeOf(CompareInt) 
		or transition.instruction.oclIsTypeOf(CmpXchg) 
		or transition.instruction.oclIsTypeOf(AtomicRmwMax) 
		or transition.instruction.oclIsTypeOf(AtomicRmwMin) 
		or transition.instruction.oclIsTypeOf(AtomicRmwUmax) 
		or transition.instruction.oclIsTypeOf(AtomicRmwUmin) then 
			true 
		else 
			false 
		endif
	else
		false
	endif
/]