/*
* generated by Xtext
*/
grammar InternalLLVM;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.upb.llvm_parser.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.upb.llvm_parser.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.upb.llvm_parser.services.LLVMGrammarAccess;

}

@parser::members {
 
 	private LLVMGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(LLVMGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleLLVM
entryRuleLLVM 
:
{ before(grammarAccess.getLLVMRule()); }
	 ruleLLVM
{ after(grammarAccess.getLLVMRule()); } 
	 EOF 
;

// Rule LLVM
ruleLLVM
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLLVMAccess().getElementsAssignment()); }
(rule__LLVM__ElementsAssignment)*
{ after(grammarAccess.getLLVMAccess().getElementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractElement
entryRuleAbstractElement 
:
{ before(grammarAccess.getAbstractElementRule()); }
	 ruleAbstractElement
{ after(grammarAccess.getAbstractElementRule()); } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractElementAccess().getAlternatives()); }
(rule__AbstractElement__Alternatives)
{ after(grammarAccess.getAbstractElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTopLevelEntity
entryRuleTopLevelEntity 
:
{ before(grammarAccess.getTopLevelEntityRule()); }
	 ruleTopLevelEntity
{ after(grammarAccess.getTopLevelEntityRule()); } 
	 EOF 
;

// Rule TopLevelEntity
ruleTopLevelEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTopLevelEntityAccess().getAlternatives()); }
(rule__TopLevelEntity__Alternatives)
{ after(grammarAccess.getTopLevelEntityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMainLevelEntity
entryRuleMainLevelEntity 
:
{ before(grammarAccess.getMainLevelEntityRule()); }
	 ruleMainLevelEntity
{ after(grammarAccess.getMainLevelEntityRule()); } 
	 EOF 
;

// Rule MainLevelEntity
ruleMainLevelEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMainLevelEntityAccess().getAlternatives()); }
(rule__MainLevelEntity__Alternatives)
{ after(grammarAccess.getMainLevelEntityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionHeader
entryRuleFunctionHeader 
:
{ before(grammarAccess.getFunctionHeaderRule()); }
	 ruleFunctionHeader
{ after(grammarAccess.getFunctionHeaderRule()); } 
	 EOF 
;

// Rule FunctionHeader
ruleFunctionHeader
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionHeaderAccess().getAlternatives()); }
(rule__FunctionHeader__Alternatives)
{ after(grammarAccess.getFunctionHeaderAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeList
entryRuleTypeList 
:
{ before(grammarAccess.getTypeListRule()); }
	 ruleTypeList
{ after(grammarAccess.getTypeListRule()); } 
	 EOF 
;

// Rule TypeList
ruleTypeList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeListAccess().getGroup()); }
(rule__TypeList__Group__0)
{ after(grammarAccess.getTypeListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAggregate
entryRuleAggregate 
:
{ before(grammarAccess.getAggregateRule()); }
	 ruleAggregate
{ after(grammarAccess.getAggregateRule()); } 
	 EOF 
;

// Rule Aggregate
ruleAggregate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAggregateAccess().getGroup()); }
(rule__Aggregate__Group__0)
{ after(grammarAccess.getAggregateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalVar
entryRuleLocalVar 
:
{ before(grammarAccess.getLocalVarRule()); }
	 ruleLocalVar
{ after(grammarAccess.getLocalVarRule()); } 
	 EOF 
;

// Rule LocalVar
ruleLocalVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalVarAccess().getGroup()); }
(rule__LocalVar__Group__0)
{ after(grammarAccess.getLocalVarAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalType
entryRuleLocalType 
:
{ before(grammarAccess.getLocalTypeRule()); }
	 ruleLocalType
{ after(grammarAccess.getLocalTypeRule()); } 
	 EOF 
;

// Rule LocalType
ruleLocalType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalTypeAccess().getGroup()); }
(rule__LocalType__Group__0)
{ after(grammarAccess.getLocalTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalInstruction
entryRuleLocalInstruction 
:
{ before(grammarAccess.getLocalInstructionRule()); }
	 ruleLocalInstruction
{ after(grammarAccess.getLocalInstructionRule()); } 
	 EOF 
;

// Rule LocalInstruction
ruleLocalInstruction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalInstructionAccess().getInstrAssignment()); }
(rule__LocalInstruction__InstrAssignment)
{ after(grammarAccess.getLocalInstructionAccess().getInstrAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalAlias
entryRuleLocalAlias 
:
{ before(grammarAccess.getLocalAliasRule()); }
	 ruleLocalAlias
{ after(grammarAccess.getLocalAliasRule()); } 
	 EOF 
;

// Rule LocalAlias
ruleLocalAlias
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalAliasAccess().getGroup()); }
(rule__LocalAlias__Group__0)
{ after(grammarAccess.getLocalAliasAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeAndValue
entryRuleTypeAndValue 
:
{ before(grammarAccess.getTypeAndValueRule()); }
	 ruleTypeAndValue
{ after(grammarAccess.getTypeAndValueRule()); } 
	 EOF 
;

// Rule TypeAndValue
ruleTypeAndValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAndValueAccess().getAlternatives()); }
(rule__TypeAndValue__Alternatives)
{ after(grammarAccess.getTypeAndValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructType
entryRuleStructType 
:
{ before(grammarAccess.getStructTypeRule()); }
	 ruleStructType
{ after(grammarAccess.getStructTypeRule()); } 
	 EOF 
;

// Rule StructType
ruleStructType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructTypeAccess().getAlternatives()); }
(rule__StructType__Alternatives)
{ after(grammarAccess.getStructTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBType
entryRuleBType 
:
{ before(grammarAccess.getBTypeRule()); }
	 ruleBType
{ after(grammarAccess.getBTypeRule()); } 
	 EOF 
;

// Rule BType
ruleBType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBTypeAccess().getAlternatives()); }
(rule__BType__Alternatives)
{ after(grammarAccess.getBTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBasicType
entryRuleBasicType 
:
{ before(grammarAccess.getBasicTypeRule()); }
	 ruleBasicType
{ after(grammarAccess.getBasicTypeRule()); } 
	 EOF 
;

// Rule BasicType
ruleBasicType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBasicTypeAccess().getAlternatives()); }
(rule__BasicType__Alternatives)
{ after(grammarAccess.getBasicTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleF_POINT
entryRuleF_POINT 
:
{ before(grammarAccess.getF_POINTRule()); }
	 ruleF_POINT
{ after(grammarAccess.getF_POINTRule()); } 
	 EOF 
;

// Rule F_POINT
ruleF_POINT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getF_POINTAccess().getAlternatives()); }
(rule__F_POINT__Alternatives)
{ after(grammarAccess.getF_POINTAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGetElementPtr
entryRuleGetElementPtr 
:
{ before(grammarAccess.getGetElementPtrRule()); }
	 ruleGetElementPtr
{ after(grammarAccess.getGetElementPtrRule()); } 
	 EOF 
;

// Rule GetElementPtr
ruleGetElementPtr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGetElementPtrAccess().getGroup()); }
(rule__GetElementPtr__Group__0)
{ after(grammarAccess.getGetElementPtrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtractValue
entryRuleExtractValue 
:
{ before(grammarAccess.getExtractValueRule()); }
	 ruleExtractValue
{ after(grammarAccess.getExtractValueRule()); } 
	 EOF 
;

// Rule ExtractValue
ruleExtractValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtractValueAccess().getGroup()); }
(rule__ExtractValue__Group__0)
{ after(grammarAccess.getExtractValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInsertValue
entryRuleInsertValue 
:
{ before(grammarAccess.getInsertValueRule()); }
	 ruleInsertValue
{ after(grammarAccess.getInsertValueRule()); } 
	 EOF 
;

// Rule InsertValue
ruleInsertValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInsertValueAccess().getGroup()); }
(rule__InsertValue__Group__0)
{ after(grammarAccess.getInsertValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFence
entryRuleFence 
:
{ before(grammarAccess.getFenceRule()); }
	 ruleFence
{ after(grammarAccess.getFenceRule()); } 
	 EOF 
;

// Rule Fence
ruleFence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFenceAccess().getGroup()); }
(rule__Fence__Group__0)
{ after(grammarAccess.getFenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleATOMIC_ORDERING
entryRuleATOMIC_ORDERING 
:
{ before(grammarAccess.getATOMIC_ORDERINGRule()); }
	 ruleATOMIC_ORDERING
{ after(grammarAccess.getATOMIC_ORDERINGRule()); } 
	 EOF 
;

// Rule ATOMIC_ORDERING
ruleATOMIC_ORDERING
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getATOMIC_ORDERINGAccess().getAlternatives()); }
(rule__ATOMIC_ORDERING__Alternatives)
{ after(grammarAccess.getATOMIC_ORDERINGAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCmpXchg
entryRuleCmpXchg 
:
{ before(grammarAccess.getCmpXchgRule()); }
	 ruleCmpXchg
{ after(grammarAccess.getCmpXchgRule()); } 
	 EOF 
;

// Rule CmpXchg
ruleCmpXchg
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCmpXchgAccess().getGroup()); }
(rule__CmpXchg__Group__0)
{ after(grammarAccess.getCmpXchgAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicRMW
entryRuleAtomicRMW 
:
{ before(grammarAccess.getAtomicRMWRule()); }
	 ruleAtomicRMW
{ after(grammarAccess.getAtomicRMWRule()); } 
	 EOF 
;

// Rule AtomicRMW
ruleAtomicRMW
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicRMWAccess().getGroup()); }
(rule__AtomicRMW__Group__0)
{ after(grammarAccess.getAtomicRMWAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBIN_OP
entryRuleBIN_OP 
:
{ before(grammarAccess.getBIN_OPRule()); }
	 ruleBIN_OP
{ after(grammarAccess.getBIN_OPRule()); } 
	 EOF 
;

// Rule BIN_OP
ruleBIN_OP
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBIN_OPAccess().getAlternatives()); }
(rule__BIN_OP__Alternatives)
{ after(grammarAccess.getBIN_OPAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoad
entryRuleLoad 
:
{ before(grammarAccess.getLoadRule()); }
	 ruleLoad
{ after(grammarAccess.getLoadRule()); } 
	 EOF 
;

// Rule Load
ruleLoad
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLoadAccess().getAlternatives()); }
(rule__Load__Alternatives)
{ after(grammarAccess.getLoadAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStore
entryRuleStore 
:
{ before(grammarAccess.getStoreRule()); }
	 ruleStore
{ after(grammarAccess.getStoreRule()); } 
	 EOF 
;

// Rule Store
ruleStore
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStoreAccess().getAlternatives()); }
(rule__Store__Alternatives)
{ after(grammarAccess.getStoreAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCall
entryRuleCall 
:
{ before(grammarAccess.getCallRule()); }
	 ruleCall
{ after(grammarAccess.getCallRule()); } 
	 EOF 
;

// Rule Call
ruleCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCallAccess().getGroup()); }
(rule__Call__Group__0)
{ after(grammarAccess.getCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRETURN_ATTRIBUTES
entryRuleRETURN_ATTRIBUTES 
:
{ before(grammarAccess.getRETURN_ATTRIBUTESRule()); }
	 ruleRETURN_ATTRIBUTES
{ after(grammarAccess.getRETURN_ATTRIBUTESRule()); } 
	 EOF 
;

// Rule RETURN_ATTRIBUTES
ruleRETURN_ATTRIBUTES
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRETURN_ATTRIBUTESAccess().getAlternatives()); }
(rule__RETURN_ATTRIBUTES__Alternatives)
{ after(grammarAccess.getRETURN_ATTRIBUTESAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlloc
entryRuleAlloc 
:
{ before(grammarAccess.getAllocRule()); }
	 ruleAlloc
{ after(grammarAccess.getAllocRule()); } 
	 EOF 
;

// Rule Alloc
ruleAlloc
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAllocAccess().getGroup()); }
(rule__Alloc__Group__0)
{ after(grammarAccess.getAllocAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCallingConv
entryRuleCallingConv 
:
{ before(grammarAccess.getCallingConvRule()); }
	 ruleCallingConv
{ after(grammarAccess.getCallingConvRule()); } 
	 EOF 
;

// Rule CallingConv
ruleCallingConv
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCallingConvAccess().getAlternatives()); }
(rule__CallingConv__Alternatives)
{ after(grammarAccess.getCallingConvAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFUNCTION_ATTRIBUTES
entryRuleFUNCTION_ATTRIBUTES 
:
{ before(grammarAccess.getFUNCTION_ATTRIBUTESRule()); }
	 ruleFUNCTION_ATTRIBUTES
{ after(grammarAccess.getFUNCTION_ATTRIBUTESRule()); } 
	 EOF 
;

// Rule FUNCTION_ATTRIBUTES
ruleFUNCTION_ATTRIBUTES
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getAlternatives()); }
(rule__FUNCTION_ATTRIBUTES__Alternatives)
{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterList
entryRuleParameterList 
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterListAccess().getGroup()); }
(rule__ParameterList__Group__0)
{ after(grammarAccess.getParameterListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePHI
entryRulePHI 
:
{ before(grammarAccess.getPHIRule()); }
	 rulePHI
{ after(grammarAccess.getPHIRule()); } 
	 EOF 
;

// Rule PHI
rulePHI
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPHIAccess().getGroup()); }
(rule__PHI__Group__0)
{ after(grammarAccess.getPHIAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuePair
entryRuleValuePair 
:
{ before(grammarAccess.getValuePairRule()); }
	 ruleValuePair
{ after(grammarAccess.getValuePairRule()); } 
	 EOF 
;

// Rule ValuePair
ruleValuePair
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuePairAccess().getGroup()); }
(rule__ValuePair__Group__0)
{ after(grammarAccess.getValuePairAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLandingPad
entryRuleLandingPad 
:
{ before(grammarAccess.getLandingPadRule()); }
	 ruleLandingPad
{ after(grammarAccess.getLandingPadRule()); } 
	 EOF 
;

// Rule LandingPad
ruleLandingPad
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLandingPadAccess().getAlternatives()); }
(rule__LandingPad__Alternatives)
{ after(grammarAccess.getLandingPadAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClause
entryRuleClause 
:
{ before(grammarAccess.getClauseRule()); }
	 ruleClause
{ after(grammarAccess.getClauseRule()); } 
	 EOF 
;

// Rule Clause
ruleClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClauseAccess().getAlternatives()); }
(rule__Clause__Alternatives)
{ after(grammarAccess.getClauseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelect
entryRuleSelect 
:
{ before(grammarAccess.getSelectRule()); }
	 ruleSelect
{ after(grammarAccess.getSelectRule()); } 
	 EOF 
;

// Rule Select
ruleSelect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectAccess().getGroup()); }
(rule__Select__Group__0)
{ after(grammarAccess.getSelectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVA_Arg
entryRuleVA_Arg 
:
{ before(grammarAccess.getVA_ArgRule()); }
	 ruleVA_Arg
{ after(grammarAccess.getVA_ArgRule()); } 
	 EOF 
;

// Rule VA_Arg
ruleVA_Arg
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVA_ArgAccess().getGroup()); }
(rule__VA_Arg__Group__0)
{ after(grammarAccess.getVA_ArgAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtractElement
entryRuleExtractElement 
:
{ before(grammarAccess.getExtractElementRule()); }
	 ruleExtractElement
{ after(grammarAccess.getExtractElementRule()); } 
	 EOF 
;

// Rule ExtractElement
ruleExtractElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtractElementAccess().getGroup()); }
(rule__ExtractElement__Group__0)
{ after(grammarAccess.getExtractElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInsertElement
entryRuleInsertElement 
:
{ before(grammarAccess.getInsertElementRule()); }
	 ruleInsertElement
{ after(grammarAccess.getInsertElementRule()); } 
	 EOF 
;

// Rule InsertElement
ruleInsertElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInsertElementAccess().getGroup()); }
(rule__InsertElement__Group__0)
{ after(grammarAccess.getInsertElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleShuffleVector
entryRuleShuffleVector 
:
{ before(grammarAccess.getShuffleVectorRule()); }
	 ruleShuffleVector
{ after(grammarAccess.getShuffleVectorRule()); } 
	 EOF 
;

// Rule ShuffleVector
ruleShuffleVector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getShuffleVectorAccess().getGroup()); }
(rule__ShuffleVector__Group__0)
{ after(grammarAccess.getShuffleVectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCast
entryRuleCast 
:
{ before(grammarAccess.getCastRule()); }
	 ruleCast
{ after(grammarAccess.getCastRule()); } 
	 EOF 
;

// Rule Cast
ruleCast
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCastAccess().getGroup()); }
(rule__Cast__Group__0)
{ after(grammarAccess.getCastAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCAST_TYPE
entryRuleCAST_TYPE 
:
{ before(grammarAccess.getCAST_TYPERule()); }
	 ruleCAST_TYPE
{ after(grammarAccess.getCAST_TYPERule()); } 
	 EOF 
;

// Rule CAST_TYPE
ruleCAST_TYPE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCAST_TYPEAccess().getAlternatives()); }
(rule__CAST_TYPE__Alternatives)
{ after(grammarAccess.getCAST_TYPEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompare
entryRuleCompare 
:
{ before(grammarAccess.getCompareRule()); }
	 ruleCompare
{ after(grammarAccess.getCompareRule()); } 
	 EOF 
;

// Rule Compare
ruleCompare
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareAccess().getAlternatives()); }
(rule__Compare__Alternatives)
{ after(grammarAccess.getCompareAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleI_PREDICATES
entryRuleI_PREDICATES 
:
{ before(grammarAccess.getI_PREDICATESRule()); }
	 ruleI_PREDICATES
{ after(grammarAccess.getI_PREDICATESRule()); } 
	 EOF 
;

// Rule I_PREDICATES
ruleI_PREDICATES
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getI_PREDICATESAccess().getAlternatives()); }
(rule__I_PREDICATES__Alternatives)
{ after(grammarAccess.getI_PREDICATESAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleF_PREDICATES
entryRuleF_PREDICATES 
:
{ before(grammarAccess.getF_PREDICATESRule()); }
	 ruleF_PREDICATES
{ after(grammarAccess.getF_PREDICATESRule()); } 
	 EOF 
;

// Rule F_PREDICATES
ruleF_PREDICATES
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getF_PREDICATESAccess().getAlternatives()); }
(rule__F_PREDICATES__Alternatives)
{ after(grammarAccess.getF_PREDICATESAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleARITHMETIC_OP
entryRuleARITHMETIC_OP 
:
{ before(grammarAccess.getARITHMETIC_OPRule()); }
	 ruleARITHMETIC_OP
{ after(grammarAccess.getARITHMETIC_OPRule()); } 
	 EOF 
;

// Rule ARITHMETIC_OP
ruleARITHMETIC_OP
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getARITHMETIC_OPAccess().getAlternatives()); }
(rule__ARITHMETIC_OP__Alternatives)
{ after(grammarAccess.getARITHMETIC_OPAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLOGICAL_OP
entryRuleLOGICAL_OP 
:
{ before(grammarAccess.getLOGICAL_OPRule()); }
	 ruleLOGICAL_OP
{ after(grammarAccess.getLOGICAL_OPRule()); } 
	 EOF 
;

// Rule LOGICAL_OP
ruleLOGICAL_OP
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLOGICAL_OPAccess().getAlternatives()); }
(rule__LOGICAL_OP__Alternatives)
{ after(grammarAccess.getLOGICAL_OPAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArithmetic
entryRuleArithmetic 
:
{ before(grammarAccess.getArithmeticRule()); }
	 ruleArithmetic
{ after(grammarAccess.getArithmeticRule()); } 
	 EOF 
;

// Rule Arithmetic
ruleArithmetic
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithmeticAccess().getGroup()); }
(rule__Arithmetic__Group__0)
{ after(grammarAccess.getArithmeticAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogical
entryRuleLogical 
:
{ before(grammarAccess.getLogicalRule()); }
	 ruleLogical
{ after(grammarAccess.getLogicalRule()); } 
	 EOF 
;

// Rule Logical
ruleLogical
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicalAccess().getGroup()); }
(rule__Logical__Group__0)
{ after(grammarAccess.getLogicalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstruction
entryRuleInstruction 
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstructionAccess().getAlternatives()); }
(rule__Instruction__Alternatives)
{ after(grammarAccess.getInstructionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndirectBranch
entryRuleIndirectBranch 
:
{ before(grammarAccess.getIndirectBranchRule()); }
	 ruleIndirectBranch
{ after(grammarAccess.getIndirectBranchRule()); } 
	 EOF 
;

// Rule IndirectBranch
ruleIndirectBranch
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndirectBranchAccess().getGroup()); }
(rule__IndirectBranch__Group__0)
{ after(grammarAccess.getIndirectBranchAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLabelList
entryRuleLabelList 
:
{ before(grammarAccess.getLabelListRule()); }
	 ruleLabelList
{ after(grammarAccess.getLabelListRule()); } 
	 EOF 
;

// Rule LabelList
ruleLabelList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getLabelListAccess().getLabelsAssignment()); }
(rule__LabelList__LabelsAssignment)
{ after(grammarAccess.getLabelListAccess().getLabelsAssignment()); }
)
(
{ before(grammarAccess.getLabelListAccess().getLabelsAssignment()); }
(rule__LabelList__LabelsAssignment)*
{ after(grammarAccess.getLabelListAccess().getLabelsAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitch
entryRuleSwitch 
:
{ before(grammarAccess.getSwitchRule()); }
	 ruleSwitch
{ after(grammarAccess.getSwitchRule()); } 
	 EOF 
;

// Rule Switch
ruleSwitch
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchAccess().getGroup()); }
(rule__Switch__Group__0)
{ after(grammarAccess.getSwitchAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJumpTable
entryRuleJumpTable 
:
{ before(grammarAccess.getJumpTableRule()); }
	 ruleJumpTable
{ after(grammarAccess.getJumpTableRule()); } 
	 EOF 
;

// Rule JumpTable
ruleJumpTable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getJumpTableAccess().getGroup()); }
(rule__JumpTable__Group__0)
{ after(grammarAccess.getJumpTableAccess().getGroup()); }
)
(
{ before(grammarAccess.getJumpTableAccess().getGroup()); }
(rule__JumpTable__Group__0)*
{ after(grammarAccess.getJumpTableAccess().getGroup()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInvoke
entryRuleInvoke 
:
{ before(grammarAccess.getInvokeRule()); }
	 ruleInvoke
{ after(grammarAccess.getInvokeRule()); } 
	 EOF 
;

// Rule Invoke
ruleInvoke
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInvokeAccess().getGroup()); }
(rule__Invoke__Group__0)
{ after(grammarAccess.getInvokeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResume
entryRuleResume 
:
{ before(grammarAccess.getResumeRule()); }
	 ruleResume
{ after(grammarAccess.getResumeRule()); } 
	 EOF 
;

// Rule Resume
ruleResume
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResumeAccess().getGroup()); }
(rule__Resume__Group__0)
{ after(grammarAccess.getResumeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturn
entryRuleReturn 
:
{ before(grammarAccess.getReturnRule()); }
	 ruleReturn
{ after(grammarAccess.getReturnRule()); } 
	 EOF 
;

// Rule Return
ruleReturn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnAccess().getAlternatives()); }
(rule__Return__Alternatives)
{ after(grammarAccess.getReturnAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBranch
entryRuleBranch 
:
{ before(grammarAccess.getBranchRule()); }
	 ruleBranch
{ after(grammarAccess.getBranchRule()); } 
	 EOF 
;

// Rule Branch
ruleBranch
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBranchAccess().getAlternatives()); }
(rule__Branch__Alternatives)
{ after(grammarAccess.getBranchAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionBody
entryRuleFunctionBody 
:
{ before(grammarAccess.getFunctionBodyRule()); }
	 ruleFunctionBody
{ after(grammarAccess.getFunctionBodyRule()); } 
	 EOF 
;

// Rule FunctionBody
ruleFunctionBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionBodyAccess().getGroup()); }
(rule__FunctionBody__Group__0)
{ after(grammarAccess.getFunctionBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBasicBlock
entryRuleBasicBlock 
:
{ before(grammarAccess.getBasicBlockRule()); }
	 ruleBasicBlock
{ after(grammarAccess.getBasicBlockRule()); } 
	 EOF 
;

// Rule BasicBlock
ruleBasicBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBasicBlockAccess().getGroup()); }
(rule__BasicBlock__Group__0)
{ after(grammarAccess.getBasicBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVISIBILITY
entryRuleVISIBILITY 
:
{ before(grammarAccess.getVISIBILITYRule()); }
	 ruleVISIBILITY
{ after(grammarAccess.getVISIBILITYRule()); } 
	 EOF 
;

// Rule VISIBILITY
ruleVISIBILITY
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVISIBILITYAccess().getAlternatives()); }
(rule__VISIBILITY__Alternatives)
{ after(grammarAccess.getVISIBILITYAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLINKAGE
entryRuleLINKAGE 
:
{ before(grammarAccess.getLINKAGERule()); }
	 ruleLINKAGE
{ after(grammarAccess.getLINKAGERule()); } 
	 EOF 
;

// Rule LINKAGE
ruleLINKAGE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLINKAGEAccess().getAlternatives()); }
(rule__LINKAGE__Alternatives)
{ after(grammarAccess.getLINKAGEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleALIAS_LINKAGE
entryRuleALIAS_LINKAGE 
:
{ before(grammarAccess.getALIAS_LINKAGERule()); }
	 ruleALIAS_LINKAGE
{ after(grammarAccess.getALIAS_LINKAGERule()); } 
	 EOF 
;

// Rule ALIAS_LINKAGE
ruleALIAS_LINKAGE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getALIAS_LINKAGEAccess().getAlternatives()); }
(rule__ALIAS_LINKAGE__Alternatives)
{ after(grammarAccess.getALIAS_LINKAGEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleALIGNMENT
entryRuleALIGNMENT 
:
{ before(grammarAccess.getALIGNMENTRule()); }
	 ruleALIGNMENT
{ after(grammarAccess.getALIGNMENTRule()); } 
	 EOF 
;

// Rule ALIGNMENT
ruleALIGNMENT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getALIGNMENTAccess().getGroup()); }
(rule__ALIGNMENT__Group__0)
{ after(grammarAccess.getALIGNMENTAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AbstractElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractElementAccess().getGroup_0()); }
(rule__AbstractElement__Group_0__0)
{ after(grammarAccess.getAbstractElementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getGroup_1()); }
(rule__AbstractElement__Group_1__0)
{ after(grammarAccess.getAbstractElementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getGroup_0()); }
(rule__TopLevelEntity__Group_0__0)
{ after(grammarAccess.getTopLevelEntityAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTopLevelEntityAccess().getGroup_1()); }
(rule__TopLevelEntity__Group_1__0)
{ after(grammarAccess.getTopLevelEntityAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTopLevelEntityAccess().getGroup_2()); }
(rule__TopLevelEntity__Group_2__0)
{ after(grammarAccess.getTopLevelEntityAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getDatalayoutKeyword_1_1_0()); }

	'datalayout' 

{ after(grammarAccess.getTopLevelEntityAccess().getDatalayoutKeyword_1_1_0()); }
)

    |(
{ before(grammarAccess.getTopLevelEntityAccess().getTripleKeyword_1_1_1()); }

	'triple' 

{ after(grammarAccess.getTopLevelEntityAccess().getTripleKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MainLevelEntity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainLevelEntityAccess().getFunctionHeaderParserRuleCall_0()); }
	ruleFunctionHeader
{ after(grammarAccess.getMainLevelEntityAccess().getFunctionHeaderParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMainLevelEntityAccess().getLocalVarParserRuleCall_1()); }
	ruleLocalVar
{ after(grammarAccess.getMainLevelEntityAccess().getLocalVarParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getGroup_0()); }
(rule__FunctionHeader__Group_0__0)
{ after(grammarAccess.getFunctionHeaderAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFunctionHeaderAccess().getGroup_1()); }
(rule__FunctionHeader__Group_1__0)
{ after(grammarAccess.getFunctionHeaderAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Alternatives_1_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getTListAssignment_1_7_0()); }
(rule__FunctionHeader__TListAssignment_1_7_0)
{ after(grammarAccess.getFunctionHeaderAccess().getTListAssignment_1_7_0()); }
)

    |(
{ before(grammarAccess.getFunctionHeaderAccess().getLeftParenthesisFullStopFullStopFullStopRightParenthesisKeyword_1_7_1()); }

	'(...)' 

{ after(grammarAccess.getFunctionHeaderAccess().getLeftParenthesisFullStopFullStopFullStopRightParenthesisKeyword_1_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVar__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarAccess().getTypeAssignment_2_0()); }
(rule__LocalVar__TypeAssignment_2_0)
{ after(grammarAccess.getLocalVarAccess().getTypeAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getLocalVarAccess().getInstrAssignment_2_1()); }
(rule__LocalVar__InstrAssignment_2_1)
{ after(grammarAccess.getLocalVarAccess().getInstrAssignment_2_1()); }
)

    |(
{ before(grammarAccess.getLocalVarAccess().getAliasAssignment_2_2()); }
(rule__LocalVar__AliasAssignment_2_2)
{ after(grammarAccess.getLocalVarAccess().getAliasAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getStructTypeParserRuleCall_0()); }
	ruleStructType
{ after(grammarAccess.getTypeAccess().getStructTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getVAR_TYPETerminalRuleCall_1()); }
	RULE_VAR_TYPE
{ after(grammarAccess.getTypeAccess().getVAR_TYPETerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getBTypeParserRuleCall_2()); }
	ruleBType
{ after(grammarAccess.getTypeAccess().getBTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAndValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAndValueAccess().getGroup_0()); }
(rule__TypeAndValue__Group_0__0)
{ after(grammarAccess.getTypeAndValueAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTypeAndValueAccess().getGroup_1()); }
(rule__TypeAndValue__Group_1__0)
{ after(grammarAccess.getTypeAndValueAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAndValue__TypeAlternatives_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAndValueAccess().getTypeVAR_TYPETerminalRuleCall_0_0_0_0()); }
	RULE_VAR_TYPE
{ after(grammarAccess.getTypeAndValueAccess().getTypeVAR_TYPETerminalRuleCall_0_0_0_0()); }
)

    |(
{ before(grammarAccess.getTypeAndValueAccess().getTypeBTypeParserRuleCall_0_0_0_1()); }
	ruleBType
{ after(grammarAccess.getTypeAndValueAccess().getTypeBTypeParserRuleCall_0_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getGroup_0()); }
(rule__StructType__Group_0__0)
{ after(grammarAccess.getStructTypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStructTypeAccess().getGroup_1()); }
(rule__StructType__Group_1__0)
{ after(grammarAccess.getStructTypeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Alternatives_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getVAR_TYPETerminalRuleCall_0_1_0_0()); }
	RULE_VAR_TYPE
{ after(grammarAccess.getStructTypeAccess().getVAR_TYPETerminalRuleCall_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getStructTypeAccess().getBTypeParserRuleCall_0_1_0_1()); }
	ruleBType
{ after(grammarAccess.getStructTypeAccess().getBTypeParserRuleCall_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Alternatives_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getVAR_TYPETerminalRuleCall_0_1_1_1_0()); }
	RULE_VAR_TYPE
{ after(grammarAccess.getStructTypeAccess().getVAR_TYPETerminalRuleCall_0_1_1_1_0()); }
)

    |(
{ before(grammarAccess.getStructTypeAccess().getBTypeParserRuleCall_0_1_1_1_1()); }
	ruleBType
{ after(grammarAccess.getStructTypeAccess().getBTypeParserRuleCall_0_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Alternatives_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getVAR_TYPETerminalRuleCall_1_2_0_0()); }
	RULE_VAR_TYPE
{ after(grammarAccess.getStructTypeAccess().getVAR_TYPETerminalRuleCall_1_2_0_0()); }
)

    |(
{ before(grammarAccess.getStructTypeAccess().getBTypeParserRuleCall_1_2_0_1()); }
	ruleBType
{ after(grammarAccess.getStructTypeAccess().getBTypeParserRuleCall_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Alternatives_1_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getVAR_TYPETerminalRuleCall_1_2_1_1_0()); }
	RULE_VAR_TYPE
{ after(grammarAccess.getStructTypeAccess().getVAR_TYPETerminalRuleCall_1_2_1_1_0()); }
)

    |(
{ before(grammarAccess.getStructTypeAccess().getBTypeParserRuleCall_1_2_1_1_1()); }
	ruleBType
{ after(grammarAccess.getStructTypeAccess().getBTypeParserRuleCall_1_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBTypeAccess().getINTEGERTerminalRuleCall_0()); }
	RULE_INTEGER
{ after(grammarAccess.getBTypeAccess().getINTEGERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBTypeAccess().getF_POINTParserRuleCall_1()); }
	ruleF_POINT
{ after(grammarAccess.getBTypeAccess().getF_POINTParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBTypeAccess().getBasicTypeParserRuleCall_2()); }
	ruleBasicType
{ after(grammarAccess.getBTypeAccess().getBasicTypeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getBTypeAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
{ after(grammarAccess.getBTypeAccess().getINTTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicTypeAccess().getVoidKeyword_0()); }

	'void' 

{ after(grammarAccess.getBasicTypeAccess().getVoidKeyword_0()); }
)

    |(
{ before(grammarAccess.getBasicTypeAccess().getNullKeyword_1()); }

	'null' 

{ after(grammarAccess.getBasicTypeAccess().getNullKeyword_1()); }
)

    |(
{ before(grammarAccess.getBasicTypeAccess().getLabelKeyword_2()); }

	'label' 

{ after(grammarAccess.getBasicTypeAccess().getLabelKeyword_2()); }
)

    |(
{ before(grammarAccess.getBasicTypeAccess().getUndefKeyword_3()); }

	'undef' 

{ after(grammarAccess.getBasicTypeAccess().getUndefKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__F_POINT__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getF_POINTAccess().getHalfKeyword_0()); }

	'half' 

{ after(grammarAccess.getF_POINTAccess().getHalfKeyword_0()); }
)

    |(
{ before(grammarAccess.getF_POINTAccess().getFloatKeyword_1()); }

	'float' 

{ after(grammarAccess.getF_POINTAccess().getFloatKeyword_1()); }
)

    |(
{ before(grammarAccess.getF_POINTAccess().getDoubleKeyword_2()); }

	'double' 

{ after(grammarAccess.getF_POINTAccess().getDoubleKeyword_2()); }
)

    |(
{ before(grammarAccess.getF_POINTAccess().getX86_fp80Keyword_3()); }

	'x86_fp80' 

{ after(grammarAccess.getF_POINTAccess().getX86_fp80Keyword_3()); }
)

    |(
{ before(grammarAccess.getF_POINTAccess().getFp128Keyword_4()); }

	'fp128' 

{ after(grammarAccess.getF_POINTAccess().getFp128Keyword_4()); }
)

    |(
{ before(grammarAccess.getF_POINTAccess().getPpc_fp128Keyword_5()); }

	'ppc_fp128' 

{ after(grammarAccess.getF_POINTAccess().getPpc_fp128Keyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ATOMIC_ORDERING__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getATOMIC_ORDERINGAccess().getUnorderedKeyword_0()); }

	'unordered' 

{ after(grammarAccess.getATOMIC_ORDERINGAccess().getUnorderedKeyword_0()); }
)

    |(
{ before(grammarAccess.getATOMIC_ORDERINGAccess().getMonotonicKeyword_1()); }

	'monotonic' 

{ after(grammarAccess.getATOMIC_ORDERINGAccess().getMonotonicKeyword_1()); }
)

    |(
{ before(grammarAccess.getATOMIC_ORDERINGAccess().getAquireKeyword_2()); }

	'aquire' 

{ after(grammarAccess.getATOMIC_ORDERINGAccess().getAquireKeyword_2()); }
)

    |(
{ before(grammarAccess.getATOMIC_ORDERINGAccess().getReleaseKeyword_3()); }

	'release' 

{ after(grammarAccess.getATOMIC_ORDERINGAccess().getReleaseKeyword_3()); }
)

    |(
{ before(grammarAccess.getATOMIC_ORDERINGAccess().getAcq_relKeyword_4()); }

	'acq_rel' 

{ after(grammarAccess.getATOMIC_ORDERINGAccess().getAcq_relKeyword_4()); }
)

    |(
{ before(grammarAccess.getATOMIC_ORDERINGAccess().getSeq_cstKeyword_5()); }

	'seq_cst' 

{ after(grammarAccess.getATOMIC_ORDERINGAccess().getSeq_cstKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BIN_OP__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBIN_OPAccess().getXchgKeyword_0()); }

	'xchg' 

{ after(grammarAccess.getBIN_OPAccess().getXchgKeyword_0()); }
)

    |(
{ before(grammarAccess.getBIN_OPAccess().getAddKeyword_1()); }

	'add' 

{ after(grammarAccess.getBIN_OPAccess().getAddKeyword_1()); }
)

    |(
{ before(grammarAccess.getBIN_OPAccess().getSubKeyword_2()); }

	'sub' 

{ after(grammarAccess.getBIN_OPAccess().getSubKeyword_2()); }
)

    |(
{ before(grammarAccess.getBIN_OPAccess().getAndKeyword_3()); }

	'and' 

{ after(grammarAccess.getBIN_OPAccess().getAndKeyword_3()); }
)

    |(
{ before(grammarAccess.getBIN_OPAccess().getNandKeyword_4()); }

	'nand' 

{ after(grammarAccess.getBIN_OPAccess().getNandKeyword_4()); }
)

    |(
{ before(grammarAccess.getBIN_OPAccess().getOrKeyword_5()); }

	'or' 

{ after(grammarAccess.getBIN_OPAccess().getOrKeyword_5()); }
)

    |(
{ before(grammarAccess.getBIN_OPAccess().getXorKeyword_6()); }

	'xor' 

{ after(grammarAccess.getBIN_OPAccess().getXorKeyword_6()); }
)

    |(
{ before(grammarAccess.getBIN_OPAccess().getMaxKeyword_7()); }

	'max' 

{ after(grammarAccess.getBIN_OPAccess().getMaxKeyword_7()); }
)

    |(
{ before(grammarAccess.getBIN_OPAccess().getMinKeyword_8()); }

	'min' 

{ after(grammarAccess.getBIN_OPAccess().getMinKeyword_8()); }
)

    |(
{ before(grammarAccess.getBIN_OPAccess().getUmaxKeyword_9()); }

	'umax' 

{ after(grammarAccess.getBIN_OPAccess().getUmaxKeyword_9()); }
)

    |(
{ before(grammarAccess.getBIN_OPAccess().getUminKeyword_10()); }

	'umin' 

{ after(grammarAccess.getBIN_OPAccess().getUminKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getGroup_0()); }
(rule__Load__Group_0__0)
{ after(grammarAccess.getLoadAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLoadAccess().getGroup_1()); }
(rule__Load__Group_1__0)
{ after(grammarAccess.getLoadAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getGroup_0()); }
(rule__Store__Group_0__0)
{ after(grammarAccess.getStoreAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStoreAccess().getGroup_1()); }
(rule__Store__Group_1__0)
{ after(grammarAccess.getStoreAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RETURN_ATTRIBUTES__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRETURN_ATTRIBUTESAccess().getZeroextKeyword_0()); }

	'zeroext' 

{ after(grammarAccess.getRETURN_ATTRIBUTESAccess().getZeroextKeyword_0()); }
)

    |(
{ before(grammarAccess.getRETURN_ATTRIBUTESAccess().getSignextKeyword_1()); }

	'signext' 

{ after(grammarAccess.getRETURN_ATTRIBUTESAccess().getSignextKeyword_1()); }
)

    |(
{ before(grammarAccess.getRETURN_ATTRIBUTESAccess().getInregKeyword_2()); }

	'inreg' 

{ after(grammarAccess.getRETURN_ATTRIBUTESAccess().getInregKeyword_2()); }
)

    |(
{ before(grammarAccess.getRETURN_ATTRIBUTESAccess().getByvalKeyword_3()); }

	'byval' 

{ after(grammarAccess.getRETURN_ATTRIBUTESAccess().getByvalKeyword_3()); }
)

    |(
{ before(grammarAccess.getRETURN_ATTRIBUTESAccess().getSretKeyword_4()); }

	'sret' 

{ after(grammarAccess.getRETURN_ATTRIBUTESAccess().getSretKeyword_4()); }
)

    |(
{ before(grammarAccess.getRETURN_ATTRIBUTESAccess().getNoaliasKeyword_5()); }

	'noalias' 

{ after(grammarAccess.getRETURN_ATTRIBUTESAccess().getNoaliasKeyword_5()); }
)

    |(
{ before(grammarAccess.getRETURN_ATTRIBUTESAccess().getNocaptureKeyword_6()); }

	'nocapture' 

{ after(grammarAccess.getRETURN_ATTRIBUTESAccess().getNocaptureKeyword_6()); }
)

    |(
{ before(grammarAccess.getRETURN_ATTRIBUTESAccess().getNestKeyword_7()); }

	'nest' 

{ after(grammarAccess.getRETURN_ATTRIBUTESAccess().getNestKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallingConv__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallingConvAccess().getCccKeyword_0()); }

	'ccc' 

{ after(grammarAccess.getCallingConvAccess().getCccKeyword_0()); }
)

    |(
{ before(grammarAccess.getCallingConvAccess().getFastccKeyword_1()); }

	'fastcc' 

{ after(grammarAccess.getCallingConvAccess().getFastccKeyword_1()); }
)

    |(
{ before(grammarAccess.getCallingConvAccess().getColdccKeyword_2()); }

	'coldcc' 

{ after(grammarAccess.getCallingConvAccess().getColdccKeyword_2()); }
)

    |(
{ before(grammarAccess.getCallingConvAccess().getX86_stdcallccKeyword_3()); }

	'x86_stdcallcc' 

{ after(grammarAccess.getCallingConvAccess().getX86_stdcallccKeyword_3()); }
)

    |(
{ before(grammarAccess.getCallingConvAccess().getX86_fastcallccKeyword_4()); }

	'x86_fastcallcc' 

{ after(grammarAccess.getCallingConvAccess().getX86_fastcallccKeyword_4()); }
)

    |(
{ before(grammarAccess.getCallingConvAccess().getX86_thiscallccKeyword_5()); }

	'x86_thiscallcc' 

{ after(grammarAccess.getCallingConvAccess().getX86_thiscallccKeyword_5()); }
)

    |(
{ before(grammarAccess.getCallingConvAccess().getArm_apcsccKeyword_6()); }

	'arm_apcscc' 

{ after(grammarAccess.getCallingConvAccess().getArm_apcsccKeyword_6()); }
)

    |(
{ before(grammarAccess.getCallingConvAccess().getArm_aapcsccKeyword_7()); }

	'arm_aapcscc' 

{ after(grammarAccess.getCallingConvAccess().getArm_aapcsccKeyword_7()); }
)

    |(
{ before(grammarAccess.getCallingConvAccess().getArm_aapcs_vfpccKeyword_8()); }

	'arm_aapcs_vfpcc' 

{ after(grammarAccess.getCallingConvAccess().getArm_aapcs_vfpccKeyword_8()); }
)

    |(
{ before(grammarAccess.getCallingConvAccess().getMsp430_intrccKeyword_9()); }

	'msp430_intrcc' 

{ after(grammarAccess.getCallingConvAccess().getMsp430_intrccKeyword_9()); }
)

    |(
{ before(grammarAccess.getCallingConvAccess().getPtx_kernelKeyword_10()); }

	'ptx_kernel' 

{ after(grammarAccess.getCallingConvAccess().getPtx_kernelKeyword_10()); }
)

    |(
{ before(grammarAccess.getCallingConvAccess().getPtx_deviceKeyword_11()); }

	'ptx_device' 

{ after(grammarAccess.getCallingConvAccess().getPtx_deviceKeyword_11()); }
)

    |(
{ before(grammarAccess.getCallingConvAccess().getSpir_funcKeyword_12()); }

	'spir_func' 

{ after(grammarAccess.getCallingConvAccess().getSpir_funcKeyword_12()); }
)

    |(
{ before(grammarAccess.getCallingConvAccess().getSpir_kernelKeyword_13()); }

	'spir_kernel' 

{ after(grammarAccess.getCallingConvAccess().getSpir_kernelKeyword_13()); }
)

    |(
{ before(grammarAccess.getCallingConvAccess().getGroup_14()); }
(rule__CallingConv__Group_14__0)
{ after(grammarAccess.getCallingConvAccess().getGroup_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCTION_ATTRIBUTES__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getAddress_safetyKeyword_0()); }

	'address_safety' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getAddress_safetyKeyword_0()); }
)

    |(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getGroup_1()); }
(rule__FUNCTION_ATTRIBUTES__Group_1__0)
{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getAlwaysinlineKeyword_2()); }

	'alwaysinline' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getAlwaysinlineKeyword_2()); }
)

    |(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNonlazybindKeyword_3()); }

	'nonlazybind' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNonlazybindKeyword_3()); }
)

    |(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getInlinehintKeyword_4()); }

	'inlinehint' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getInlinehintKeyword_4()); }
)

    |(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNakedKeyword_5()); }

	'naked' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNakedKeyword_5()); }
)

    |(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNoimplicitfloatKeyword_6()); }

	'noimplicitfloat' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNoimplicitfloatKeyword_6()); }
)

    |(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNoinlineKeyword_7()); }

	'noinline' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNoinlineKeyword_7()); }
)

    |(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNoredzoneKeyword_8()); }

	'noredzone' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNoredzoneKeyword_8()); }
)

    |(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNoreturnKeyword_9()); }

	'noreturn' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNoreturnKeyword_9()); }
)

    |(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNounwindKeyword_10()); }

	'nounwind' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNounwindKeyword_10()); }
)

    |(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getOptsizeKeyword_11()); }

	'optsize' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getOptsizeKeyword_11()); }
)

    |(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getReadnoneKeyword_12()); }

	'readnone' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getReadnoneKeyword_12()); }
)

    |(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getReadonlyKeyword_13()); }

	'readonly' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getReadonlyKeyword_13()); }
)

    |(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getReturns_twiceKeyword_14()); }

	'returns_twice' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getReturns_twiceKeyword_14()); }
)

    |(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getSspKeyword_15()); }

	'ssp' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getSspKeyword_15()); }
)

    |(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getSspreqKeyword_16()); }

	'sspreq' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getSspreqKeyword_16()); }
)

    |(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getUwtableKeyword_17()); }

	'uwtable' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getUwtableKeyword_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getGroup_0()); }
(rule__LandingPad__Group_0__0)
{ after(grammarAccess.getLandingPadAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLandingPadAccess().getGroup_1()); }
(rule__LandingPad__Group_1__0)
{ after(grammarAccess.getLandingPadAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Alternatives_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getGroup_0_4_0()); }
(rule__LandingPad__Group_0_4_0__0)
{ after(grammarAccess.getLandingPadAccess().getGroup_0_4_0()); }
)

    |(
(
{ before(grammarAccess.getLandingPadAccess().getClauseAssignment_0_4_1()); }
(rule__LandingPad__ClauseAssignment_0_4_1)
{ after(grammarAccess.getLandingPadAccess().getClauseAssignment_0_4_1()); }
)
(
{ before(grammarAccess.getLandingPadAccess().getClauseAssignment_0_4_1()); }
(rule__LandingPad__ClauseAssignment_0_4_1)*
{ after(grammarAccess.getLandingPadAccess().getClauseAssignment_0_4_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Alternatives_1_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getGroup_1_12_0()); }
(rule__LandingPad__Group_1_12_0__0)
{ after(grammarAccess.getLandingPadAccess().getGroup_1_12_0()); }
)

    |(
(
{ before(grammarAccess.getLandingPadAccess().getClauseAssignment_1_12_1()); }
(rule__LandingPad__ClauseAssignment_1_12_1)
{ after(grammarAccess.getLandingPadAccess().getClauseAssignment_1_12_1()); }
)
(
{ before(grammarAccess.getLandingPadAccess().getClauseAssignment_1_12_1()); }
(rule__LandingPad__ClauseAssignment_1_12_1)*
{ after(grammarAccess.getLandingPadAccess().getClauseAssignment_1_12_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseAccess().getGroup_0()); }
(rule__Clause__Group_0__0)
{ after(grammarAccess.getClauseAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getClauseAccess().getGroup_1()); }
(rule__Clause__Group_1__0)
{ after(grammarAccess.getClauseAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CAST_TYPE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCAST_TYPEAccess().getTruncKeyword_0()); }

	'trunc' 

{ after(grammarAccess.getCAST_TYPEAccess().getTruncKeyword_0()); }
)

    |(
{ before(grammarAccess.getCAST_TYPEAccess().getZextKeyword_1()); }

	'zext' 

{ after(grammarAccess.getCAST_TYPEAccess().getZextKeyword_1()); }
)

    |(
{ before(grammarAccess.getCAST_TYPEAccess().getSextKeyword_2()); }

	'sext' 

{ after(grammarAccess.getCAST_TYPEAccess().getSextKeyword_2()); }
)

    |(
{ before(grammarAccess.getCAST_TYPEAccess().getFptruncKeyword_3()); }

	'fptrunc' 

{ after(grammarAccess.getCAST_TYPEAccess().getFptruncKeyword_3()); }
)

    |(
{ before(grammarAccess.getCAST_TYPEAccess().getFpextKeyword_4()); }

	'fpext' 

{ after(grammarAccess.getCAST_TYPEAccess().getFpextKeyword_4()); }
)

    |(
{ before(grammarAccess.getCAST_TYPEAccess().getFptouiKeyword_5()); }

	'fptoui' 

{ after(grammarAccess.getCAST_TYPEAccess().getFptouiKeyword_5()); }
)

    |(
{ before(grammarAccess.getCAST_TYPEAccess().getFptosiKeyword_6()); }

	'fptosi' 

{ after(grammarAccess.getCAST_TYPEAccess().getFptosiKeyword_6()); }
)

    |(
{ before(grammarAccess.getCAST_TYPEAccess().getUitofpKeyword_7()); }

	'uitofp' 

{ after(grammarAccess.getCAST_TYPEAccess().getUitofpKeyword_7()); }
)

    |(
{ before(grammarAccess.getCAST_TYPEAccess().getSitofpKeyword_8()); }

	'sitofp' 

{ after(grammarAccess.getCAST_TYPEAccess().getSitofpKeyword_8()); }
)

    |(
{ before(grammarAccess.getCAST_TYPEAccess().getPtrtointKeyword_9()); }

	'ptrtoint' 

{ after(grammarAccess.getCAST_TYPEAccess().getPtrtointKeyword_9()); }
)

    |(
{ before(grammarAccess.getCAST_TYPEAccess().getInttoptrKeyword_10()); }

	'inttoptr' 

{ after(grammarAccess.getCAST_TYPEAccess().getInttoptrKeyword_10()); }
)

    |(
{ before(grammarAccess.getCAST_TYPEAccess().getBitcastKeyword_11()); }

	'bitcast' 

{ after(grammarAccess.getCAST_TYPEAccess().getBitcastKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareAccess().getGroup_0()); }
(rule__Compare__Group_0__0)
{ after(grammarAccess.getCompareAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCompareAccess().getGroup_1()); }
(rule__Compare__Group_1__0)
{ after(grammarAccess.getCompareAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__I_PREDICATES__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getI_PREDICATESAccess().getEqKeyword_0()); }

	'eq' 

{ after(grammarAccess.getI_PREDICATESAccess().getEqKeyword_0()); }
)

    |(
{ before(grammarAccess.getI_PREDICATESAccess().getNeKeyword_1()); }

	'ne' 

{ after(grammarAccess.getI_PREDICATESAccess().getNeKeyword_1()); }
)

    |(
{ before(grammarAccess.getI_PREDICATESAccess().getUgtKeyword_2()); }

	'ugt' 

{ after(grammarAccess.getI_PREDICATESAccess().getUgtKeyword_2()); }
)

    |(
{ before(grammarAccess.getI_PREDICATESAccess().getUgeKeyword_3()); }

	'uge' 

{ after(grammarAccess.getI_PREDICATESAccess().getUgeKeyword_3()); }
)

    |(
{ before(grammarAccess.getI_PREDICATESAccess().getUltKeyword_4()); }

	'ult' 

{ after(grammarAccess.getI_PREDICATESAccess().getUltKeyword_4()); }
)

    |(
{ before(grammarAccess.getI_PREDICATESAccess().getUleKeyword_5()); }

	'ule' 

{ after(grammarAccess.getI_PREDICATESAccess().getUleKeyword_5()); }
)

    |(
{ before(grammarAccess.getI_PREDICATESAccess().getSgtKeyword_6()); }

	'sgt' 

{ after(grammarAccess.getI_PREDICATESAccess().getSgtKeyword_6()); }
)

    |(
{ before(grammarAccess.getI_PREDICATESAccess().getSgeKeyword_7()); }

	'sge' 

{ after(grammarAccess.getI_PREDICATESAccess().getSgeKeyword_7()); }
)

    |(
{ before(grammarAccess.getI_PREDICATESAccess().getSltKeyword_8()); }

	'slt' 

{ after(grammarAccess.getI_PREDICATESAccess().getSltKeyword_8()); }
)

    |(
{ before(grammarAccess.getI_PREDICATESAccess().getSleKeyword_9()); }

	'sle' 

{ after(grammarAccess.getI_PREDICATESAccess().getSleKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__F_PREDICATES__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getF_PREDICATESAccess().getFalseKeyword_0()); }

	'false' 

{ after(grammarAccess.getF_PREDICATESAccess().getFalseKeyword_0()); }
)

    |(
{ before(grammarAccess.getF_PREDICATESAccess().getOeqKeyword_1()); }

	'oeq' 

{ after(grammarAccess.getF_PREDICATESAccess().getOeqKeyword_1()); }
)

    |(
{ before(grammarAccess.getF_PREDICATESAccess().getOgtKeyword_2()); }

	'ogt' 

{ after(grammarAccess.getF_PREDICATESAccess().getOgtKeyword_2()); }
)

    |(
{ before(grammarAccess.getF_PREDICATESAccess().getOgeKeyword_3()); }

	'oge' 

{ after(grammarAccess.getF_PREDICATESAccess().getOgeKeyword_3()); }
)

    |(
{ before(grammarAccess.getF_PREDICATESAccess().getOltKeyword_4()); }

	'olt' 

{ after(grammarAccess.getF_PREDICATESAccess().getOltKeyword_4()); }
)

    |(
{ before(grammarAccess.getF_PREDICATESAccess().getOleKeyword_5()); }

	'ole' 

{ after(grammarAccess.getF_PREDICATESAccess().getOleKeyword_5()); }
)

    |(
{ before(grammarAccess.getF_PREDICATESAccess().getOneKeyword_6()); }

	'one' 

{ after(grammarAccess.getF_PREDICATESAccess().getOneKeyword_6()); }
)

    |(
{ before(grammarAccess.getF_PREDICATESAccess().getOrdKeyword_7()); }

	'ord' 

{ after(grammarAccess.getF_PREDICATESAccess().getOrdKeyword_7()); }
)

    |(
{ before(grammarAccess.getF_PREDICATESAccess().getUeqKeyword_8()); }

	'ueq' 

{ after(grammarAccess.getF_PREDICATESAccess().getUeqKeyword_8()); }
)

    |(
{ before(grammarAccess.getF_PREDICATESAccess().getUgtKeyword_9()); }

	'ugt' 

{ after(grammarAccess.getF_PREDICATESAccess().getUgtKeyword_9()); }
)

    |(
{ before(grammarAccess.getF_PREDICATESAccess().getUgeKeyword_10()); }

	'uge' 

{ after(grammarAccess.getF_PREDICATESAccess().getUgeKeyword_10()); }
)

    |(
{ before(grammarAccess.getF_PREDICATESAccess().getUltKeyword_11()); }

	'ult' 

{ after(grammarAccess.getF_PREDICATESAccess().getUltKeyword_11()); }
)

    |(
{ before(grammarAccess.getF_PREDICATESAccess().getUleKeyword_12()); }

	'ule' 

{ after(grammarAccess.getF_PREDICATESAccess().getUleKeyword_12()); }
)

    |(
{ before(grammarAccess.getF_PREDICATESAccess().getUneKeyword_13()); }

	'une' 

{ after(grammarAccess.getF_PREDICATESAccess().getUneKeyword_13()); }
)

    |(
{ before(grammarAccess.getF_PREDICATESAccess().getUnoKeyword_14()); }

	'uno' 

{ after(grammarAccess.getF_PREDICATESAccess().getUnoKeyword_14()); }
)

    |(
{ before(grammarAccess.getF_PREDICATESAccess().getTrueKeyword_15()); }

	'true' 

{ after(grammarAccess.getF_PREDICATESAccess().getTrueKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ARITHMETIC_OP__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getARITHMETIC_OPAccess().getAddKeyword_0()); }

	'add' 

{ after(grammarAccess.getARITHMETIC_OPAccess().getAddKeyword_0()); }
)

    |(
{ before(grammarAccess.getARITHMETIC_OPAccess().getFaddKeyword_1()); }

	'fadd' 

{ after(grammarAccess.getARITHMETIC_OPAccess().getFaddKeyword_1()); }
)

    |(
{ before(grammarAccess.getARITHMETIC_OPAccess().getSubKeyword_2()); }

	'sub' 

{ after(grammarAccess.getARITHMETIC_OPAccess().getSubKeyword_2()); }
)

    |(
{ before(grammarAccess.getARITHMETIC_OPAccess().getFsubKeyword_3()); }

	'fsub' 

{ after(grammarAccess.getARITHMETIC_OPAccess().getFsubKeyword_3()); }
)

    |(
{ before(grammarAccess.getARITHMETIC_OPAccess().getMulKeyword_4()); }

	'mul' 

{ after(grammarAccess.getARITHMETIC_OPAccess().getMulKeyword_4()); }
)

    |(
{ before(grammarAccess.getARITHMETIC_OPAccess().getFmulKeyword_5()); }

	'fmul' 

{ after(grammarAccess.getARITHMETIC_OPAccess().getFmulKeyword_5()); }
)

    |(
{ before(grammarAccess.getARITHMETIC_OPAccess().getUdivKeyword_6()); }

	'udiv' 

{ after(grammarAccess.getARITHMETIC_OPAccess().getUdivKeyword_6()); }
)

    |(
{ before(grammarAccess.getARITHMETIC_OPAccess().getSdivKeyword_7()); }

	'sdiv' 

{ after(grammarAccess.getARITHMETIC_OPAccess().getSdivKeyword_7()); }
)

    |(
{ before(grammarAccess.getARITHMETIC_OPAccess().getFdivKeyword_8()); }

	'fdiv' 

{ after(grammarAccess.getARITHMETIC_OPAccess().getFdivKeyword_8()); }
)

    |(
{ before(grammarAccess.getARITHMETIC_OPAccess().getUremKeyword_9()); }

	'urem' 

{ after(grammarAccess.getARITHMETIC_OPAccess().getUremKeyword_9()); }
)

    |(
{ before(grammarAccess.getARITHMETIC_OPAccess().getSremKeyword_10()); }

	'srem' 

{ after(grammarAccess.getARITHMETIC_OPAccess().getSremKeyword_10()); }
)

    |(
{ before(grammarAccess.getARITHMETIC_OPAccess().getFremKeyword_11()); }

	'frem' 

{ after(grammarAccess.getARITHMETIC_OPAccess().getFremKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LOGICAL_OP__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLOGICAL_OPAccess().getShlKeyword_0()); }

	'shl' 

{ after(grammarAccess.getLOGICAL_OPAccess().getShlKeyword_0()); }
)

    |(
{ before(grammarAccess.getLOGICAL_OPAccess().getLshrKeyword_1()); }

	'lshr' 

{ after(grammarAccess.getLOGICAL_OPAccess().getLshrKeyword_1()); }
)

    |(
{ before(grammarAccess.getLOGICAL_OPAccess().getAshrKeyword_2()); }

	'ashr' 

{ after(grammarAccess.getLOGICAL_OPAccess().getAshrKeyword_2()); }
)

    |(
{ before(grammarAccess.getLOGICAL_OPAccess().getAndKeyword_3()); }

	'and' 

{ after(grammarAccess.getLOGICAL_OPAccess().getAndKeyword_3()); }
)

    |(
{ before(grammarAccess.getLOGICAL_OPAccess().getOrKeyword_4()); }

	'or' 

{ after(grammarAccess.getLOGICAL_OPAccess().getOrKeyword_4()); }
)

    |(
{ before(grammarAccess.getLOGICAL_OPAccess().getXorKeyword_5()); }

	'xor' 

{ after(grammarAccess.getLOGICAL_OPAccess().getXorKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getSwitchParserRuleCall_0()); }
	ruleSwitch
{ after(grammarAccess.getInstructionAccess().getSwitchParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getIndirectBranchParserRuleCall_1()); }
	ruleIndirectBranch
{ after(grammarAccess.getInstructionAccess().getIndirectBranchParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getBranchParserRuleCall_2()); }
	ruleBranch
{ after(grammarAccess.getInstructionAccess().getBranchParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getReturnParserRuleCall_3()); }
	ruleReturn
{ after(grammarAccess.getInstructionAccess().getReturnParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getLoadParserRuleCall_4()); }
	ruleLoad
{ after(grammarAccess.getInstructionAccess().getLoadParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getStoreParserRuleCall_5()); }
	ruleStore
{ after(grammarAccess.getInstructionAccess().getStoreParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getFenceParserRuleCall_6()); }
	ruleFence
{ after(grammarAccess.getInstructionAccess().getFenceParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getGetElementPtrParserRuleCall_7()); }
	ruleGetElementPtr
{ after(grammarAccess.getInstructionAccess().getGetElementPtrParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getLogicalParserRuleCall_8()); }
	ruleLogical
{ after(grammarAccess.getInstructionAccess().getLogicalParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getArithmeticParserRuleCall_9()); }
	ruleArithmetic
{ after(grammarAccess.getInstructionAccess().getArithmeticParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getCompareParserRuleCall_10()); }
	ruleCompare
{ after(grammarAccess.getInstructionAccess().getCompareParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getCastParserRuleCall_11()); }
	ruleCast
{ after(grammarAccess.getInstructionAccess().getCastParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getShuffleVectorParserRuleCall_12()); }
	ruleShuffleVector
{ after(grammarAccess.getInstructionAccess().getShuffleVectorParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getInsertElementParserRuleCall_13()); }
	ruleInsertElement
{ after(grammarAccess.getInstructionAccess().getInsertElementParserRuleCall_13()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getExtractElementParserRuleCall_14()); }
	ruleExtractElement
{ after(grammarAccess.getInstructionAccess().getExtractElementParserRuleCall_14()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getInvokeParserRuleCall_15()); }
	ruleInvoke
{ after(grammarAccess.getInstructionAccess().getInvokeParserRuleCall_15()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getResumeParserRuleCall_16()); }
	ruleResume
{ after(grammarAccess.getInstructionAccess().getResumeParserRuleCall_16()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getInsertValueParserRuleCall_17()); }
	ruleInsertValue
{ after(grammarAccess.getInstructionAccess().getInsertValueParserRuleCall_17()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getExtractValueParserRuleCall_18()); }
	ruleExtractValue
{ after(grammarAccess.getInstructionAccess().getExtractValueParserRuleCall_18()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getAllocParserRuleCall_19()); }
	ruleAlloc
{ after(grammarAccess.getInstructionAccess().getAllocParserRuleCall_19()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getCmpXchgParserRuleCall_20()); }
	ruleCmpXchg
{ after(grammarAccess.getInstructionAccess().getCmpXchgParserRuleCall_20()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getAtomicRMWParserRuleCall_21()); }
	ruleAtomicRMW
{ after(grammarAccess.getInstructionAccess().getAtomicRMWParserRuleCall_21()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getPHIParserRuleCall_22()); }
	rulePHI
{ after(grammarAccess.getInstructionAccess().getPHIParserRuleCall_22()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getSelectParserRuleCall_23()); }
	ruleSelect
{ after(grammarAccess.getInstructionAccess().getSelectParserRuleCall_23()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getCallParserRuleCall_24()); }
	ruleCall
{ after(grammarAccess.getInstructionAccess().getCallParserRuleCall_24()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getVA_ArgParserRuleCall_25()); }
	ruleVA_Arg
{ after(grammarAccess.getInstructionAccess().getVA_ArgParserRuleCall_25()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getLandingPadParserRuleCall_26()); }
	ruleLandingPad
{ after(grammarAccess.getInstructionAccess().getLandingPadParserRuleCall_26()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getLocalVarParserRuleCall_27()); }
	ruleLocalVar
{ after(grammarAccess.getInstructionAccess().getLocalVarParserRuleCall_27()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getGroup_0()); }
(rule__Return__Group_0__0)
{ after(grammarAccess.getReturnAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getReturnAccess().getGroup_1()); }
(rule__Return__Group_1__0)
{ after(grammarAccess.getReturnAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Branch__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBranchAccess().getGroup_0()); }
(rule__Branch__Group_0__0)
{ after(grammarAccess.getBranchAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getBranchAccess().getGroup_1()); }
(rule__Branch__Group_1__0)
{ after(grammarAccess.getBranchAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VISIBILITY__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVISIBILITYAccess().getDefaultKeyword_0()); }

	'default' 

{ after(grammarAccess.getVISIBILITYAccess().getDefaultKeyword_0()); }
)

    |(
{ before(grammarAccess.getVISIBILITYAccess().getHiddenKeyword_1()); }

	'hidden' 

{ after(grammarAccess.getVISIBILITYAccess().getHiddenKeyword_1()); }
)

    |(
{ before(grammarAccess.getVISIBILITYAccess().getProtectedKeyword_2()); }

	'protected' 

{ after(grammarAccess.getVISIBILITYAccess().getProtectedKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LINKAGE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLINKAGEAccess().getPrivateKeyword_0()); }

	'private' 

{ after(grammarAccess.getLINKAGEAccess().getPrivateKeyword_0()); }
)

    |(
{ before(grammarAccess.getLINKAGEAccess().getLinker_privateKeyword_1()); }

	'linker_private' 

{ after(grammarAccess.getLINKAGEAccess().getLinker_privateKeyword_1()); }
)

    |(
{ before(grammarAccess.getLINKAGEAccess().getLinker_private_weakKeyword_2()); }

	'linker_private_weak' 

{ after(grammarAccess.getLINKAGEAccess().getLinker_private_weakKeyword_2()); }
)

    |(
{ before(grammarAccess.getLINKAGEAccess().getAvailable_externallyKeyword_3()); }

	'available_externally' 

{ after(grammarAccess.getLINKAGEAccess().getAvailable_externallyKeyword_3()); }
)

    |(
{ before(grammarAccess.getLINKAGEAccess().getLinkonceKeyword_4()); }

	'linkonce' 

{ after(grammarAccess.getLINKAGEAccess().getLinkonceKeyword_4()); }
)

    |(
{ before(grammarAccess.getLINKAGEAccess().getCommonKeyword_5()); }

	'common' 

{ after(grammarAccess.getLINKAGEAccess().getCommonKeyword_5()); }
)

    |(
{ before(grammarAccess.getLINKAGEAccess().getAppendingKeyword_6()); }

	'appending' 

{ after(grammarAccess.getLINKAGEAccess().getAppendingKeyword_6()); }
)

    |(
{ before(grammarAccess.getLINKAGEAccess().getExtern_weakKeyword_7()); }

	'extern_weak' 

{ after(grammarAccess.getLINKAGEAccess().getExtern_weakKeyword_7()); }
)

    |(
{ before(grammarAccess.getLINKAGEAccess().getLinkonce_odrKeyword_8()); }

	'linkonce_odr' 

{ after(grammarAccess.getLINKAGEAccess().getLinkonce_odrKeyword_8()); }
)

    |(
{ before(grammarAccess.getLINKAGEAccess().getLinkonce_odr_auto_hideKeyword_9()); }

	'linkonce_odr_auto_hide' 

{ after(grammarAccess.getLINKAGEAccess().getLinkonce_odr_auto_hideKeyword_9()); }
)

    |(
{ before(grammarAccess.getLINKAGEAccess().getDllimportKeyword_10()); }

	'dllimport' 

{ after(grammarAccess.getLINKAGEAccess().getDllimportKeyword_10()); }
)

    |(
{ before(grammarAccess.getLINKAGEAccess().getDllexportKeyword_11()); }

	'dllexport' 

{ after(grammarAccess.getLINKAGEAccess().getDllexportKeyword_11()); }
)

    |(
{ before(grammarAccess.getLINKAGEAccess().getALIAS_LINKAGEParserRuleCall_12()); }
	ruleALIAS_LINKAGE
{ after(grammarAccess.getLINKAGEAccess().getALIAS_LINKAGEParserRuleCall_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ALIAS_LINKAGE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getALIAS_LINKAGEAccess().getExternalKeyword_0()); }

	'external' 

{ after(grammarAccess.getALIAS_LINKAGEAccess().getExternalKeyword_0()); }
)

    |(
{ before(grammarAccess.getALIAS_LINKAGEAccess().getInternalKeyword_1()); }

	'internal' 

{ after(grammarAccess.getALIAS_LINKAGEAccess().getInternalKeyword_1()); }
)

    |(
{ before(grammarAccess.getALIAS_LINKAGEAccess().getWeakKeyword_2()); }

	'weak' 

{ after(grammarAccess.getALIAS_LINKAGEAccess().getWeakKeyword_2()); }
)

    |(
{ before(grammarAccess.getALIAS_LINKAGEAccess().getWeak_odrKeyword_3()); }

	'weak_odr' 

{ after(grammarAccess.getALIAS_LINKAGEAccess().getWeak_odrKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AbstractElement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractElement__Group_0__0__Impl
	rule__AbstractElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractElement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractElementAccess().getTopLevelEntityParserRuleCall_0_0()); }
	ruleTopLevelEntity
{ after(grammarAccess.getAbstractElementAccess().getTopLevelEntityParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractElement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractElement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractElement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractElementAccess().getSL_COMMENTTerminalRuleCall_0_1()); }
(	RULE_SL_COMMENT)?
{ after(grammarAccess.getAbstractElementAccess().getSL_COMMENTTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AbstractElement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractElement__Group_1__0__Impl
	rule__AbstractElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractElement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractElementAccess().getMainLevelEntityParserRuleCall_1_0()); }
	ruleMainLevelEntity
{ after(grammarAccess.getAbstractElementAccess().getMainLevelEntityParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractElement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbstractElement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractElement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractElementAccess().getSL_COMMENTTerminalRuleCall_1_1()); }
(	RULE_SL_COMMENT)?
{ after(grammarAccess.getAbstractElementAccess().getSL_COMMENTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TopLevelEntity__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelEntity__Group_0__0__Impl
	rule__TopLevelEntity__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getModuleKeyword_0_0()); }

	'module' 

{ after(grammarAccess.getTopLevelEntityAccess().getModuleKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelEntity__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelEntity__Group_0__1__Impl
	rule__TopLevelEntity__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getAsmKeyword_0_1()); }

	'asm' 

{ after(grammarAccess.getTopLevelEntityAccess().getAsmKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelEntity__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelEntity__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getModuleAssignment_0_2()); }
(rule__TopLevelEntity__ModuleAssignment_0_2)
{ after(grammarAccess.getTopLevelEntityAccess().getModuleAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TopLevelEntity__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelEntity__Group_1__0__Impl
	rule__TopLevelEntity__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getTargetKeyword_1_0()); }

	'target' 

{ after(grammarAccess.getTopLevelEntityAccess().getTargetKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelEntity__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelEntity__Group_1__1__Impl
	rule__TopLevelEntity__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getAlternatives_1_1()); }
(rule__TopLevelEntity__Alternatives_1_1)
{ after(grammarAccess.getTopLevelEntityAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelEntity__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelEntity__Group_1__2__Impl
	rule__TopLevelEntity__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getEqualsSignKeyword_1_2()); }

	'=' 

{ after(grammarAccess.getTopLevelEntityAccess().getEqualsSignKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelEntity__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelEntity__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getTargetAssignment_1_3()); }
(rule__TopLevelEntity__TargetAssignment_1_3)
{ after(grammarAccess.getTopLevelEntityAccess().getTargetAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TopLevelEntity__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelEntity__Group_2__0__Impl
	rule__TopLevelEntity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getDeplibsKeyword_2_0()); }

	'deplibs' 

{ after(grammarAccess.getTopLevelEntityAccess().getDeplibsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelEntity__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelEntity__Group_2__1__Impl
	rule__TopLevelEntity__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getEqualsSignKeyword_2_1()); }

	'=' 

{ after(grammarAccess.getTopLevelEntityAccess().getEqualsSignKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelEntity__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelEntity__Group_2__2__Impl
	rule__TopLevelEntity__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getLeftSquareBracketKeyword_2_2()); }

	'[' 

{ after(grammarAccess.getTopLevelEntityAccess().getLeftSquareBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelEntity__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelEntity__Group_2__3__Impl
	rule__TopLevelEntity__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getLibsAssignment_2_3()); }
(rule__TopLevelEntity__LibsAssignment_2_3)
{ after(grammarAccess.getTopLevelEntityAccess().getLibsAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelEntity__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelEntity__Group_2__4__Impl
	rule__TopLevelEntity__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getGroup_2_4()); }
(rule__TopLevelEntity__Group_2_4__0)*
{ after(grammarAccess.getTopLevelEntityAccess().getGroup_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelEntity__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelEntity__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getRightSquareBracketKeyword_2_5()); }

	']' 

{ after(grammarAccess.getTopLevelEntityAccess().getRightSquareBracketKeyword_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TopLevelEntity__Group_2_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelEntity__Group_2_4__0__Impl
	rule__TopLevelEntity__Group_2_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__Group_2_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getCommaKeyword_2_4_0()); }

	',' 

{ after(grammarAccess.getTopLevelEntityAccess().getCommaKeyword_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelEntity__Group_2_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TopLevelEntity__Group_2_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__Group_2_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getLibsAssignment_2_4_1()); }
(rule__TopLevelEntity__LibsAssignment_2_4_1)
{ after(grammarAccess.getTopLevelEntityAccess().getLibsAssignment_2_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionHeader__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_0__0__Impl
	rule__FunctionHeader__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getDefineKeyword_0_0()); }

	'define' 

{ after(grammarAccess.getFunctionHeaderAccess().getDefineKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_0__1__Impl
	rule__FunctionHeader__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getLINKAGEParserRuleCall_0_1()); }
(	ruleLINKAGE)?
{ after(grammarAccess.getFunctionHeaderAccess().getLINKAGEParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_0__2__Impl
	rule__FunctionHeader__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getVISIBILITYParserRuleCall_0_2()); }
(	ruleVISIBILITY)?
{ after(grammarAccess.getFunctionHeaderAccess().getVISIBILITYParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_0__3__Impl
	rule__FunctionHeader__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getCallingConvParserRuleCall_0_3()); }
(	ruleCallingConv)?
{ after(grammarAccess.getFunctionHeaderAccess().getCallingConvParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_0__4__Impl
	rule__FunctionHeader__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getRETURN_ATTRIBUTESParserRuleCall_0_4()); }
(	ruleRETURN_ATTRIBUTES)?
{ after(grammarAccess.getFunctionHeaderAccess().getRETURN_ATTRIBUTESParserRuleCall_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_0__5__Impl
	rule__FunctionHeader__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getReturnTypeAssignment_0_5()); }
(rule__FunctionHeader__ReturnTypeAssignment_0_5)
{ after(grammarAccess.getFunctionHeaderAccess().getReturnTypeAssignment_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_0__6__Impl
	rule__FunctionHeader__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getNameAssignment_0_6()); }
(rule__FunctionHeader__NameAssignment_0_6)
{ after(grammarAccess.getFunctionHeaderAccess().getNameAssignment_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_0__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_0__7__Impl
	rule__FunctionHeader__Group_0__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_0__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getPListAssignment_0_7()); }
(rule__FunctionHeader__PListAssignment_0_7)
{ after(grammarAccess.getFunctionHeaderAccess().getPListAssignment_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_0__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_0__8__Impl
	rule__FunctionHeader__Group_0__9
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_0__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getUnnamed_addrKeyword_0_8()); }
(
	'unnamed_addr' 
)?
{ after(grammarAccess.getFunctionHeaderAccess().getUnnamed_addrKeyword_0_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_0__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_0__9__Impl
	rule__FunctionHeader__Group_0__10
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_0__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getFUNCTION_ATTRIBUTESParserRuleCall_0_9()); }
(	ruleFUNCTION_ATTRIBUTES)?
{ after(grammarAccess.getFunctionHeaderAccess().getFUNCTION_ATTRIBUTESParserRuleCall_0_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_0__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_0__10__Impl
	rule__FunctionHeader__Group_0__11
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_0__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getGroup_0_10()); }
(rule__FunctionHeader__Group_0_10__0)?
{ after(grammarAccess.getFunctionHeaderAccess().getGroup_0_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_0__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_0__11__Impl
	rule__FunctionHeader__Group_0__12
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_0__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getALIGNMENTParserRuleCall_0_11()); }
(	ruleALIGNMENT)?
{ after(grammarAccess.getFunctionHeaderAccess().getALIGNMENTParserRuleCall_0_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_0__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_0__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_0__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getBodyAssignment_0_12()); }
(rule__FunctionHeader__BodyAssignment_0_12)
{ after(grammarAccess.getFunctionHeaderAccess().getBodyAssignment_0_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__FunctionHeader__Group_0_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_0_10__0__Impl
	rule__FunctionHeader__Group_0_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_0_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getSectionKeyword_0_10_0()); }

	'section ' 

{ after(grammarAccess.getFunctionHeaderAccess().getSectionKeyword_0_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_0_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_0_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_0_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getSTRINGTerminalRuleCall_0_10_1()); }
	RULE_STRING
{ after(grammarAccess.getFunctionHeaderAccess().getSTRINGTerminalRuleCall_0_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionHeader__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_1__0__Impl
	rule__FunctionHeader__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getDeclareKeyword_1_0()); }

	'declare' 

{ after(grammarAccess.getFunctionHeaderAccess().getDeclareKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_1__1__Impl
	rule__FunctionHeader__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getLINKAGEParserRuleCall_1_1()); }
(	ruleLINKAGE)?
{ after(grammarAccess.getFunctionHeaderAccess().getLINKAGEParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_1__2__Impl
	rule__FunctionHeader__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getVISIBILITYParserRuleCall_1_2()); }
(	ruleVISIBILITY)?
{ after(grammarAccess.getFunctionHeaderAccess().getVISIBILITYParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_1__3__Impl
	rule__FunctionHeader__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getCallingConvParserRuleCall_1_3()); }
(	ruleCallingConv)?
{ after(grammarAccess.getFunctionHeaderAccess().getCallingConvParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_1__4__Impl
	rule__FunctionHeader__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getRETURN_ATTRIBUTESParserRuleCall_1_4()); }
(	ruleRETURN_ATTRIBUTES)?
{ after(grammarAccess.getFunctionHeaderAccess().getRETURN_ATTRIBUTESParserRuleCall_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_1__5__Impl
	rule__FunctionHeader__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getReturnTypeAssignment_1_5()); }
(rule__FunctionHeader__ReturnTypeAssignment_1_5)
{ after(grammarAccess.getFunctionHeaderAccess().getReturnTypeAssignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_1__6__Impl
	rule__FunctionHeader__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getNameAssignment_1_6()); }
(rule__FunctionHeader__NameAssignment_1_6)
{ after(grammarAccess.getFunctionHeaderAccess().getNameAssignment_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_1__7__Impl
	rule__FunctionHeader__Group_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getAlternatives_1_7()); }
(rule__FunctionHeader__Alternatives_1_7)
{ after(grammarAccess.getFunctionHeaderAccess().getAlternatives_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_1__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_1__8__Impl
	rule__FunctionHeader__Group_1__9
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_1__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getUnnamed_addrKeyword_1_8()); }
(
	'unnamed_addr' 
)?
{ after(grammarAccess.getFunctionHeaderAccess().getUnnamed_addrKeyword_1_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_1__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_1__9__Impl
	rule__FunctionHeader__Group_1__10
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_1__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getFUNCTION_ATTRIBUTESParserRuleCall_1_9()); }
(	ruleFUNCTION_ATTRIBUTES)?
{ after(grammarAccess.getFunctionHeaderAccess().getFUNCTION_ATTRIBUTESParserRuleCall_1_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_1__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_1__10__Impl
	rule__FunctionHeader__Group_1__11
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_1__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getGroup_1_10()); }
(rule__FunctionHeader__Group_1_10__0)?
{ after(grammarAccess.getFunctionHeaderAccess().getGroup_1_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_1__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_1__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_1__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getALIGNMENTParserRuleCall_1_11()); }
(	ruleALIGNMENT)?
{ after(grammarAccess.getFunctionHeaderAccess().getALIGNMENTParserRuleCall_1_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__FunctionHeader__Group_1_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_1_10__0__Impl
	rule__FunctionHeader__Group_1_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_1_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getSectionKeyword_1_10_0()); }

	'section ' 

{ after(grammarAccess.getFunctionHeaderAccess().getSectionKeyword_1_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group_1_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group_1_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group_1_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getSTRINGTerminalRuleCall_1_10_1()); }
	RULE_STRING
{ after(grammarAccess.getFunctionHeaderAccess().getSTRINGTerminalRuleCall_1_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeList__Group__0__Impl
	rule__TypeList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeListAccess().getTypeListAction_0()); }
(

)
{ after(grammarAccess.getTypeListAccess().getTypeListAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeList__Group__1__Impl
	rule__TypeList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeListAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTypeListAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeList__Group__2__Impl
	rule__TypeList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeListAccess().getGroup_2()); }
(rule__TypeList__Group_2__0)?
{ after(grammarAccess.getTypeListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeList__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeListAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getTypeListAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeList__Group_2__0__Impl
	rule__TypeList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeListAccess().getTypesAssignment_2_0()); }
(rule__TypeList__TypesAssignment_2_0)
{ after(grammarAccess.getTypeListAccess().getTypesAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeListAccess().getGroup_2_1()); }
(rule__TypeList__Group_2_1__0)*
{ after(grammarAccess.getTypeListAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeList__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeList__Group_2_1__0__Impl
	rule__TypeList__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeListAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getTypeListAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeList__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeList__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeListAccess().getTypesAssignment_2_1_1()); }
(rule__TypeList__TypesAssignment_2_1_1)
{ after(grammarAccess.getTypeListAccess().getTypesAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Aggregate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group__0__Impl
	rule__Aggregate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getAggregateAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group__1__Impl
	rule__Aggregate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getAggAssignment_1()); }
(rule__Aggregate__AggAssignment_1)
{ after(grammarAccess.getAggregateAccess().getAggAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group__2__Impl
	rule__Aggregate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getGroup_2()); }
(rule__Aggregate__Group_2__0)
{ after(grammarAccess.getAggregateAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getAggregateAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Aggregate__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group_2__0__Impl
	rule__Aggregate__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getAggregateAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getAggAssignment_2_1()); }
(rule__Aggregate__AggAssignment_2_1)
{ after(grammarAccess.getAggregateAccess().getAggAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalVar__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVar__Group__0__Impl
	rule__LocalVar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVar__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarAccess().getNameAssignment_0()); }
(rule__LocalVar__NameAssignment_0)
{ after(grammarAccess.getLocalVarAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVar__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVar__Group__1__Impl
	rule__LocalVar__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVar__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getLocalVarAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVar__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVar__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVar__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarAccess().getAlternatives_2()); }
(rule__LocalVar__Alternatives_2)
{ after(grammarAccess.getLocalVarAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LocalType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalType__Group__0__Impl
	rule__LocalType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalTypeAccess().getTypeKeyword_0()); }

	'type' 

{ after(grammarAccess.getLocalTypeAccess().getTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalTypeAccess().getTypeAssignment_1()); }
(rule__LocalType__TypeAssignment_1)
{ after(grammarAccess.getLocalTypeAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalAlias__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalAlias__Group__0__Impl
	rule__LocalAlias__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAlias__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalAliasAccess().getAliasKeyword_0()); }

	'alias' 

{ after(grammarAccess.getLocalAliasAccess().getAliasKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalAlias__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalAlias__Group__1__Impl
	rule__LocalAlias__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAlias__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalAliasAccess().getALIAS_LINKAGEParserRuleCall_1()); }
(	ruleALIAS_LINKAGE)?
{ after(grammarAccess.getLocalAliasAccess().getALIAS_LINKAGEParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalAlias__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalAlias__Group__2__Impl
	rule__LocalAlias__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAlias__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalAliasAccess().getVISIBILITYParserRuleCall_2()); }
(	ruleVISIBILITY)?
{ after(grammarAccess.getLocalAliasAccess().getVISIBILITYParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalAlias__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalAlias__Group__3__Impl
	rule__LocalAlias__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAlias__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalAliasAccess().getTypeAssignment_3()); }
(rule__LocalAlias__TypeAssignment_3)
{ after(grammarAccess.getLocalAliasAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalAlias__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalAlias__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAlias__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalAliasAccess().getAliaseeAssignment_4()); }
(rule__LocalAlias__AliaseeAssignment_4)
{ after(grammarAccess.getLocalAliasAccess().getAliaseeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TypeAndValue__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAndValue__Group_0__0__Impl
	rule__TypeAndValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAndValue__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAndValueAccess().getTypeAssignment_0_0()); }
(rule__TypeAndValue__TypeAssignment_0_0)
{ after(grammarAccess.getTypeAndValueAccess().getTypeAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAndValue__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAndValue__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAndValue__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAndValueAccess().getValueAssignment_0_1()); }
(rule__TypeAndValue__ValueAssignment_0_1)
{ after(grammarAccess.getTypeAndValueAccess().getValueAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeAndValue__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAndValue__Group_1__0__Impl
	rule__TypeAndValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAndValue__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAndValueAccess().getAggregateAssignment_1_0()); }
(rule__TypeAndValue__AggregateAssignment_1_0)
{ after(grammarAccess.getTypeAndValueAccess().getAggregateAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAndValue__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAndValue__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAndValue__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAndValueAccess().getValueAssignment_1_1()); }
(rule__TypeAndValue__ValueAssignment_1_1)
{ after(grammarAccess.getTypeAndValueAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructType__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_0__0__Impl
	rule__StructType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_0_0()); }

	'{' 

{ after(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_0__1__Impl
	rule__StructType__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getGroup_0_1()); }
(rule__StructType__Group_0_1__0)?
{ after(grammarAccess.getStructTypeAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_0_2()); }

	'}' 

{ after(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StructType__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_0_1__0__Impl
	rule__StructType__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getAlternatives_0_1_0()); }
(rule__StructType__Alternatives_0_1_0)
{ after(grammarAccess.getStructTypeAccess().getAlternatives_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getGroup_0_1_1()); }
(rule__StructType__Group_0_1_1__0)*
{ after(grammarAccess.getStructTypeAccess().getGroup_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructType__Group_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_0_1_1__0__Impl
	rule__StructType__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getCommaKeyword_0_1_1_0()); }

	',' 

{ after(grammarAccess.getStructTypeAccess().getCommaKeyword_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getAlternatives_0_1_1_1()); }
(rule__StructType__Alternatives_0_1_1_1)
{ after(grammarAccess.getStructTypeAccess().getAlternatives_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_1__0__Impl
	rule__StructType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getLessThanSignKeyword_1_0()); }

	'<' 

{ after(grammarAccess.getStructTypeAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_1__1__Impl
	rule__StructType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1_1()); }

	'{' 

{ after(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_1__2__Impl
	rule__StructType__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getGroup_1_2()); }
(rule__StructType__Group_1_2__0)?
{ after(grammarAccess.getStructTypeAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_1__3__Impl
	rule__StructType__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_1_3()); }

	'}' 

{ after(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getGreaterThanSignKeyword_1_4()); }

	'>' 

{ after(grammarAccess.getStructTypeAccess().getGreaterThanSignKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StructType__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_1_2__0__Impl
	rule__StructType__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getAlternatives_1_2_0()); }
(rule__StructType__Alternatives_1_2_0)
{ after(grammarAccess.getStructTypeAccess().getAlternatives_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getGroup_1_2_1()); }
(rule__StructType__Group_1_2_1__0)*
{ after(grammarAccess.getStructTypeAccess().getGroup_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructType__Group_1_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_1_2_1__0__Impl
	rule__StructType__Group_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_1_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getCommaKeyword_1_2_1_0()); }

	',' 

{ after(grammarAccess.getStructTypeAccess().getCommaKeyword_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_1_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_1_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_1_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getAlternatives_1_2_1_1()); }
(rule__StructType__Alternatives_1_2_1_1)
{ after(grammarAccess.getStructTypeAccess().getAlternatives_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GetElementPtr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetElementPtr__Group__0__Impl
	rule__GetElementPtr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GetElementPtr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetElementPtrAccess().getGetelementptrKeyword_0()); }

	'getelementptr' 

{ after(grammarAccess.getGetElementPtrAccess().getGetelementptrKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetElementPtr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetElementPtr__Group__1__Impl
	rule__GetElementPtr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GetElementPtr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetElementPtrAccess().getInboundsKeyword_1()); }
(
	'inbounds' 
)?
{ after(grammarAccess.getGetElementPtrAccess().getInboundsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetElementPtr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetElementPtr__Group__2__Impl
	rule__GetElementPtr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GetElementPtr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetElementPtrAccess().getPointerAssignment_2()); }
(rule__GetElementPtr__PointerAssignment_2)
{ after(grammarAccess.getGetElementPtrAccess().getPointerAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetElementPtr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetElementPtr__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GetElementPtr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetElementPtrAccess().getGroup_3()); }
(rule__GetElementPtr__Group_3__0)*
{ after(grammarAccess.getGetElementPtrAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GetElementPtr__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetElementPtr__Group_3__0__Impl
	rule__GetElementPtr__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GetElementPtr__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetElementPtrAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getGetElementPtrAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GetElementPtr__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GetElementPtr__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GetElementPtr__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetElementPtrAccess().getParamsAssignment_3_1()); }
(rule__GetElementPtr__ParamsAssignment_3_1)
{ after(grammarAccess.getGetElementPtrAccess().getParamsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExtractValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtractValue__Group__0__Impl
	rule__ExtractValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtractValueAccess().getExtractvalueKeyword_0()); }

	'extractvalue' 

{ after(grammarAccess.getExtractValueAccess().getExtractvalueKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtractValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtractValue__Group__1__Impl
	rule__ExtractValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtractValueAccess().getAggregateAssignment_1()); }
(rule__ExtractValue__AggregateAssignment_1)
{ after(grammarAccess.getExtractValueAccess().getAggregateAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtractValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtractValue__Group__2__Impl
	rule__ExtractValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtractValueAccess().getTypeAssignment_2()); }
(rule__ExtractValue__TypeAssignment_2)
{ after(grammarAccess.getExtractValueAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtractValue__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtractValue__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractValue__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getExtractValueAccess().getGroup_3()); }
(rule__ExtractValue__Group_3__0)
{ after(grammarAccess.getExtractValueAccess().getGroup_3()); }
)
(
{ before(grammarAccess.getExtractValueAccess().getGroup_3()); }
(rule__ExtractValue__Group_3__0)*
{ after(grammarAccess.getExtractValueAccess().getGroup_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ExtractValue__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtractValue__Group_3__0__Impl
	rule__ExtractValue__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractValue__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtractValueAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getExtractValueAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtractValue__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtractValue__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractValue__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtractValueAccess().getIndexAssignment_3_1()); }
(rule__ExtractValue__IndexAssignment_3_1)
{ after(grammarAccess.getExtractValueAccess().getIndexAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InsertValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertValue__Group__0__Impl
	rule__InsertValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertValueAccess().getInsertvalueKeyword_0()); }

	'insertvalue' 

{ after(grammarAccess.getInsertValueAccess().getInsertvalueKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertValue__Group__1__Impl
	rule__InsertValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertValueAccess().getAggregateAssignment_1()); }
(rule__InsertValue__AggregateAssignment_1)
{ after(grammarAccess.getInsertValueAccess().getAggregateAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertValue__Group__2__Impl
	rule__InsertValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertValueAccess().getTypeAssignment_2()); }
(rule__InsertValue__TypeAssignment_2)
{ after(grammarAccess.getInsertValueAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertValue__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertValue__Group__3__Impl
	rule__InsertValue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertValue__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertValueAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getInsertValueAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertValue__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertValue__Group__4__Impl
	rule__InsertValue__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertValue__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertValueAccess().getValueAssignment_4()); }
(rule__InsertValue__ValueAssignment_4)
{ after(grammarAccess.getInsertValueAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertValue__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertValue__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertValue__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getInsertValueAccess().getGroup_5()); }
(rule__InsertValue__Group_5__0)
{ after(grammarAccess.getInsertValueAccess().getGroup_5()); }
)
(
{ before(grammarAccess.getInsertValueAccess().getGroup_5()); }
(rule__InsertValue__Group_5__0)*
{ after(grammarAccess.getInsertValueAccess().getGroup_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}














rule__InsertValue__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertValue__Group_5__0__Impl
	rule__InsertValue__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertValue__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertValueAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getInsertValueAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertValue__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertValue__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertValue__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertValueAccess().getIndexAssignment_5_1()); }
(rule__InsertValue__IndexAssignment_5_1)
{ after(grammarAccess.getInsertValueAccess().getIndexAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Fence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fence__Group__0__Impl
	rule__Fence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFenceAccess().getFenceKeyword_0()); }

	'fence' 

{ after(grammarAccess.getFenceAccess().getFenceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fence__Group__1__Impl
	rule__Fence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFenceAccess().getSinglethreadKeyword_1()); }
(
	'singlethread' 
)?
{ after(grammarAccess.getFenceAccess().getSinglethreadKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fence__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fence__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fence__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFenceAccess().getOrderingAssignment_2()); }
(rule__Fence__OrderingAssignment_2)
{ after(grammarAccess.getFenceAccess().getOrderingAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CmpXchg__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmpXchg__Group__0__Impl
	rule__CmpXchg__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpXchg__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpXchgAccess().getCmpxchgKeyword_0()); }

	'cmpxchg' 

{ after(grammarAccess.getCmpXchgAccess().getCmpxchgKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmpXchg__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmpXchg__Group__1__Impl
	rule__CmpXchg__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpXchg__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpXchgAccess().getVolatileKeyword_1()); }
(
	'volatile' 
)?
{ after(grammarAccess.getCmpXchgAccess().getVolatileKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmpXchg__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmpXchg__Group__2__Impl
	rule__CmpXchg__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpXchg__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpXchgAccess().getAdressAssignment_2()); }
(rule__CmpXchg__AdressAssignment_2)
{ after(grammarAccess.getCmpXchgAccess().getAdressAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmpXchg__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmpXchg__Group__3__Impl
	rule__CmpXchg__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpXchg__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpXchgAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getCmpXchgAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmpXchg__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmpXchg__Group__4__Impl
	rule__CmpXchg__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpXchg__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpXchgAccess().getCompare_valAssignment_4()); }
(rule__CmpXchg__Compare_valAssignment_4)
{ after(grammarAccess.getCmpXchgAccess().getCompare_valAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmpXchg__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmpXchg__Group__5__Impl
	rule__CmpXchg__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpXchg__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpXchgAccess().getCommaKeyword_5()); }

	',' 

{ after(grammarAccess.getCmpXchgAccess().getCommaKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmpXchg__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmpXchg__Group__6__Impl
	rule__CmpXchg__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpXchg__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpXchgAccess().getNew_valAssignment_6()); }
(rule__CmpXchg__New_valAssignment_6)
{ after(grammarAccess.getCmpXchgAccess().getNew_valAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmpXchg__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmpXchg__Group__7__Impl
	rule__CmpXchg__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpXchg__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpXchgAccess().getSinglethreadKeyword_7()); }
(
	'singlethread' 
)?
{ after(grammarAccess.getCmpXchgAccess().getSinglethreadKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CmpXchg__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CmpXchg__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpXchg__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpXchgAccess().getOrderingAssignment_8()); }
(rule__CmpXchg__OrderingAssignment_8)
{ after(grammarAccess.getCmpXchgAccess().getOrderingAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__AtomicRMW__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRMW__Group__0__Impl
	rule__AtomicRMW__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRMW__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRMWAccess().getAtomicrmwKeyword_0()); }

	'atomicrmw' 

{ after(grammarAccess.getAtomicRMWAccess().getAtomicrmwKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicRMW__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRMW__Group__1__Impl
	rule__AtomicRMW__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRMW__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRMWAccess().getVolatileKeyword_1()); }
(
	'volatile' 
)?
{ after(grammarAccess.getAtomicRMWAccess().getVolatileKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicRMW__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRMW__Group__2__Impl
	rule__AtomicRMW__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRMW__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRMWAccess().getBIN_OPParserRuleCall_2()); }
	ruleBIN_OP
{ after(grammarAccess.getAtomicRMWAccess().getBIN_OPParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicRMW__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRMW__Group__3__Impl
	rule__AtomicRMW__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRMW__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRMWAccess().getAdressAssignment_3()); }
(rule__AtomicRMW__AdressAssignment_3)
{ after(grammarAccess.getAtomicRMWAccess().getAdressAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicRMW__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRMW__Group__4__Impl
	rule__AtomicRMW__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRMW__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRMWAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getAtomicRMWAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicRMW__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRMW__Group__5__Impl
	rule__AtomicRMW__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRMW__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRMWAccess().getValueAssignment_5()); }
(rule__AtomicRMW__ValueAssignment_5)
{ after(grammarAccess.getAtomicRMWAccess().getValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicRMW__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRMW__Group__6__Impl
	rule__AtomicRMW__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRMW__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRMWAccess().getSinglethreadKeyword_6()); }
(
	'singlethread' 
)?
{ after(grammarAccess.getAtomicRMWAccess().getSinglethreadKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicRMW__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicRMW__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRMW__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRMWAccess().getOrderingAssignment_7()); }
(rule__AtomicRMW__OrderingAssignment_7)
{ after(grammarAccess.getAtomicRMWAccess().getOrderingAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Load__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_0__0__Impl
	rule__Load__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getLoadKeyword_0_0()); }

	'load' 

{ after(grammarAccess.getLoadAccess().getLoadKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_0__1__Impl
	rule__Load__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getVolatileKeyword_0_1()); }
(
	'volatile' 
)?
{ after(grammarAccess.getLoadAccess().getVolatileKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_0__2__Impl
	rule__Load__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getAdressAssignment_0_2()); }
(rule__Load__AdressAssignment_0_2)
{ after(grammarAccess.getLoadAccess().getAdressAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_0__3__Impl
	rule__Load__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getGroup_0_3()); }
(rule__Load__Group_0_3__0)?
{ after(grammarAccess.getLoadAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getGroup_0_4()); }
(rule__Load__Group_0_4__0)?
{ after(grammarAccess.getLoadAccess().getGroup_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Load__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_0_3__0__Impl
	rule__Load__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getCommaKeyword_0_3_0()); }

	',' 

{ after(grammarAccess.getLoadAccess().getCommaKeyword_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getAlignAssignment_0_3_1()); }
(rule__Load__AlignAssignment_0_3_1)
{ after(grammarAccess.getLoadAccess().getAlignAssignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Load__Group_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_0_4__0__Impl
	rule__Load__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getCommaKeyword_0_4_0()); }

	',' 

{ after(grammarAccess.getLoadAccess().getCommaKeyword_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_0_4__1__Impl
	rule__Load__Group_0_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getNontemporalKeyword_0_4_1()); }

	'!nontemporal' 

{ after(grammarAccess.getLoadAccess().getNontemporalKeyword_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group_0_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_0_4__2__Impl
	rule__Load__Group_0_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_0_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getExclamationMarkKeyword_0_4_2()); }

	'!' 

{ after(grammarAccess.getLoadAccess().getExclamationMarkKeyword_0_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group_0_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_0_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_0_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getIndexAssignment_0_4_3()); }
(rule__Load__IndexAssignment_0_4_3)
{ after(grammarAccess.getLoadAccess().getIndexAssignment_0_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Load__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_1__0__Impl
	rule__Load__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getLoadKeyword_1_0()); }

	'load' 

{ after(grammarAccess.getLoadAccess().getLoadKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_1__1__Impl
	rule__Load__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getAtomicKeyword_1_1()); }

	'atomic' 

{ after(grammarAccess.getLoadAccess().getAtomicKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_1__2__Impl
	rule__Load__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getVolatileKeyword_1_2()); }
(
	'volatile' 
)?
{ after(grammarAccess.getLoadAccess().getVolatileKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_1__3__Impl
	rule__Load__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getAdressAssignment_1_3()); }
(rule__Load__AdressAssignment_1_3)
{ after(grammarAccess.getLoadAccess().getAdressAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_1__4__Impl
	rule__Load__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getSinglethreadKeyword_1_4()); }
(
	'singlethread' 
)?
{ after(grammarAccess.getLoadAccess().getSinglethreadKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_1__5__Impl
	rule__Load__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getOrderingAssignment_1_5()); }
(rule__Load__OrderingAssignment_1_5)
{ after(grammarAccess.getLoadAccess().getOrderingAssignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getGroup_1_6()); }
(rule__Load__Group_1_6__0)?
{ after(grammarAccess.getLoadAccess().getGroup_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Load__Group_1_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_1_6__0__Impl
	rule__Load__Group_1_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_1_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getCommaKeyword_1_6_0()); }

	',' 

{ after(grammarAccess.getLoadAccess().getCommaKeyword_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group_1_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_1_6__1__Impl
	rule__Load__Group_1_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_1_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getAlignKeyword_1_6_1()); }

	'align' 

{ after(grammarAccess.getLoadAccess().getAlignKeyword_1_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group_1_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Load__Group_1_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group_1_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getIndexAssignment_1_6_2()); }
(rule__Load__IndexAssignment_1_6_2)
{ after(grammarAccess.getLoadAccess().getIndexAssignment_1_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Store__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_0__0__Impl
	rule__Store__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getStoreKeyword_0_0()); }

	'store' 

{ after(grammarAccess.getStoreAccess().getStoreKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_0__1__Impl
	rule__Store__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getVolatileKeyword_0_1()); }
(
	'volatile' 
)?
{ after(grammarAccess.getStoreAccess().getVolatileKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_0__2__Impl
	rule__Store__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getValueAssignment_0_2()); }
(rule__Store__ValueAssignment_0_2)
{ after(grammarAccess.getStoreAccess().getValueAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_0__3__Impl
	rule__Store__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getCommaKeyword_0_3()); }

	',' 

{ after(grammarAccess.getStoreAccess().getCommaKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_0__4__Impl
	rule__Store__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getAdressAssignment_0_4()); }
(rule__Store__AdressAssignment_0_4)
{ after(grammarAccess.getStoreAccess().getAdressAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getGroup_0_5()); }
(rule__Store__Group_0_5__0)?
{ after(grammarAccess.getStoreAccess().getGroup_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Store__Group_0_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_0_5__0__Impl
	rule__Store__Group_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_0_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getCommaKeyword_0_5_0()); }

	',' 

{ after(grammarAccess.getStoreAccess().getCommaKeyword_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group_0_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_0_5__1__Impl
	rule__Store__Group_0_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_0_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getAlignKeyword_0_5_1()); }

	'align' 

{ after(grammarAccess.getStoreAccess().getAlignKeyword_0_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group_0_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_0_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_0_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getINTTerminalRuleCall_0_5_2()); }
	RULE_INT
{ after(grammarAccess.getStoreAccess().getINTTerminalRuleCall_0_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Store__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_1__0__Impl
	rule__Store__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getStoreKeyword_1_0()); }

	'store' 

{ after(grammarAccess.getStoreAccess().getStoreKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_1__1__Impl
	rule__Store__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getAtomicKeyword_1_1()); }

	'atomic' 

{ after(grammarAccess.getStoreAccess().getAtomicKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_1__2__Impl
	rule__Store__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getVolatileKeyword_1_2()); }
(
	'volatile' 
)?
{ after(grammarAccess.getStoreAccess().getVolatileKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_1__3__Impl
	rule__Store__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getValueAssignment_1_3()); }
(rule__Store__ValueAssignment_1_3)
{ after(grammarAccess.getStoreAccess().getValueAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_1__4__Impl
	rule__Store__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getCommaKeyword_1_4()); }

	',' 

{ after(grammarAccess.getStoreAccess().getCommaKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_1__5__Impl
	rule__Store__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getAdressAssignment_1_5()); }
(rule__Store__AdressAssignment_1_5)
{ after(grammarAccess.getStoreAccess().getAdressAssignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_1__6__Impl
	rule__Store__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getSinglethreadKeyword_1_6()); }
(
	'singlethread' 
)?
{ after(grammarAccess.getStoreAccess().getSinglethreadKeyword_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_1__7__Impl
	rule__Store__Group_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getOrderingAssignment_1_7()); }
(rule__Store__OrderingAssignment_1_7)
{ after(grammarAccess.getStoreAccess().getOrderingAssignment_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group_1__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_1__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_1__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getGroup_1_8()); }
(rule__Store__Group_1_8__0)?
{ after(grammarAccess.getStoreAccess().getGroup_1_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Store__Group_1_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_1_8__0__Impl
	rule__Store__Group_1_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_1_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getCommaKeyword_1_8_0()); }

	',' 

{ after(grammarAccess.getStoreAccess().getCommaKeyword_1_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group_1_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_1_8__1__Impl
	rule__Store__Group_1_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_1_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getAlignKeyword_1_8_1()); }

	'align' 

{ after(grammarAccess.getStoreAccess().getAlignKeyword_1_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group_1_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Store__Group_1_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group_1_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getIndexAssignment_1_8_2()); }
(rule__Store__IndexAssignment_1_8_2)
{ after(grammarAccess.getStoreAccess().getIndexAssignment_1_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Call__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__0__Impl
	rule__Call__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getTailKeyword_0()); }
(
	'tail' 
)?
{ after(grammarAccess.getCallAccess().getTailKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__1__Impl
	rule__Call__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getCallKeyword_1()); }

	'call' 

{ after(grammarAccess.getCallAccess().getCallKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__2__Impl
	rule__Call__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getCallingConvParserRuleCall_2()); }
(	ruleCallingConv)?
{ after(grammarAccess.getCallAccess().getCallingConvParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__3__Impl
	rule__Call__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getRETURN_ATTRIBUTESParserRuleCall_3()); }
(	ruleRETURN_ATTRIBUTES)?
{ after(grammarAccess.getCallAccess().getRETURN_ATTRIBUTESParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__4__Impl
	rule__Call__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getPointerAssignment_4()); }
(rule__Call__PointerAssignment_4)
{ after(grammarAccess.getCallAccess().getPointerAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__5__Impl
	rule__Call__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getPlistAssignment_5()); }
(rule__Call__PlistAssignment_5)
{ after(grammarAccess.getCallAccess().getPlistAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getFUNCTION_ATTRIBUTESParserRuleCall_6()); }
(	ruleFUNCTION_ATTRIBUTES)?
{ after(grammarAccess.getCallAccess().getFUNCTION_ATTRIBUTESParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Alloc__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alloc__Group__0__Impl
	rule__Alloc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Alloc__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllocAccess().getAllocaKeyword_0()); }

	'alloca' 

{ after(grammarAccess.getAllocAccess().getAllocaKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Alloc__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alloc__Group__1__Impl
	rule__Alloc__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Alloc__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllocAccess().getTypeAssignment_1()); }
(rule__Alloc__TypeAssignment_1)
{ after(grammarAccess.getAllocAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Alloc__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alloc__Group__2__Impl
	rule__Alloc__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Alloc__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllocAccess().getGroup_2()); }
(rule__Alloc__Group_2__0)?
{ after(grammarAccess.getAllocAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Alloc__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alloc__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Alloc__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllocAccess().getGroup_3()); }
(rule__Alloc__Group_3__0)?
{ after(grammarAccess.getAllocAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Alloc__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alloc__Group_2__0__Impl
	rule__Alloc__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Alloc__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllocAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getAllocAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Alloc__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alloc__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Alloc__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllocAccess().getNumElementsAssignment_2_1()); }
(rule__Alloc__NumElementsAssignment_2_1)
{ after(grammarAccess.getAllocAccess().getNumElementsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Alloc__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alloc__Group_3__0__Impl
	rule__Alloc__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Alloc__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllocAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getAllocAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Alloc__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alloc__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Alloc__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllocAccess().getALIGNMENTParserRuleCall_3_1()); }
	ruleALIGNMENT
{ after(grammarAccess.getAllocAccess().getALIGNMENTParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CallingConv__Group_14__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallingConv__Group_14__0__Impl
	rule__CallingConv__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallingConv__Group_14__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallingConvAccess().getCcKeyword_14_0()); }

	'cc' 

{ after(grammarAccess.getCallingConvAccess().getCcKeyword_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallingConv__Group_14__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallingConv__Group_14__1__Impl
	rule__CallingConv__Group_14__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CallingConv__Group_14__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallingConvAccess().getLessThanSignKeyword_14_1()); }

	'<' 

{ after(grammarAccess.getCallingConvAccess().getLessThanSignKeyword_14_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallingConv__Group_14__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallingConv__Group_14__2__Impl
	rule__CallingConv__Group_14__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CallingConv__Group_14__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallingConvAccess().getINTTerminalRuleCall_14_2()); }
	RULE_INT
{ after(grammarAccess.getCallingConvAccess().getINTTerminalRuleCall_14_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallingConv__Group_14__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallingConv__Group_14__3__Impl
	rule__CallingConv__Group_14__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CallingConv__Group_14__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallingConvAccess().getGreaterThanSignKeyword_14_3()); }

	'>' 

{ after(grammarAccess.getCallingConvAccess().getGreaterThanSignKeyword_14_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallingConv__Group_14__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallingConv__Group_14__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallingConv__Group_14__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallingConvAccess().getINTTerminalRuleCall_14_4()); }
	RULE_INT
{ after(grammarAccess.getCallingConvAccess().getINTTerminalRuleCall_14_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FUNCTION_ATTRIBUTES__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FUNCTION_ATTRIBUTES__Group_1__0__Impl
	rule__FUNCTION_ATTRIBUTES__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCTION_ATTRIBUTES__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getAlignstackKeyword_1_0()); }

	'alignstack' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getAlignstackKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FUNCTION_ATTRIBUTES__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FUNCTION_ATTRIBUTES__Group_1__1__Impl
	rule__FUNCTION_ATTRIBUTES__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCTION_ATTRIBUTES__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FUNCTION_ATTRIBUTES__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FUNCTION_ATTRIBUTES__Group_1__2__Impl
	rule__FUNCTION_ATTRIBUTES__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCTION_ATTRIBUTES__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getLessThanSignKeyword_1_2()); }

	'<' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getLessThanSignKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FUNCTION_ATTRIBUTES__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FUNCTION_ATTRIBUTES__Group_1__3__Impl
	rule__FUNCTION_ATTRIBUTES__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCTION_ATTRIBUTES__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getINTTerminalRuleCall_1_3()); }
	RULE_INT
{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getINTTerminalRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FUNCTION_ATTRIBUTES__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FUNCTION_ATTRIBUTES__Group_1__4__Impl
	rule__FUNCTION_ATTRIBUTES__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCTION_ATTRIBUTES__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getGreaterThanSignKeyword_1_4()); }

	'>' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getGreaterThanSignKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FUNCTION_ATTRIBUTES__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FUNCTION_ATTRIBUTES__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FUNCTION_ATTRIBUTES__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getRightParenthesisKeyword_1_5()); }

	')' 

{ after(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getRightParenthesisKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ParameterList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getParameterListAction_0()); }
(

)
{ after(grammarAccess.getParameterListAccess().getParameterListAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group__1__Impl
	rule__ParameterList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group__2__Impl
	rule__ParameterList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getGroup_2()); }
(rule__ParameterList__Group_2__0)?
{ after(grammarAccess.getParameterListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getParameterListAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ParameterList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_2__0__Impl
	rule__ParameterList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getParamsAssignment_2_0()); }
(rule__ParameterList__ParamsAssignment_2_0)
{ after(grammarAccess.getParameterListAccess().getParamsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getGroup_2_1()); }
(rule__ParameterList__Group_2_1__0)*
{ after(grammarAccess.getParameterListAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterList__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_2_1__0__Impl
	rule__ParameterList__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getParameterListAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getParamsAssignment_2_1_1()); }
(rule__ParameterList__ParamsAssignment_2_1_1)
{ after(grammarAccess.getParameterListAccess().getParamsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PHI__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PHI__Group__0__Impl
	rule__PHI__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PHI__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPHIAccess().getPhiKeyword_0()); }

	'phi' 

{ after(grammarAccess.getPHIAccess().getPhiKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PHI__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PHI__Group__1__Impl
	rule__PHI__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PHI__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPHIAccess().getTypeParserRuleCall_1()); }
	ruleType
{ after(grammarAccess.getPHIAccess().getTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PHI__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PHI__Group__2__Impl
	rule__PHI__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PHI__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPHIAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getPHIAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PHI__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PHI__Group__3__Impl
	rule__PHI__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PHI__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPHIAccess().getValuesAssignment_3()); }
(rule__PHI__ValuesAssignment_3)
{ after(grammarAccess.getPHIAccess().getValuesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PHI__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PHI__Group__4__Impl
	rule__PHI__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PHI__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPHIAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getPHIAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PHI__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PHI__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PHI__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPHIAccess().getGroup_5()); }
(rule__PHI__Group_5__0)*
{ after(grammarAccess.getPHIAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PHI__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PHI__Group_5__0__Impl
	rule__PHI__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PHI__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPHIAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getPHIAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PHI__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PHI__Group_5__1__Impl
	rule__PHI__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PHI__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPHIAccess().getLeftSquareBracketKeyword_5_1()); }

	'[' 

{ after(grammarAccess.getPHIAccess().getLeftSquareBracketKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PHI__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PHI__Group_5__2__Impl
	rule__PHI__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PHI__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPHIAccess().getValuesAssignment_5_2()); }
(rule__PHI__ValuesAssignment_5_2)
{ after(grammarAccess.getPHIAccess().getValuesAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PHI__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PHI__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PHI__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPHIAccess().getRightSquareBracketKeyword_5_3()); }

	']' 

{ after(grammarAccess.getPHIAccess().getRightSquareBracketKeyword_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ValuePair__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuePair__Group__0__Impl
	rule__ValuePair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuePair__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuePairAccess().getValue1Assignment_0()); }
(rule__ValuePair__Value1Assignment_0)
{ after(grammarAccess.getValuePairAccess().getValue1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuePair__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuePair__Group__1__Impl
	rule__ValuePair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuePair__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuePairAccess().getCommaKeyword_1()); }

	',' 

{ after(grammarAccess.getValuePairAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuePair__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuePair__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuePair__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuePairAccess().getValue2Assignment_2()); }
(rule__ValuePair__Value2Assignment_2)
{ after(grammarAccess.getValuePairAccess().getValue2Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LandingPad__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_0__0__Impl
	rule__LandingPad__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getLandingpadKeyword_0_0()); }

	'landingpad' 

{ after(grammarAccess.getLandingPadAccess().getLandingpadKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LandingPad__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_0__1__Impl
	rule__LandingPad__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getTypeAssignment_0_1()); }
(rule__LandingPad__TypeAssignment_0_1)
{ after(grammarAccess.getLandingPadAccess().getTypeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LandingPad__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_0__2__Impl
	rule__LandingPad__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getPersonalityKeyword_0_2()); }

	'personality' 

{ after(grammarAccess.getLandingPadAccess().getPersonalityKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LandingPad__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_0__3__Impl
	rule__LandingPad__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getPersonalityAssignment_0_3()); }
(rule__LandingPad__PersonalityAssignment_0_3)
{ after(grammarAccess.getLandingPadAccess().getPersonalityAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LandingPad__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getAlternatives_0_4()); }
(rule__LandingPad__Alternatives_0_4)
{ after(grammarAccess.getLandingPadAccess().getAlternatives_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LandingPad__Group_0_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_0_4_0__0__Impl
	rule__LandingPad__Group_0_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_0_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getCleanupKeyword_0_4_0_0()); }

	'cleanup' 

{ after(grammarAccess.getLandingPadAccess().getCleanupKeyword_0_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LandingPad__Group_0_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_0_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_0_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getClauseAssignment_0_4_0_1()); }
(rule__LandingPad__ClauseAssignment_0_4_0_1)*
{ after(grammarAccess.getLandingPadAccess().getClauseAssignment_0_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LandingPad__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_1__0__Impl
	rule__LandingPad__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getLandingpadKeyword_1_0()); }

	'landingpad' 

{ after(grammarAccess.getLandingPadAccess().getLandingpadKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LandingPad__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_1__1__Impl
	rule__LandingPad__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getTypeAssignment_1_1()); }
(rule__LandingPad__TypeAssignment_1_1)
{ after(grammarAccess.getLandingPadAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LandingPad__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_1__2__Impl
	rule__LandingPad__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getPersonalityKeyword_1_2()); }

	'personality' 

{ after(grammarAccess.getLandingPadAccess().getPersonalityKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LandingPad__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_1__3__Impl
	rule__LandingPad__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getPersonalitytypeAssignment_1_3()); }
(rule__LandingPad__PersonalitytypeAssignment_1_3)
{ after(grammarAccess.getLandingPadAccess().getPersonalitytypeAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LandingPad__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_1__4__Impl
	rule__LandingPad__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getPersonalityfunctionAssignment_1_4()); }
(rule__LandingPad__PersonalityfunctionAssignment_1_4)
{ after(grammarAccess.getLandingPadAccess().getPersonalityfunctionAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LandingPad__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_1__5__Impl
	rule__LandingPad__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getLeftParenthesisKeyword_1_5()); }

	'(' 

{ after(grammarAccess.getLandingPadAccess().getLeftParenthesisKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LandingPad__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_1__6__Impl
	rule__LandingPad__Group_1__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getValueAssignment_1_6()); }
(rule__LandingPad__ValueAssignment_1_6)
{ after(grammarAccess.getLandingPadAccess().getValueAssignment_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LandingPad__Group_1__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_1__7__Impl
	rule__LandingPad__Group_1__8
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_1__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getLeftParenthesisFullStopFullStopFullStopRightParenthesisAsteriskKeyword_1_7()); }

	'(...)*' 

{ after(grammarAccess.getLandingPadAccess().getLeftParenthesisFullStopFullStopFullStopRightParenthesisAsteriskKeyword_1_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LandingPad__Group_1__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_1__8__Impl
	rule__LandingPad__Group_1__9
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_1__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getVAR_TYPETerminalRuleCall_1_8()); }
	RULE_VAR_TYPE
{ after(grammarAccess.getLandingPadAccess().getVAR_TYPETerminalRuleCall_1_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LandingPad__Group_1__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_1__9__Impl
	rule__LandingPad__Group_1__10
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_1__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getToKeyword_1_9()); }

	'to' 

{ after(grammarAccess.getLandingPadAccess().getToKeyword_1_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LandingPad__Group_1__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_1__10__Impl
	rule__LandingPad__Group_1__11
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_1__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getCasttoAssignment_1_10()); }
(rule__LandingPad__CasttoAssignment_1_10)
{ after(grammarAccess.getLandingPadAccess().getCasttoAssignment_1_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LandingPad__Group_1__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_1__11__Impl
	rule__LandingPad__Group_1__12
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_1__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getRightParenthesisKeyword_1_11()); }

	')' 

{ after(grammarAccess.getLandingPadAccess().getRightParenthesisKeyword_1_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LandingPad__Group_1__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_1__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_1__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getAlternatives_1_12()); }
(rule__LandingPad__Alternatives_1_12)
{ after(grammarAccess.getLandingPadAccess().getAlternatives_1_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__LandingPad__Group_1_12_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_1_12_0__0__Impl
	rule__LandingPad__Group_1_12_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_1_12_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getCleanupKeyword_1_12_0_0()); }

	'cleanup' 

{ after(grammarAccess.getLandingPadAccess().getCleanupKeyword_1_12_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LandingPad__Group_1_12_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LandingPad__Group_1_12_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__Group_1_12_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getClauseAssignment_1_12_0_1()); }
(rule__LandingPad__ClauseAssignment_1_12_0_1)*
{ after(grammarAccess.getLandingPadAccess().getClauseAssignment_1_12_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Clause__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clause__Group_0__0__Impl
	rule__Clause__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseAccess().getCatchKeyword_0_0()); }

	'catch' 

{ after(grammarAccess.getClauseAccess().getCatchKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clause__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clause__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseAccess().getTypeAndValueParserRuleCall_0_1()); }
	ruleTypeAndValue
{ after(grammarAccess.getClauseAccess().getTypeAndValueParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Clause__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clause__Group_1__0__Impl
	rule__Clause__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseAccess().getFilterKeyword_1_0()); }

	'filter' 

{ after(grammarAccess.getClauseAccess().getFilterKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clause__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clause__Group_1__1__Impl
	rule__Clause__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseAccess().getFilterAssignment_1_1()); }
(rule__Clause__FilterAssignment_1_1)
{ after(grammarAccess.getClauseAccess().getFilterAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clause__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clause__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseAccess().getGroup_1_2()); }
(rule__Clause__Group_1_2__0)*
{ after(grammarAccess.getClauseAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Clause__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clause__Group_1_2__0__Impl
	rule__Clause__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getClauseAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clause__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clause__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseAccess().getFilterAssignment_1_2_1()); }
(rule__Clause__FilterAssignment_1_2_1)
{ after(grammarAccess.getClauseAccess().getFilterAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Select__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group__0__Impl
	rule__Select__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getSelectKeyword_0()); }

	'select' 

{ after(grammarAccess.getSelectAccess().getSelectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group__1__Impl
	rule__Select__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getConditionAssignment_1()); }
(rule__Select__ConditionAssignment_1)
{ after(grammarAccess.getSelectAccess().getConditionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group__2__Impl
	rule__Select__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getSelectAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group__3__Impl
	rule__Select__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getVal1Assignment_3()); }
(rule__Select__Val1Assignment_3)
{ after(grammarAccess.getSelectAccess().getVal1Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group__4__Impl
	rule__Select__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getSelectAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getVal2Assignment_5()); }
(rule__Select__Val2Assignment_5)
{ after(grammarAccess.getSelectAccess().getVal2Assignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__VA_Arg__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VA_Arg__Group__0__Impl
	rule__VA_Arg__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VA_Arg__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVA_ArgAccess().getVa_argKeyword_0()); }

	'va_arg' 

{ after(grammarAccess.getVA_ArgAccess().getVa_argKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VA_Arg__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VA_Arg__Group__1__Impl
	rule__VA_Arg__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VA_Arg__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVA_ArgAccess().getListAssignment_1()); }
(rule__VA_Arg__ListAssignment_1)
{ after(grammarAccess.getVA_ArgAccess().getListAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VA_Arg__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VA_Arg__Group__2__Impl
	rule__VA_Arg__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VA_Arg__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVA_ArgAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getVA_ArgAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VA_Arg__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VA_Arg__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VA_Arg__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVA_ArgAccess().getArgTypeAssignment_3()); }
(rule__VA_Arg__ArgTypeAssignment_3)
{ after(grammarAccess.getVA_ArgAccess().getArgTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ExtractElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtractElement__Group__0__Impl
	rule__ExtractElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtractElementAccess().getExtractelementKeyword_0()); }

	'extractelement' 

{ after(grammarAccess.getExtractElementAccess().getExtractelementKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtractElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtractElement__Group__1__Impl
	rule__ExtractElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtractElementAccess().getVectorAssignment_1()); }
(rule__ExtractElement__VectorAssignment_1)
{ after(grammarAccess.getExtractElementAccess().getVectorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtractElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtractElement__Group__2__Impl
	rule__ExtractElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtractElementAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getExtractElementAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtractElement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtractElement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractElement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtractElementAccess().getIndexAssignment_3()); }
(rule__ExtractElement__IndexAssignment_3)
{ after(grammarAccess.getExtractElementAccess().getIndexAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InsertElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertElement__Group__0__Impl
	rule__InsertElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertElementAccess().getInsertelementKeyword_0()); }

	'insertelement' 

{ after(grammarAccess.getInsertElementAccess().getInsertelementKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertElement__Group__1__Impl
	rule__InsertElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertElementAccess().getVectorAssignment_1()); }
(rule__InsertElement__VectorAssignment_1)
{ after(grammarAccess.getInsertElementAccess().getVectorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertElement__Group__2__Impl
	rule__InsertElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertElementAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getInsertElementAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertElement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertElement__Group__3__Impl
	rule__InsertElement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertElement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertElementAccess().getScalarAssignment_3()); }
(rule__InsertElement__ScalarAssignment_3)
{ after(grammarAccess.getInsertElementAccess().getScalarAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertElement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertElement__Group__4__Impl
	rule__InsertElement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertElement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertElementAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getInsertElementAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InsertElement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InsertElement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InsertElement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertElementAccess().getIndexAssignment_5()); }
(rule__InsertElement__IndexAssignment_5)
{ after(grammarAccess.getInsertElementAccess().getIndexAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ShuffleVector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShuffleVector__Group__0__Impl
	rule__ShuffleVector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShuffleVector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShuffleVectorAccess().getShufflevectorKeyword_0()); }

	'shufflevector' 

{ after(grammarAccess.getShuffleVectorAccess().getShufflevectorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShuffleVector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShuffleVector__Group__1__Impl
	rule__ShuffleVector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShuffleVector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShuffleVectorAccess().getVector1Assignment_1()); }
(rule__ShuffleVector__Vector1Assignment_1)
{ after(grammarAccess.getShuffleVectorAccess().getVector1Assignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShuffleVector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShuffleVector__Group__2__Impl
	rule__ShuffleVector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ShuffleVector__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShuffleVectorAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getShuffleVectorAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShuffleVector__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShuffleVector__Group__3__Impl
	rule__ShuffleVector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ShuffleVector__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShuffleVectorAccess().getVector2Assignment_3()); }
(rule__ShuffleVector__Vector2Assignment_3)
{ after(grammarAccess.getShuffleVectorAccess().getVector2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShuffleVector__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShuffleVector__Group__4__Impl
	rule__ShuffleVector__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ShuffleVector__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShuffleVectorAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getShuffleVectorAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShuffleVector__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShuffleVector__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShuffleVector__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShuffleVectorAccess().getMaskAssignment_5()); }
(rule__ShuffleVector__MaskAssignment_5)
{ after(grammarAccess.getShuffleVectorAccess().getMaskAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Cast__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group__0__Impl
	rule__Cast__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getCAST_TYPEParserRuleCall_0()); }
	ruleCAST_TYPE
{ after(grammarAccess.getCastAccess().getCAST_TYPEParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group__1__Impl
	rule__Cast__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getValueAssignment_1()); }
(rule__Cast__ValueAssignment_1)
{ after(grammarAccess.getCastAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group__2__Impl
	rule__Cast__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getToKeyword_2()); }

	'to' 

{ after(grammarAccess.getCastAccess().getToKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getCasttoAssignment_3()); }
(rule__Cast__CasttoAssignment_3)
{ after(grammarAccess.getCastAccess().getCasttoAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Compare__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Compare__Group_0__0__Impl
	rule__Compare__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareAccess().getIcmpKeyword_0_0()); }

	'icmp' 

{ after(grammarAccess.getCompareAccess().getIcmpKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Compare__Group_0__1__Impl
	rule__Compare__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareAccess().getI_PREDICATESParserRuleCall_0_1()); }
	ruleI_PREDICATES
{ after(grammarAccess.getCompareAccess().getI_PREDICATESParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Compare__Group_0__2__Impl
	rule__Compare__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareAccess().getTypeParserRuleCall_0_2()); }
	ruleType
{ after(grammarAccess.getCompareAccess().getTypeParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Compare__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareAccess().getValuePairParserRuleCall_0_3()); }
	ruleValuePair
{ after(grammarAccess.getCompareAccess().getValuePairParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Compare__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Compare__Group_1__0__Impl
	rule__Compare__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareAccess().getFcmpKeyword_1_0()); }

	'fcmp' 

{ after(grammarAccess.getCompareAccess().getFcmpKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Compare__Group_1__1__Impl
	rule__Compare__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareAccess().getF_PREDICATESParserRuleCall_1_1()); }
	ruleF_PREDICATES
{ after(grammarAccess.getCompareAccess().getF_PREDICATESParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Compare__Group_1__2__Impl
	rule__Compare__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareAccess().getTypeParserRuleCall_1_2()); }
	ruleType
{ after(grammarAccess.getCompareAccess().getTypeParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Compare__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareAccess().getValuePairParserRuleCall_1_3()); }
	ruleValuePair
{ after(grammarAccess.getCompareAccess().getValuePairParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Arithmetic__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithmetic__Group__0__Impl
	rule__Arithmetic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticAccess().getARITHMETIC_OPParserRuleCall_0()); }
	ruleARITHMETIC_OP
{ after(grammarAccess.getArithmeticAccess().getARITHMETIC_OPParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arithmetic__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithmetic__Group__1__Impl
	rule__Arithmetic__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticAccess().getTypeParserRuleCall_1()); }
	ruleType
{ after(grammarAccess.getArithmeticAccess().getTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arithmetic__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arithmetic__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arithmetic__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArithmeticAccess().getValuePairParserRuleCall_2()); }
	ruleValuePair
{ after(grammarAccess.getArithmeticAccess().getValuePairParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Logical__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical__Group__0__Impl
	rule__Logical__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAccess().getLOGICAL_OPParserRuleCall_0()); }
	ruleLOGICAL_OP
{ after(grammarAccess.getLogicalAccess().getLOGICAL_OPParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical__Group__1__Impl
	rule__Logical__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAccess().getTypeParserRuleCall_1()); }
	ruleType
{ after(grammarAccess.getLogicalAccess().getTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAccess().getValuePairParserRuleCall_2()); }
	ruleValuePair
{ after(grammarAccess.getLogicalAccess().getValuePairParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IndirectBranch__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndirectBranch__Group__0__Impl
	rule__IndirectBranch__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectBranch__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndirectBranchAccess().getIndirectbrKeyword_0()); }

	'indirectbr' 

{ after(grammarAccess.getIndirectBranchAccess().getIndirectbrKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndirectBranch__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndirectBranch__Group__1__Impl
	rule__IndirectBranch__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectBranch__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndirectBranchAccess().getAdressAssignment_1()); }
(rule__IndirectBranch__AdressAssignment_1)
{ after(grammarAccess.getIndirectBranchAccess().getAdressAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndirectBranch__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndirectBranch__Group__2__Impl
	rule__IndirectBranch__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectBranch__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndirectBranchAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getIndirectBranchAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndirectBranch__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndirectBranch__Group__3__Impl
	rule__IndirectBranch__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectBranch__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndirectBranchAccess().getLeftSquareBracketKeyword_3()); }

	'[' 

{ after(grammarAccess.getIndirectBranchAccess().getLeftSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndirectBranch__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndirectBranch__Group__4__Impl
	rule__IndirectBranch__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectBranch__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndirectBranchAccess().getLListAssignment_4()); }
(rule__IndirectBranch__LListAssignment_4)?
{ after(grammarAccess.getIndirectBranchAccess().getLListAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndirectBranch__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndirectBranch__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectBranch__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndirectBranchAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getIndirectBranchAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Switch__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch__Group__0__Impl
	rule__Switch__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchAccess().getSwitchKeyword_0()); }

	'switch' 

{ after(grammarAccess.getSwitchAccess().getSwitchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch__Group__1__Impl
	rule__Switch__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchAccess().getValueAssignment_1()); }
(rule__Switch__ValueAssignment_1)
{ after(grammarAccess.getSwitchAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch__Group__2__Impl
	rule__Switch__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getSwitchAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch__Group__3__Impl
	rule__Switch__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchAccess().getDefaultAssignment_3()); }
(rule__Switch__DefaultAssignment_3)
{ after(grammarAccess.getSwitchAccess().getDefaultAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch__Group__4__Impl
	rule__Switch__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchAccess().getLeftSquareBracketKeyword_4()); }

	'[' 

{ after(grammarAccess.getSwitchAccess().getLeftSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch__Group__5__Impl
	rule__Switch__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchAccess().getJTableAssignment_5()); }
(rule__Switch__JTableAssignment_5)?
{ after(grammarAccess.getSwitchAccess().getJTableAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchAccess().getRightSquareBracketKeyword_6()); }

	']' 

{ after(grammarAccess.getSwitchAccess().getRightSquareBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__JumpTable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpTable__Group__0__Impl
	rule__JumpTable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpTable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpTableAccess().getValuesAssignment_0()); }
(rule__JumpTable__ValuesAssignment_0)
{ after(grammarAccess.getJumpTableAccess().getValuesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JumpTable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpTable__Group__1__Impl
	rule__JumpTable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpTable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpTableAccess().getCommaKeyword_1()); }

	',' 

{ after(grammarAccess.getJumpTableAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JumpTable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpTable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpTable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpTableAccess().getDestinationsAssignment_2()); }
(rule__JumpTable__DestinationsAssignment_2)
{ after(grammarAccess.getJumpTableAccess().getDestinationsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Invoke__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invoke__Group__0__Impl
	rule__Invoke__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Invoke__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvokeAccess().getInvokeKeyword_0()); }

	'invoke' 

{ after(grammarAccess.getInvokeAccess().getInvokeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invoke__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invoke__Group__1__Impl
	rule__Invoke__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Invoke__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvokeAccess().getCallingConvParserRuleCall_1()); }
(	ruleCallingConv)?
{ after(grammarAccess.getInvokeAccess().getCallingConvParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invoke__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invoke__Group__2__Impl
	rule__Invoke__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Invoke__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvokeAccess().getRETURN_ATTRIBUTESParserRuleCall_2()); }
(	ruleRETURN_ATTRIBUTES)?
{ after(grammarAccess.getInvokeAccess().getRETURN_ATTRIBUTESParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invoke__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invoke__Group__3__Impl
	rule__Invoke__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Invoke__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvokeAccess().getFunctionAssignment_3()); }
(rule__Invoke__FunctionAssignment_3)
{ after(grammarAccess.getInvokeAccess().getFunctionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invoke__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invoke__Group__4__Impl
	rule__Invoke__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Invoke__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvokeAccess().getPListAssignment_4()); }
(rule__Invoke__PListAssignment_4)
{ after(grammarAccess.getInvokeAccess().getPListAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invoke__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invoke__Group__5__Impl
	rule__Invoke__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Invoke__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvokeAccess().getFUNCTION_ATTRIBUTESParserRuleCall_5()); }
(	ruleFUNCTION_ATTRIBUTES)?
{ after(grammarAccess.getInvokeAccess().getFUNCTION_ATTRIBUTESParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invoke__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invoke__Group__6__Impl
	rule__Invoke__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Invoke__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvokeAccess().getToKeyword_6()); }

	'to' 

{ after(grammarAccess.getInvokeAccess().getToKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invoke__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invoke__Group__7__Impl
	rule__Invoke__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Invoke__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvokeAccess().getToAssignment_7()); }
(rule__Invoke__ToAssignment_7)
{ after(grammarAccess.getInvokeAccess().getToAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invoke__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invoke__Group__8__Impl
	rule__Invoke__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Invoke__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvokeAccess().getUnwindKeyword_8()); }

	'unwind' 

{ after(grammarAccess.getInvokeAccess().getUnwindKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invoke__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invoke__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Invoke__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvokeAccess().getUnwindAssignment_9()); }
(rule__Invoke__UnwindAssignment_9)
{ after(grammarAccess.getInvokeAccess().getUnwindAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Resume__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Resume__Group__0__Impl
	rule__Resume__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Resume__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResumeAccess().getResumeKeyword_0()); }

	'resume' 

{ after(grammarAccess.getResumeAccess().getResumeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Resume__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Resume__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Resume__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResumeAccess().getTypeAndValueParserRuleCall_1()); }
	ruleTypeAndValue
{ after(grammarAccess.getResumeAccess().getTypeAndValueParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Return__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return__Group_0__0__Impl
	rule__Return__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getReturnAction_0_0()); }
(

)
{ after(grammarAccess.getReturnAccess().getReturnAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Return__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return__Group_0__1__Impl
	rule__Return__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getRetKeyword_0_1()); }

	'ret' 

{ after(grammarAccess.getReturnAccess().getRetKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Return__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return__Group_0__2__Impl
	rule__Return__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getVoidKeyword_0_2()); }

	'void' 

{ after(grammarAccess.getReturnAccess().getVoidKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Return__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getGroup_0_3()); }
(rule__Return__Group_0_3__0)?
{ after(grammarAccess.getReturnAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Return__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return__Group_0_3__0__Impl
	rule__Return__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getCommaKeyword_0_3_0()); }

	',' 

{ after(grammarAccess.getReturnAccess().getCommaKeyword_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Return__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return__Group_0_3__1__Impl
	rule__Return__Group_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getDbgKeyword_0_3_1()); }

	'!dbg' 

{ after(grammarAccess.getReturnAccess().getDbgKeyword_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Return__Group_0_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return__Group_0_3__2__Impl
	rule__Return__Group_0_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group_0_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getExclamationMarkKeyword_0_3_2()); }

	'!' 

{ after(grammarAccess.getReturnAccess().getExclamationMarkKeyword_0_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Return__Group_0_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return__Group_0_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group_0_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getINTTerminalRuleCall_0_3_3()); }
	RULE_INT
{ after(grammarAccess.getReturnAccess().getINTTerminalRuleCall_0_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Return__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return__Group_1__0__Impl
	rule__Return__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getRetKeyword_1_0()); }

	'ret' 

{ after(grammarAccess.getReturnAccess().getRetKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Return__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return__Group_1__1__Impl
	rule__Return__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getValueAssignment_1_1()); }
(rule__Return__ValueAssignment_1_1)
{ after(grammarAccess.getReturnAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Return__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getGroup_1_2()); }
(rule__Return__Group_1_2__0)?
{ after(grammarAccess.getReturnAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Return__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return__Group_1_2__0__Impl
	rule__Return__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getReturnAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Return__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return__Group_1_2__1__Impl
	rule__Return__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getDbgKeyword_1_2_1()); }

	'!dbg' 

{ after(grammarAccess.getReturnAccess().getDbgKeyword_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Return__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return__Group_1_2__2__Impl
	rule__Return__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getExclamationMarkKeyword_1_2_2()); }

	'!' 

{ after(grammarAccess.getReturnAccess().getExclamationMarkKeyword_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Return__Group_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return__Group_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Group_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getINTTerminalRuleCall_1_2_3()); }
	RULE_INT
{ after(grammarAccess.getReturnAccess().getINTTerminalRuleCall_1_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Branch__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Branch__Group_0__0__Impl
	rule__Branch__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Branch__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBranchAccess().getBrKeyword_0_0()); }

	'br' 

{ after(grammarAccess.getBranchAccess().getBrKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Branch__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Branch__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Branch__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBranchAccess().getDestinationAssignment_0_1()); }
(rule__Branch__DestinationAssignment_0_1)
{ after(grammarAccess.getBranchAccess().getDestinationAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Branch__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Branch__Group_1__0__Impl
	rule__Branch__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Branch__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBranchAccess().getBrKeyword_1_0()); }

	'br' 

{ after(grammarAccess.getBranchAccess().getBrKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Branch__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Branch__Group_1__1__Impl
	rule__Branch__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Branch__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBranchAccess().getCondAssignment_1_1()); }
(rule__Branch__CondAssignment_1_1)
{ after(grammarAccess.getBranchAccess().getCondAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Branch__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Branch__Group_1__2__Impl
	rule__Branch__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Branch__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBranchAccess().getCommaKeyword_1_2()); }

	',' 

{ after(grammarAccess.getBranchAccess().getCommaKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Branch__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Branch__Group_1__3__Impl
	rule__Branch__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Branch__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBranchAccess().getLabelTrueAssignment_1_3()); }
(rule__Branch__LabelTrueAssignment_1_3)
{ after(grammarAccess.getBranchAccess().getLabelTrueAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Branch__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Branch__Group_1__4__Impl
	rule__Branch__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Branch__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBranchAccess().getCommaKeyword_1_4()); }

	',' 

{ after(grammarAccess.getBranchAccess().getCommaKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Branch__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Branch__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Branch__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBranchAccess().getLabelFalseAssignment_1_5()); }
(rule__Branch__LabelFalseAssignment_1_5)
{ after(grammarAccess.getBranchAccess().getLabelFalseAssignment_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FunctionBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBody__Group__0__Impl
	rule__FunctionBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBodyAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getFunctionBodyAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBody__Group__1__Impl
	rule__FunctionBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFunctionBodyAccess().getBlocksAssignment_1()); }
(rule__FunctionBody__BlocksAssignment_1)
{ after(grammarAccess.getFunctionBodyAccess().getBlocksAssignment_1()); }
)
(
{ before(grammarAccess.getFunctionBodyAccess().getBlocksAssignment_1()); }
(rule__FunctionBody__BlocksAssignment_1)*
{ after(grammarAccess.getFunctionBodyAccess().getBlocksAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionBody__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBodyAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getFunctionBodyAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BasicBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicBlock__Group__0__Impl
	rule__BasicBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicBlockAccess().getLabelAssignment_0()); }
(rule__BasicBlock__LabelAssignment_0)
{ after(grammarAccess.getBasicBlockAccess().getLabelAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicBlock__Group__1__Impl
	rule__BasicBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicBlockAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getBasicBlockAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicBlock__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicBlockAccess().getInstructionsAssignment_2()); }
(rule__BasicBlock__InstructionsAssignment_2)*
{ after(grammarAccess.getBasicBlockAccess().getInstructionsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__ALIGNMENT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ALIGNMENT__Group__0__Impl
	rule__ALIGNMENT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ALIGNMENT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getALIGNMENTAccess().getAlignKeyword_0()); }

	'align' 

{ after(grammarAccess.getALIGNMENTAccess().getAlignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ALIGNMENT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ALIGNMENT__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ALIGNMENT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getALIGNMENTAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getALIGNMENTAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__LLVM__ElementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLLVMAccess().getElementsAbstractElementParserRuleCall_0()); }
	ruleAbstractElement{ after(grammarAccess.getLLVMAccess().getElementsAbstractElementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__ModuleAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getModuleSTRINGTerminalRuleCall_0_2_0()); }
	RULE_STRING{ after(grammarAccess.getTopLevelEntityAccess().getModuleSTRINGTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__TargetAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getTargetSTRINGTerminalRuleCall_1_3_0()); }
	RULE_STRING{ after(grammarAccess.getTopLevelEntityAccess().getTargetSTRINGTerminalRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__LibsAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getLibsSTRINGTerminalRuleCall_2_3_0()); }
	RULE_STRING{ after(grammarAccess.getTopLevelEntityAccess().getLibsSTRINGTerminalRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelEntity__LibsAssignment_2_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTopLevelEntityAccess().getLibsSTRINGTerminalRuleCall_2_4_1_0()); }
	RULE_STRING{ after(grammarAccess.getTopLevelEntityAccess().getLibsSTRINGTerminalRuleCall_2_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__ReturnTypeAssignment_0_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getReturnTypeTypeParserRuleCall_0_5_0()); }
	ruleType{ after(grammarAccess.getFunctionHeaderAccess().getReturnTypeTypeParserRuleCall_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__NameAssignment_0_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getNameVAR_TYPETerminalRuleCall_0_6_0()); }
	RULE_VAR_TYPE{ after(grammarAccess.getFunctionHeaderAccess().getNameVAR_TYPETerminalRuleCall_0_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__PListAssignment_0_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getPListParameterListParserRuleCall_0_7_0()); }
	ruleParameterList{ after(grammarAccess.getFunctionHeaderAccess().getPListParameterListParserRuleCall_0_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__BodyAssignment_0_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getBodyFunctionBodyParserRuleCall_0_12_0()); }
	ruleFunctionBody{ after(grammarAccess.getFunctionHeaderAccess().getBodyFunctionBodyParserRuleCall_0_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__ReturnTypeAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getReturnTypeTypeParserRuleCall_1_5_0()); }
	ruleType{ after(grammarAccess.getFunctionHeaderAccess().getReturnTypeTypeParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__NameAssignment_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getNameVAR_TYPETerminalRuleCall_1_6_0()); }
	RULE_VAR_TYPE{ after(grammarAccess.getFunctionHeaderAccess().getNameVAR_TYPETerminalRuleCall_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__TListAssignment_1_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getTListTypeListParserRuleCall_1_7_0_0()); }
	ruleTypeList{ after(grammarAccess.getFunctionHeaderAccess().getTListTypeListParserRuleCall_1_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__TypesAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeListAccess().getTypesTypeParserRuleCall_2_0_0()); }
	ruleType{ after(grammarAccess.getTypeListAccess().getTypesTypeParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeList__TypesAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeListAccess().getTypesTypeParserRuleCall_2_1_1_0()); }
	ruleType{ after(grammarAccess.getTypeListAccess().getTypesTypeParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__AggAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getAggTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getAggregateAccess().getAggTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__AggAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getAggTypeParserRuleCall_2_1_0()); }
	ruleType{ after(grammarAccess.getAggregateAccess().getAggTypeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVar__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarAccess().getNameTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getLocalVarAccess().getNameTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVar__TypeAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarAccess().getTypeLocalTypeParserRuleCall_2_0_0()); }
	ruleLocalType{ after(grammarAccess.getLocalVarAccess().getTypeLocalTypeParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVar__InstrAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarAccess().getInstrLocalInstructionParserRuleCall_2_1_0()); }
	ruleLocalInstruction{ after(grammarAccess.getLocalVarAccess().getInstrLocalInstructionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVar__AliasAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarAccess().getAliasLocalAliasParserRuleCall_2_2_0()); }
	ruleLocalAlias{ after(grammarAccess.getLocalVarAccess().getAliasLocalAliasParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalType__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalTypeAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getLocalTypeAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalInstruction__InstrAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalInstructionAccess().getInstrInstructionParserRuleCall_0()); }
	ruleInstruction{ after(grammarAccess.getLocalInstructionAccess().getInstrInstructionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAlias__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalAliasAccess().getTypeTypeAndValueParserRuleCall_3_0()); }
	ruleTypeAndValue{ after(grammarAccess.getLocalAliasAccess().getTypeTypeAndValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalAlias__AliaseeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalAliasAccess().getAliaseeTypeParserRuleCall_4_0()); }
	ruleType{ after(grammarAccess.getLocalAliasAccess().getAliaseeTypeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAndValue__TypeAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAndValueAccess().getTypeAlternatives_0_0_0()); }
(rule__TypeAndValue__TypeAlternatives_0_0_0)
{ after(grammarAccess.getTypeAndValueAccess().getTypeAlternatives_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAndValue__ValueAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAndValueAccess().getValueTypeParserRuleCall_0_1_0()); }
	ruleType{ after(grammarAccess.getTypeAndValueAccess().getValueTypeParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAndValue__AggregateAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAndValueAccess().getAggregateAggregateParserRuleCall_1_0_0()); }
	ruleAggregate{ after(grammarAccess.getTypeAndValueAccess().getAggregateAggregateParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAndValue__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAndValueAccess().getValueTypeParserRuleCall_1_1_0()); }
	ruleType{ after(grammarAccess.getTypeAndValueAccess().getValueTypeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GetElementPtr__PointerAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetElementPtrAccess().getPointerTypeAndValueParserRuleCall_2_0()); }
	ruleTypeAndValue{ after(grammarAccess.getGetElementPtrAccess().getPointerTypeAndValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GetElementPtr__ParamsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGetElementPtrAccess().getParamsTypeAndValueParserRuleCall_3_1_0()); }
	ruleTypeAndValue{ after(grammarAccess.getGetElementPtrAccess().getParamsTypeAndValueParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractValue__AggregateAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtractValueAccess().getAggregateAggregateParserRuleCall_1_0()); }
	ruleAggregate{ after(grammarAccess.getExtractValueAccess().getAggregateAggregateParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractValue__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtractValueAccess().getTypeTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getExtractValueAccess().getTypeTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractValue__IndexAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtractValueAccess().getIndexINTTerminalRuleCall_3_1_0()); }
	RULE_INT{ after(grammarAccess.getExtractValueAccess().getIndexINTTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertValue__AggregateAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertValueAccess().getAggregateAggregateParserRuleCall_1_0()); }
	ruleAggregate{ after(grammarAccess.getInsertValueAccess().getAggregateAggregateParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertValue__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertValueAccess().getTypeTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getInsertValueAccess().getTypeTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertValue__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertValueAccess().getValueTypeAndValueParserRuleCall_4_0()); }
	ruleTypeAndValue{ after(grammarAccess.getInsertValueAccess().getValueTypeAndValueParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertValue__IndexAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertValueAccess().getIndexINTTerminalRuleCall_5_1_0()); }
	RULE_INT{ after(grammarAccess.getInsertValueAccess().getIndexINTTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fence__OrderingAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFenceAccess().getOrderingATOMIC_ORDERINGParserRuleCall_2_0()); }
	ruleATOMIC_ORDERING{ after(grammarAccess.getFenceAccess().getOrderingATOMIC_ORDERINGParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CmpXchg__AdressAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpXchgAccess().getAdressTypeAndValueParserRuleCall_2_0()); }
	ruleTypeAndValue{ after(grammarAccess.getCmpXchgAccess().getAdressTypeAndValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CmpXchg__Compare_valAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpXchgAccess().getCompare_valTypeAndValueParserRuleCall_4_0()); }
	ruleTypeAndValue{ after(grammarAccess.getCmpXchgAccess().getCompare_valTypeAndValueParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CmpXchg__New_valAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpXchgAccess().getNew_valTypeAndValueParserRuleCall_6_0()); }
	ruleTypeAndValue{ after(grammarAccess.getCmpXchgAccess().getNew_valTypeAndValueParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CmpXchg__OrderingAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCmpXchgAccess().getOrderingATOMIC_ORDERINGParserRuleCall_8_0()); }
	ruleATOMIC_ORDERING{ after(grammarAccess.getCmpXchgAccess().getOrderingATOMIC_ORDERINGParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRMW__AdressAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRMWAccess().getAdressTypeAndValueParserRuleCall_3_0()); }
	ruleTypeAndValue{ after(grammarAccess.getAtomicRMWAccess().getAdressTypeAndValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRMW__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRMWAccess().getValueTypeAndValueParserRuleCall_5_0()); }
	ruleTypeAndValue{ after(grammarAccess.getAtomicRMWAccess().getValueTypeAndValueParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicRMW__OrderingAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicRMWAccess().getOrderingATOMIC_ORDERINGParserRuleCall_7_0()); }
	ruleATOMIC_ORDERING{ after(grammarAccess.getAtomicRMWAccess().getOrderingATOMIC_ORDERINGParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Load__AdressAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getAdressTypeAndValueParserRuleCall_0_2_0()); }
	ruleTypeAndValue{ after(grammarAccess.getLoadAccess().getAdressTypeAndValueParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Load__AlignAssignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getAlignALIGNMENTParserRuleCall_0_3_1_0()); }
	ruleALIGNMENT{ after(grammarAccess.getLoadAccess().getAlignALIGNMENTParserRuleCall_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Load__IndexAssignment_0_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getIndexINTTerminalRuleCall_0_4_3_0()); }
	RULE_INT{ after(grammarAccess.getLoadAccess().getIndexINTTerminalRuleCall_0_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Load__AdressAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getAdressTypeAndValueParserRuleCall_1_3_0()); }
	ruleTypeAndValue{ after(grammarAccess.getLoadAccess().getAdressTypeAndValueParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Load__OrderingAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getOrderingATOMIC_ORDERINGParserRuleCall_1_5_0()); }
	ruleATOMIC_ORDERING{ after(grammarAccess.getLoadAccess().getOrderingATOMIC_ORDERINGParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Load__IndexAssignment_1_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoadAccess().getIndexINTTerminalRuleCall_1_6_2_0()); }
	RULE_INT{ after(grammarAccess.getLoadAccess().getIndexINTTerminalRuleCall_1_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Store__ValueAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getValueTypeAndValueParserRuleCall_0_2_0()); }
	ruleTypeAndValue{ after(grammarAccess.getStoreAccess().getValueTypeAndValueParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Store__AdressAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getAdressTypeAndValueParserRuleCall_0_4_0()); }
	ruleTypeAndValue{ after(grammarAccess.getStoreAccess().getAdressTypeAndValueParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Store__ValueAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getValueTypeAndValueParserRuleCall_1_3_0()); }
	ruleTypeAndValue{ after(grammarAccess.getStoreAccess().getValueTypeAndValueParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Store__AdressAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getAdressTypeAndValueParserRuleCall_1_5_0()); }
	ruleTypeAndValue{ after(grammarAccess.getStoreAccess().getAdressTypeAndValueParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Store__OrderingAssignment_1_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getOrderingATOMIC_ORDERINGParserRuleCall_1_7_0()); }
	ruleATOMIC_ORDERING{ after(grammarAccess.getStoreAccess().getOrderingATOMIC_ORDERINGParserRuleCall_1_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Store__IndexAssignment_1_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStoreAccess().getIndexINTTerminalRuleCall_1_8_2_0()); }
	RULE_INT{ after(grammarAccess.getStoreAccess().getIndexINTTerminalRuleCall_1_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Call__PointerAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getPointerTypeAndValueParserRuleCall_4_0()); }
	ruleTypeAndValue{ after(grammarAccess.getCallAccess().getPointerTypeAndValueParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Call__PlistAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getPlistParameterListParserRuleCall_5_0()); }
	ruleParameterList{ after(grammarAccess.getCallAccess().getPlistParameterListParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Alloc__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllocAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getAllocAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Alloc__NumElementsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllocAccess().getNumElementsTypeAndValueParserRuleCall_2_1_0()); }
	ruleTypeAndValue{ after(grammarAccess.getAllocAccess().getNumElementsTypeAndValueParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParamsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getParamsTypeAndValueParserRuleCall_2_0_0()); }
	ruleTypeAndValue{ after(grammarAccess.getParameterListAccess().getParamsTypeAndValueParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ParamsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getParamsTypeAndValueParserRuleCall_2_1_1_0()); }
	ruleTypeAndValue{ after(grammarAccess.getParameterListAccess().getParamsTypeAndValueParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PHI__ValuesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPHIAccess().getValuesValuePairParserRuleCall_3_0()); }
	ruleValuePair{ after(grammarAccess.getPHIAccess().getValuesValuePairParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PHI__ValuesAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPHIAccess().getValuesValuePairParserRuleCall_5_2_0()); }
	ruleValuePair{ after(grammarAccess.getPHIAccess().getValuesValuePairParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuePair__Value1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuePairAccess().getValue1TypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getValuePairAccess().getValue1TypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuePair__Value2Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuePairAccess().getValue2TypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getValuePairAccess().getValue2TypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__TypeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getTypeTypeParserRuleCall_0_1_0()); }
	ruleType{ after(grammarAccess.getLandingPadAccess().getTypeTypeParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__PersonalityAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getPersonalityTypeAndValueParserRuleCall_0_3_0()); }
	ruleTypeAndValue{ after(grammarAccess.getLandingPadAccess().getPersonalityTypeAndValueParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__ClauseAssignment_0_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getClauseClauseParserRuleCall_0_4_0_1_0()); }
	ruleClause{ after(grammarAccess.getLandingPadAccess().getClauseClauseParserRuleCall_0_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__ClauseAssignment_0_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getClauseClauseParserRuleCall_0_4_1_0()); }
	ruleClause{ after(grammarAccess.getLandingPadAccess().getClauseClauseParserRuleCall_0_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getTypeTypeParserRuleCall_1_1_0()); }
	ruleType{ after(grammarAccess.getLandingPadAccess().getTypeTypeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__PersonalitytypeAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getPersonalitytypeTypeParserRuleCall_1_3_0()); }
	ruleType{ after(grammarAccess.getLandingPadAccess().getPersonalitytypeTypeParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__PersonalityfunctionAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getPersonalityfunctionCAST_TYPEParserRuleCall_1_4_0()); }
	ruleCAST_TYPE{ after(grammarAccess.getLandingPadAccess().getPersonalityfunctionCAST_TYPEParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__ValueAssignment_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getValueTypeParserRuleCall_1_6_0()); }
	ruleType{ after(grammarAccess.getLandingPadAccess().getValueTypeParserRuleCall_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__CasttoAssignment_1_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getCasttoTypeParserRuleCall_1_10_0()); }
	ruleType{ after(grammarAccess.getLandingPadAccess().getCasttoTypeParserRuleCall_1_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__ClauseAssignment_1_12_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getClauseClauseParserRuleCall_1_12_0_1_0()); }
	ruleClause{ after(grammarAccess.getLandingPadAccess().getClauseClauseParserRuleCall_1_12_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LandingPad__ClauseAssignment_1_12_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLandingPadAccess().getClauseClauseParserRuleCall_1_12_1_0()); }
	ruleClause{ after(grammarAccess.getLandingPadAccess().getClauseClauseParserRuleCall_1_12_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__FilterAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseAccess().getFilterTypeAndValueParserRuleCall_1_1_0()); }
	ruleTypeAndValue{ after(grammarAccess.getClauseAccess().getFilterTypeAndValueParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__FilterAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseAccess().getFilterTypeAndValueParserRuleCall_1_2_1_0()); }
	ruleTypeAndValue{ after(grammarAccess.getClauseAccess().getFilterTypeAndValueParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Select__ConditionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getConditionTypeAndValueParserRuleCall_1_0()); }
	ruleTypeAndValue{ after(grammarAccess.getSelectAccess().getConditionTypeAndValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Val1Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getVal1TypeAndValueParserRuleCall_3_0()); }
	ruleTypeAndValue{ after(grammarAccess.getSelectAccess().getVal1TypeAndValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Val2Assignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getVal2TypeAndValueParserRuleCall_5_0()); }
	ruleTypeAndValue{ after(grammarAccess.getSelectAccess().getVal2TypeAndValueParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VA_Arg__ListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVA_ArgAccess().getListTypeAndValueParserRuleCall_1_0()); }
	ruleTypeAndValue{ after(grammarAccess.getVA_ArgAccess().getListTypeAndValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VA_Arg__ArgTypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVA_ArgAccess().getArgTypeTypeParserRuleCall_3_0()); }
	ruleType{ after(grammarAccess.getVA_ArgAccess().getArgTypeTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractElement__VectorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtractElementAccess().getVectorTypeAndValueParserRuleCall_1_0()); }
	ruleTypeAndValue{ after(grammarAccess.getExtractElementAccess().getVectorTypeAndValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExtractElement__IndexAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtractElementAccess().getIndexTypeAndValueParserRuleCall_3_0()); }
	ruleTypeAndValue{ after(grammarAccess.getExtractElementAccess().getIndexTypeAndValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertElement__VectorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertElementAccess().getVectorTypeAndValueParserRuleCall_1_0()); }
	ruleTypeAndValue{ after(grammarAccess.getInsertElementAccess().getVectorTypeAndValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertElement__ScalarAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertElementAccess().getScalarTypeAndValueParserRuleCall_3_0()); }
	ruleTypeAndValue{ after(grammarAccess.getInsertElementAccess().getScalarTypeAndValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InsertElement__IndexAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInsertElementAccess().getIndexTypeAndValueParserRuleCall_5_0()); }
	ruleTypeAndValue{ after(grammarAccess.getInsertElementAccess().getIndexTypeAndValueParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShuffleVector__Vector1Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShuffleVectorAccess().getVector1TypeAndValueParserRuleCall_1_0()); }
	ruleTypeAndValue{ after(grammarAccess.getShuffleVectorAccess().getVector1TypeAndValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShuffleVector__Vector2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShuffleVectorAccess().getVector2TypeAndValueParserRuleCall_3_0()); }
	ruleTypeAndValue{ after(grammarAccess.getShuffleVectorAccess().getVector2TypeAndValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShuffleVector__MaskAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShuffleVectorAccess().getMaskTypeAndValueParserRuleCall_5_0()); }
	ruleTypeAndValue{ after(grammarAccess.getShuffleVectorAccess().getMaskTypeAndValueParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getValueTypeAndValueParserRuleCall_1_0()); }
	ruleTypeAndValue{ after(grammarAccess.getCastAccess().getValueTypeAndValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__CasttoAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getCasttoTypeParserRuleCall_3_0()); }
	ruleType{ after(grammarAccess.getCastAccess().getCasttoTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectBranch__AdressAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndirectBranchAccess().getAdressTypeAndValueParserRuleCall_1_0()); }
	ruleTypeAndValue{ after(grammarAccess.getIndirectBranchAccess().getAdressTypeAndValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndirectBranch__LListAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndirectBranchAccess().getLListLabelListParserRuleCall_4_0()); }
	ruleLabelList{ after(grammarAccess.getIndirectBranchAccess().getLListLabelListParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LabelList__LabelsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelListAccess().getLabelsTypeAndValueParserRuleCall_0()); }
	ruleTypeAndValue{ after(grammarAccess.getLabelListAccess().getLabelsTypeAndValueParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchAccess().getValueTypeAndValueParserRuleCall_1_0()); }
	ruleTypeAndValue{ after(grammarAccess.getSwitchAccess().getValueTypeAndValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__DefaultAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchAccess().getDefaultTypeAndValueParserRuleCall_3_0()); }
	ruleTypeAndValue{ after(grammarAccess.getSwitchAccess().getDefaultTypeAndValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Switch__JTableAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchAccess().getJTableJumpTableParserRuleCall_5_0()); }
	ruleJumpTable{ after(grammarAccess.getSwitchAccess().getJTableJumpTableParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JumpTable__ValuesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpTableAccess().getValuesTypeAndValueParserRuleCall_0_0()); }
	ruleTypeAndValue{ after(grammarAccess.getJumpTableAccess().getValuesTypeAndValueParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JumpTable__DestinationsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpTableAccess().getDestinationsTypeAndValueParserRuleCall_2_0()); }
	ruleTypeAndValue{ after(grammarAccess.getJumpTableAccess().getDestinationsTypeAndValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Invoke__FunctionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvokeAccess().getFunctionTypeAndValueParserRuleCall_3_0()); }
	ruleTypeAndValue{ after(grammarAccess.getInvokeAccess().getFunctionTypeAndValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Invoke__PListAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvokeAccess().getPListParameterListParserRuleCall_4_0()); }
	ruleParameterList{ after(grammarAccess.getInvokeAccess().getPListParameterListParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Invoke__ToAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvokeAccess().getToTypeAndValueParserRuleCall_7_0()); }
	ruleTypeAndValue{ after(grammarAccess.getInvokeAccess().getToTypeAndValueParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Invoke__UnwindAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvokeAccess().getUnwindTypeAndValueParserRuleCall_9_0()); }
	ruleTypeAndValue{ after(grammarAccess.getInvokeAccess().getUnwindTypeAndValueParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Return__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getValueTypeAndValueParserRuleCall_1_1_0()); }
	ruleTypeAndValue{ after(grammarAccess.getReturnAccess().getValueTypeAndValueParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Branch__DestinationAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBranchAccess().getDestinationTypeAndValueParserRuleCall_0_1_0()); }
	ruleTypeAndValue{ after(grammarAccess.getBranchAccess().getDestinationTypeAndValueParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Branch__CondAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBranchAccess().getCondTypeAndValueParserRuleCall_1_1_0()); }
	ruleTypeAndValue{ after(grammarAccess.getBranchAccess().getCondTypeAndValueParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Branch__LabelTrueAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBranchAccess().getLabelTrueTypeAndValueParserRuleCall_1_3_0()); }
	ruleTypeAndValue{ after(grammarAccess.getBranchAccess().getLabelTrueTypeAndValueParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Branch__LabelFalseAssignment_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBranchAccess().getLabelFalseTypeAndValueParserRuleCall_1_5_0()); }
	ruleTypeAndValue{ after(grammarAccess.getBranchAccess().getLabelFalseTypeAndValueParserRuleCall_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBody__BlocksAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionBodyAccess().getBlocksBasicBlockParserRuleCall_1_0()); }
	ruleBasicBlock{ after(grammarAccess.getFunctionBodyAccess().getBlocksBasicBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicBlock__LabelAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicBlockAccess().getLabelNOBRACKETTerminalRuleCall_0_0()); }
	RULE_NOBRACKET{ after(grammarAccess.getBasicBlockAccess().getLabelNOBRACKETTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BasicBlock__InstructionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicBlockAccess().getInstructionsInstructionParserRuleCall_2_0()); }
	ruleInstruction{ after(grammarAccess.getBasicBlockAccess().getInstructionsInstructionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_INTEGER : 'i' ('0'..'9')+ '*'*;

RULE_SL_COMMENT : ';' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_VAR_TYPE : (('%'|'@') (RULE_NOBRACKET|'(' RULE_NOBRACKET ')'|RULE_INT) '*'*|'('+ ('%'|'@') (RULE_NOBRACKET|'(' RULE_NOBRACKET ')'|'%' RULE_INT) '*'* ')'+ '*'*);

RULE_NOBRACKET : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')* RULE_POINT?;

RULE_POINT : '.' (RULE_NOBRACKET|'(' RULE_NOBRACKET ')');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


