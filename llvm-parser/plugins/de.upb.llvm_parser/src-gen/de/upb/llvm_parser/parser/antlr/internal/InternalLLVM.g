/*
* generated by Xtext
*/
grammar InternalLLVM;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.upb.llvm_parser.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.upb.llvm_parser.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.upb.llvm_parser.services.LLVMGrammarAccess;

}

@parser::members {

 	private LLVMGrammarAccess grammarAccess;
 	
    public InternalLLVMParser(TokenStream input, LLVMGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "LLVM";	
   	}
   	
   	@Override
   	protected LLVMGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleLLVM
entryRuleLLVM returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLLVMRule()); }
	 iv_ruleLLVM=ruleLLVM 
	 { $current=$iv_ruleLLVM.current; } 
	 EOF 
;

// Rule LLVM
ruleLLVM returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getLLVMAccess().getElementsAbstractElementParserRuleCall_0()); 
	    }
		lv_elements_0_0=ruleAbstractElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLLVMRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_0_0, 
        		"AbstractElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleNUMBER
entryRuleNUMBER returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNUMBERRule()); } 
	 iv_ruleNUMBER=ruleNUMBER 
	 { $current=$iv_ruleNUMBER.current.getText(); }  
	 EOF 
;

// Rule NUMBER
ruleNUMBER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNUMBERAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_1()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNUMBERAccess().getFullStopKeyword_2_0()); 
    }
    this_INT_3=RULE_INT    {
		$current.merge(this_INT_3);
    }

    { 
    newLeafNode(this_INT_3, grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_2_1()); 
    }
)?)
    ;





// Entry rule entryRuleCallingConv
entryRuleCallingConv returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCallingConvRule()); } 
	 iv_ruleCallingConv=ruleCallingConv 
	 { $current=$iv_ruleCallingConv.current.getText(); }  
	 EOF 
;

// Rule CallingConv
ruleCallingConv returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='ccc' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCallingConvAccess().getCccKeyword_0()); 
    }

    |
	kw='fastcc' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCallingConvAccess().getFastccKeyword_1()); 
    }

    |
	kw='coldcc' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCallingConvAccess().getColdccKeyword_2()); 
    }

    |
	kw='x86_stdcallcc' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCallingConvAccess().getX86_stdcallccKeyword_3()); 
    }

    |
	kw='x86_fastcallcc' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCallingConvAccess().getX86_fastcallccKeyword_4()); 
    }

    |
	kw='x86_thiscallcc' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCallingConvAccess().getX86_thiscallccKeyword_5()); 
    }

    |
	kw='arm_apcscc' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCallingConvAccess().getArm_apcsccKeyword_6()); 
    }

    |
	kw='arm_aapcscc' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCallingConvAccess().getArm_aapcsccKeyword_7()); 
    }

    |
	kw='arm_aapcs_vfpcc' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCallingConvAccess().getArm_aapcs_vfpccKeyword_8()); 
    }

    |
	kw='msp430_intrcc' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCallingConvAccess().getMsp430_intrccKeyword_9()); 
    }

    |
	kw='ptx_kernel' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCallingConvAccess().getPtx_kernelKeyword_10()); 
    }

    |
	kw='ptx_device' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCallingConvAccess().getPtx_deviceKeyword_11()); 
    }

    |
	kw='spir_func' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCallingConvAccess().getSpir_funcKeyword_12()); 
    }

    |
	kw='spir_kernel' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCallingConvAccess().getSpir_kernelKeyword_13()); 
    }

    |(
	kw='cc' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCallingConvAccess().getCcKeyword_14_0()); 
    }

	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCallingConvAccess().getLessThanSignKeyword_14_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getCallingConvAccess().getNUMBERParserRuleCall_14_2()); 
    }
    this_NUMBER_16=ruleNUMBER    {
		$current.merge(this_NUMBER_16);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCallingConvAccess().getGreaterThanSignKeyword_14_3()); 
    }

    { 
        newCompositeNode(grammarAccess.getCallingConvAccess().getNUMBERParserRuleCall_14_4()); 
    }
    this_NUMBER_18=ruleNUMBER    {
		$current.merge(this_NUMBER_18);
    }

    { 
        afterParserOrEnumRuleCall();
    }
))
    ;





// Entry rule entryRuleFUNCTION_ATTRIBUTES
entryRuleFUNCTION_ATTRIBUTES returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFUNCTION_ATTRIBUTESRule()); } 
	 iv_ruleFUNCTION_ATTRIBUTES=ruleFUNCTION_ATTRIBUTES 
	 { $current=$iv_ruleFUNCTION_ATTRIBUTES.current.getText(); }  
	 EOF 
;

// Rule FUNCTION_ATTRIBUTES
ruleFUNCTION_ATTRIBUTES returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='address_safety' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getAddress_safetyKeyword_0()); 
    }

    |(
	kw='alignstack' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getAlignstackKeyword_1_0()); 
    }

	kw='(' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getLeftParenthesisKeyword_1_1()); 
    }

	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getLessThanSignKeyword_1_2()); 
    }

    { 
        newCompositeNode(grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNUMBERParserRuleCall_1_3()); 
    }
    this_NUMBER_4=ruleNUMBER    {
		$current.merge(this_NUMBER_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getGreaterThanSignKeyword_1_4()); 
    }

	kw=')' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getRightParenthesisKeyword_1_5()); 
    }
)
    |
	kw='alwaysinline' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getAlwaysinlineKeyword_2()); 
    }

    |
	kw='nonlazybind' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNonlazybindKeyword_3()); 
    }

    |
	kw='inlinehint' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getInlinehintKeyword_4()); 
    }

    |
	kw='naked' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNakedKeyword_5()); 
    }

    |
	kw='noimplicitfloat' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNoimplicitfloatKeyword_6()); 
    }

    |
	kw='noinline' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNoinlineKeyword_7()); 
    }

    |
	kw='noredzone' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNoredzoneKeyword_8()); 
    }

    |
	kw='noreturn' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNoreturnKeyword_9()); 
    }

    |
	kw='nounwind' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getNounwindKeyword_10()); 
    }

    |
	kw='optsize' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getOptsizeKeyword_11()); 
    }

    |
	kw='readnone' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getReadnoneKeyword_12()); 
    }

    |
	kw='readonly' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getReadonlyKeyword_13()); 
    }

    |
	kw='returns_twice' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getReturns_twiceKeyword_14()); 
    }

    |
	kw='ssp' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getSspKeyword_15()); 
    }

    |
	kw='sspreq' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getSspreqKeyword_16()); 
    }

    |
	kw='uwtable' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFUNCTION_ATTRIBUTESAccess().getUwtableKeyword_17()); 
    }
)
    ;





// Entry rule entryRuleKEYWORDS
entryRuleKEYWORDS returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getKEYWORDSRule()); } 
	 iv_ruleKEYWORDS=ruleKEYWORDS 
	 { $current=$iv_ruleKEYWORDS.current.getText(); }  
	 EOF 
;

// Rule KEYWORDS
ruleKEYWORDS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ALIAS_LINKAGE_0=RULE_ALIAS_LINKAGE    {
		$current.merge(this_ALIAS_LINKAGE_0);
    }

    { 
    newLeafNode(this_ALIAS_LINKAGE_0, grammarAccess.getKEYWORDSAccess().getALIAS_LINKAGETerminalRuleCall_0()); 
    }

    |    this_ATOMIC_ORDERING_1=RULE_ATOMIC_ORDERING    {
		$current.merge(this_ATOMIC_ORDERING_1);
    }

    { 
    newLeafNode(this_ATOMIC_ORDERING_1, grammarAccess.getKEYWORDSAccess().getATOMIC_ORDERINGTerminalRuleCall_1()); 
    }

    |    this_BIN_OP_2=RULE_BIN_OP    {
		$current.merge(this_BIN_OP_2);
    }

    { 
    newLeafNode(this_BIN_OP_2, grammarAccess.getKEYWORDSAccess().getBIN_OPTerminalRuleCall_2()); 
    }

    |    this_RETURN_ATTRIBUTES_3=RULE_RETURN_ATTRIBUTES    {
		$current.merge(this_RETURN_ATTRIBUTES_3);
    }

    { 
    newLeafNode(this_RETURN_ATTRIBUTES_3, grammarAccess.getKEYWORDSAccess().getRETURN_ATTRIBUTESTerminalRuleCall_3()); 
    }

    |    this_CAST_OP_4=RULE_CAST_OP    {
		$current.merge(this_CAST_OP_4);
    }

    { 
    newLeafNode(this_CAST_OP_4, grammarAccess.getKEYWORDSAccess().getCAST_OPTerminalRuleCall_4()); 
    }

    |    this_I_PREDICATES_5=RULE_I_PREDICATES    {
		$current.merge(this_I_PREDICATES_5);
    }

    { 
    newLeafNode(this_I_PREDICATES_5, grammarAccess.getKEYWORDSAccess().getI_PREDICATESTerminalRuleCall_5()); 
    }

    |    this_VISIBILITY_6=RULE_VISIBILITY    {
		$current.merge(this_VISIBILITY_6);
    }

    { 
    newLeafNode(this_VISIBILITY_6, grammarAccess.getKEYWORDSAccess().getVISIBILITYTerminalRuleCall_6()); 
    }

    |    this_LINKAGE_7=RULE_LINKAGE    {
		$current.merge(this_LINKAGE_7);
    }

    { 
    newLeafNode(this_LINKAGE_7, grammarAccess.getKEYWORDSAccess().getLINKAGETerminalRuleCall_7()); 
    }
)
    ;





// Entry rule entryRuleLABEL_ID
entryRuleLABEL_ID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLABEL_IDRule()); } 
	 iv_ruleLABEL_ID=ruleLABEL_ID 
	 { $current=$iv_ruleLABEL_ID.current.getText(); }  
	 EOF 
;

// Rule LABEL_ID
ruleLABEL_ID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getLABEL_IDAccess().getKEYWORDSParserRuleCall_0_0()); 
    }
    this_KEYWORDS_0=ruleKEYWORDS    {
		$current.merge(this_KEYWORDS_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_INT_TYPE_1=RULE_INT_TYPE    {
		$current.merge(this_INT_TYPE_1);
    }

    { 
    newLeafNode(this_INT_TYPE_1, grammarAccess.getLABEL_IDAccess().getINT_TYPETerminalRuleCall_0_1()); 
    }

    |    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getLABEL_IDAccess().getIDTerminalRuleCall_0_2()); 
    }

    |    this_BOOL_3=RULE_BOOL    {
		$current.merge(this_BOOL_3);
    }

    { 
    newLeafNode(this_BOOL_3, grammarAccess.getLABEL_IDAccess().getBOOLTerminalRuleCall_0_3()); 
    }

    |
	kw='catch' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLABEL_IDAccess().getCatchKeyword_0_4()); 
    }

    |
	kw='invoke' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLABEL_IDAccess().getInvokeKeyword_0_5()); 
    }

    |
	kw='resume' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLABEL_IDAccess().getResumeKeyword_0_6()); 
    }

    |
	kw='switch' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLABEL_IDAccess().getSwitchKeyword_0_7()); 
    }
)(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLABEL_IDAccess().getFullStopKeyword_1_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getLABEL_IDAccess().getKEYWORDSParserRuleCall_1_1_0()); 
    }
    this_KEYWORDS_9=ruleKEYWORDS    {
		$current.merge(this_KEYWORDS_9);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_INT_TYPE_10=RULE_INT_TYPE    {
		$current.merge(this_INT_TYPE_10);
    }

    { 
    newLeafNode(this_INT_TYPE_10, grammarAccess.getLABEL_IDAccess().getINT_TYPETerminalRuleCall_1_1_1()); 
    }

    |    this_ID_11=RULE_ID    {
		$current.merge(this_ID_11);
    }

    { 
    newLeafNode(this_ID_11, grammarAccess.getLABEL_IDAccess().getIDTerminalRuleCall_1_1_2()); 
    }

    |    this_BOOL_12=RULE_BOOL    {
		$current.merge(this_BOOL_12);
    }

    { 
    newLeafNode(this_BOOL_12, grammarAccess.getLABEL_IDAccess().getBOOLTerminalRuleCall_1_1_3()); 
    }

    |
	kw='catch' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLABEL_IDAccess().getCatchKeyword_1_1_4()); 
    }

    |
	kw='invoke' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLABEL_IDAccess().getInvokeKeyword_1_1_5()); 
    }

    |
	kw='resume' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLABEL_IDAccess().getResumeKeyword_1_1_6()); 
    }

    |
	kw='switch' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLABEL_IDAccess().getSwitchKeyword_1_1_7()); 
    }
))*)
    ;





// Entry rule entryRuleAbstractElement
entryRuleAbstractElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractElementRule()); }
	 iv_ruleAbstractElement=ruleAbstractElement 
	 { $current=$iv_ruleAbstractElement.current; } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getAbstractElementAccess().getTopLevelEntityParserRuleCall_0_0()); 
    }
    this_TopLevelEntity_0=ruleTopLevelEntity
    { 
        $current = $this_TopLevelEntity_0.current; 
        afterParserOrEnumRuleCall();
    }
(this_SL_COMMENT_1=RULE_SL_COMMENT
    { 
    newLeafNode(this_SL_COMMENT_1, grammarAccess.getAbstractElementAccess().getSL_COMMENTTerminalRuleCall_0_1()); 
    }
)?)
    |(
    { 
        newCompositeNode(grammarAccess.getAbstractElementAccess().getMainLevelEntityParserRuleCall_1_0()); 
    }
    this_MainLevelEntity_2=ruleMainLevelEntity
    { 
        $current = $this_MainLevelEntity_2.current; 
        afterParserOrEnumRuleCall();
    }
(this_SL_COMMENT_3=RULE_SL_COMMENT
    { 
    newLeafNode(this_SL_COMMENT_3, grammarAccess.getAbstractElementAccess().getSL_COMMENTTerminalRuleCall_1_1()); 
    }
)?))
;





// Entry rule entryRuleTopLevelEntity
entryRuleTopLevelEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTopLevelEntityRule()); }
	 iv_ruleTopLevelEntity=ruleTopLevelEntity 
	 { $current=$iv_ruleTopLevelEntity.current; } 
	 EOF 
;

// Rule TopLevelEntity
ruleTopLevelEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='module' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTopLevelEntityAccess().getModuleKeyword_0_0());
    }
	otherlv_1='asm' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTopLevelEntityAccess().getAsmKeyword_0_1());
    }
(
(
		lv_module_2_0=RULE_STRING
		{
			newLeafNode(lv_module_2_0, grammarAccess.getTopLevelEntityAccess().getModuleSTRINGTerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopLevelEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"module",
        		lv_module_2_0, 
        		"STRING");
	    }

)
))
    |(	otherlv_3='target' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTopLevelEntityAccess().getTargetKeyword_1_0());
    }
(	otherlv_4='datalayout' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTopLevelEntityAccess().getDatalayoutKeyword_1_1_0());
    }

    |	otherlv_5='triple' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTopLevelEntityAccess().getTripleKeyword_1_1_1());
    }
)	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTopLevelEntityAccess().getEqualsSignKeyword_1_2());
    }
(
(
		lv_target_7_0=RULE_STRING
		{
			newLeafNode(lv_target_7_0, grammarAccess.getTopLevelEntityAccess().getTargetSTRINGTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopLevelEntityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"target",
        		lv_target_7_0, 
        		"STRING");
	    }

)
))
    |(	otherlv_8='deplibs' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTopLevelEntityAccess().getDeplibsKeyword_2_0());
    }
	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTopLevelEntityAccess().getEqualsSignKeyword_2_1());
    }
	otherlv_10='[' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTopLevelEntityAccess().getLeftSquareBracketKeyword_2_2());
    }
(
(
		lv_libs_11_0=RULE_STRING
		{
			newLeafNode(lv_libs_11_0, grammarAccess.getTopLevelEntityAccess().getLibsSTRINGTerminalRuleCall_2_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopLevelEntityRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"libs",
        		lv_libs_11_0, 
        		"STRING");
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getTopLevelEntityAccess().getCommaKeyword_2_4_0());
    }
(
(
		lv_libs_13_0=RULE_STRING
		{
			newLeafNode(lv_libs_13_0, grammarAccess.getTopLevelEntityAccess().getLibsSTRINGTerminalRuleCall_2_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopLevelEntityRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"libs",
        		lv_libs_13_0, 
        		"STRING");
	    }

)
))*	otherlv_14=']' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getTopLevelEntityAccess().getRightSquareBracketKeyword_2_5());
    }
))
;





// Entry rule entryRuleMainLevelEntity
entryRuleMainLevelEntity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMainLevelEntityRule()); }
	 iv_ruleMainLevelEntity=ruleMainLevelEntity 
	 { $current=$iv_ruleMainLevelEntity.current; } 
	 EOF 
;

// Rule MainLevelEntity
ruleMainLevelEntity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMainLevelEntityAccess().getTypeDefinitionParserRuleCall_0()); 
    }
    this_TypeDefinition_0=ruleTypeDefinition
    { 
        $current = $this_TypeDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMainLevelEntityAccess().getGlobalDefinitionParserRuleCall_1()); 
    }
    this_GlobalDefinition_1=ruleGlobalDefinition
    { 
        $current = $this_GlobalDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMainLevelEntityAccess().getFunctionDefinitionParserRuleCall_2()); 
    }
    this_FunctionDefinition_2=ruleFunctionDefinition
    { 
        $current = $this_FunctionDefinition_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMainLevelEntityAccess().getAliasDefinitionParserRuleCall_3()); 
    }
    this_AliasDefinition_3=ruleAliasDefinition
    { 
        $current = $this_AliasDefinition_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMainLevelEntityAccess().getMetadataValueParserRuleCall_4()); 
    }
    this_MetadataValue_4=ruleMetadataValue
    { 
        $current = $this_MetadataValue_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTypeDefinition
entryRuleTypeDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeDefinitionRule()); }
	 iv_ruleTypeDefinition=ruleTypeDefinition 
	 { $current=$iv_ruleTypeDefinition.current; } 
	 EOF 
;

// Rule TypeDefinition
ruleTypeDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDefinitionAccess().getAddressAddressParserRuleCall_0_0()); 
	    }
		lv_address_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDefinitionRule());
	        }
       		set(
       			$current, 
       			"address",
        		lv_address_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTypeDefinitionAccess().getEqualsSignKeyword_1());
    }
(	otherlv_2='type' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTypeDefinitionAccess().getTypeKeyword_2_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDefinitionAccess().getStructStructureParserRuleCall_2_1_0_0()); 
	    }
		lv_struct_3_0=ruleStructure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDefinitionRule());
	        }
       		set(
       			$current, 
       			"struct",
        		lv_struct_3_0, 
        		"Structure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |	otherlv_4='opaque' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTypeDefinitionAccess().getOpaqueKeyword_2_1_1());
    }
)))
;





// Entry rule entryRuleGlobalDefinition
entryRuleGlobalDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGlobalDefinitionRule()); }
	 iv_ruleGlobalDefinition=ruleGlobalDefinition 
	 { $current=$iv_ruleGlobalDefinition.current; } 
	 EOF 
;

// Rule GlobalDefinition
ruleGlobalDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalDefinitionAccess().getAdressAddressParserRuleCall_0_0()); 
	    }
		lv_adress_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalDefinitionRule());
	        }
       		set(
       			$current, 
       			"adress",
        		lv_adress_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGlobalDefinitionAccess().getEqualsSignKeyword_1());
    }
(this_LINKAGE_2=RULE_LINKAGE
    { 
    newLeafNode(this_LINKAGE_2, grammarAccess.getGlobalDefinitionAccess().getLINKAGETerminalRuleCall_2_0()); 
    }

    |this_ALIAS_LINKAGE_3=RULE_ALIAS_LINKAGE
    { 
    newLeafNode(this_ALIAS_LINKAGE_3, grammarAccess.getGlobalDefinitionAccess().getALIAS_LINKAGETerminalRuleCall_2_1()); 
    }

    |	otherlv_4='global' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGlobalDefinitionAccess().getGlobalKeyword_2_2());
    }

    |	otherlv_5='unnamed_addr' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGlobalDefinitionAccess().getUnnamed_addrKeyword_2_3());
    }

    |	otherlv_6='constant' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGlobalDefinitionAccess().getConstantKeyword_2_4());
    }
)*(
(
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalDefinitionAccess().getTypeTypeUseParserRuleCall_3_0_0()); 
	    }
		lv_type_7_1=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalDefinitionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_7_1, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getGlobalDefinitionAccess().getTypeAggregate_TypesParserRuleCall_3_0_1()); 
	    }
		lv_type_7_2=ruleAggregate_Types		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalDefinitionRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_7_2, 
        		"Aggregate_Types");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(
(
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalDefinitionAccess().getValueValueStructParserRuleCall_4_0_0()); 
	    }
		lv_value_8_1=ruleValueStruct		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalDefinitionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_8_1, 
        		"ValueStruct");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getGlobalDefinitionAccess().getValueValueParserRuleCall_4_0_1()); 
	    }
		lv_value_8_2=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalDefinitionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_8_2, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)

)
)?(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getGlobalDefinitionAccess().getCommaKeyword_5_0());
    }
	otherlv_10='align' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getGlobalDefinitionAccess().getAlignKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGlobalDefinitionAccess().getAlignNUMBERParserRuleCall_5_2_0()); 
	    }
		lv_align_11_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGlobalDefinitionRule());
	        }
       		set(
       			$current, 
       			"align",
        		lv_align_11_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionDefinitionRule()); }
	 iv_ruleFunctionDefinition=ruleFunctionDefinition 
	 { $current=$iv_ruleFunctionDefinition.current; } 
	 EOF 
;

// Rule FunctionDefinition
ruleFunctionDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='define' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFunctionDefinitionAccess().getDefineKeyword_0_0());
    }
(this_LINKAGE_1=RULE_LINKAGE
    { 
    newLeafNode(this_LINKAGE_1, grammarAccess.getFunctionDefinitionAccess().getLINKAGETerminalRuleCall_0_1_0()); 
    }

    |this_ALIAS_LINKAGE_2=RULE_ALIAS_LINKAGE
    { 
    newLeafNode(this_ALIAS_LINKAGE_2, grammarAccess.getFunctionDefinitionAccess().getALIAS_LINKAGETerminalRuleCall_0_1_1()); 
    }
)?(this_VISIBILITY_3=RULE_VISIBILITY
    { 
    newLeafNode(this_VISIBILITY_3, grammarAccess.getFunctionDefinitionAccess().getVISIBILITYTerminalRuleCall_0_2()); 
    }
)?(
    { 
        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getCallingConvParserRuleCall_0_3()); 
    }
ruleCallingConv
    { 
        afterParserOrEnumRuleCall();
    }
)?(this_RETURN_ATTRIBUTES_5=RULE_RETURN_ATTRIBUTES
    { 
    newLeafNode(this_RETURN_ATTRIBUTES_5, grammarAccess.getFunctionDefinitionAccess().getRETURN_ATTRIBUTESTerminalRuleCall_0_4()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getReturnTypeTypeUseParserRuleCall_0_5_0()); 
	    }
		lv_returnType_6_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_6_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getAddressAddressParserRuleCall_0_6_0()); 
	    }
		lv_address_7_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
	        }
       		set(
       			$current, 
       			"address",
        		lv_address_7_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getParameterFunctionParameterListParserRuleCall_0_7_0()); 
	    }
		lv_parameter_8_0=ruleFunctionParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
	        }
       		set(
       			$current, 
       			"parameter",
        		lv_parameter_8_0, 
        		"FunctionParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9='unnamed_addr' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFunctionDefinitionAccess().getUnnamed_addrKeyword_0_8());
    }
)?(
    { 
        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getFUNCTION_ATTRIBUTESParserRuleCall_0_9()); 
    }
ruleFUNCTION_ATTRIBUTES
    { 
        afterParserOrEnumRuleCall();
    }
)*(	otherlv_11='section ' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFunctionDefinitionAccess().getSectionKeyword_0_10_0());
    }
this_STRING_12=RULE_STRING
    { 
    newLeafNode(this_STRING_12, grammarAccess.getFunctionDefinitionAccess().getSTRINGTerminalRuleCall_0_10_1()); 
    }
)?(	otherlv_13='align' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFunctionDefinitionAccess().getAlignKeyword_0_11_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getAlignNUMBERParserRuleCall_0_11_1_0()); 
	    }
		lv_align_14_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
	        }
       		set(
       			$current, 
       			"align",
        		lv_align_14_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getBodyFunctionBodyParserRuleCall_0_12_0()); 
	    }
		lv_body_15_0=ruleFunctionBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_15_0, 
        		"FunctionBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_16='declare' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getFunctionDefinitionAccess().getDeclareKeyword_1_0());
    }
(this_LINKAGE_17=RULE_LINKAGE
    { 
    newLeafNode(this_LINKAGE_17, grammarAccess.getFunctionDefinitionAccess().getLINKAGETerminalRuleCall_1_1_0()); 
    }

    |this_ALIAS_LINKAGE_18=RULE_ALIAS_LINKAGE
    { 
    newLeafNode(this_ALIAS_LINKAGE_18, grammarAccess.getFunctionDefinitionAccess().getALIAS_LINKAGETerminalRuleCall_1_1_1()); 
    }
)?(this_VISIBILITY_19=RULE_VISIBILITY
    { 
    newLeafNode(this_VISIBILITY_19, grammarAccess.getFunctionDefinitionAccess().getVISIBILITYTerminalRuleCall_1_2()); 
    }
)?(
    { 
        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getCallingConvParserRuleCall_1_3()); 
    }
ruleCallingConv
    { 
        afterParserOrEnumRuleCall();
    }
)?(this_RETURN_ATTRIBUTES_21=RULE_RETURN_ATTRIBUTES
    { 
    newLeafNode(this_RETURN_ATTRIBUTES_21, grammarAccess.getFunctionDefinitionAccess().getRETURN_ATTRIBUTESTerminalRuleCall_1_4()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getReturnTypeTypeUseParserRuleCall_1_5_0()); 
	    }
		lv_returnType_22_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_22_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getAddressAddressParserRuleCall_1_6_0()); 
	    }
		lv_address_23_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
	        }
       		set(
       			$current, 
       			"address",
        		lv_address_23_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getParameterFunctionParameterListParserRuleCall_1_7_0()); 
	    }
		lv_parameter_24_0=ruleFunctionParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
	        }
       		set(
       			$current, 
       			"parameter",
        		lv_parameter_24_0, 
        		"FunctionParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_25='unnamed_addr' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getFunctionDefinitionAccess().getUnnamed_addrKeyword_1_8());
    }
)?(
    { 
        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getFUNCTION_ATTRIBUTESParserRuleCall_1_9()); 
    }
ruleFUNCTION_ATTRIBUTES
    { 
        afterParserOrEnumRuleCall();
    }
)*(	otherlv_27='section ' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getFunctionDefinitionAccess().getSectionKeyword_1_10_0());
    }
this_STRING_28=RULE_STRING
    { 
    newLeafNode(this_STRING_28, grammarAccess.getFunctionDefinitionAccess().getSTRINGTerminalRuleCall_1_10_1()); 
    }
)?(	otherlv_29='align' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getFunctionDefinitionAccess().getAlignKeyword_1_11_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getAlignNUMBERParserRuleCall_1_11_1_0()); 
	    }
		lv_align_30_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
	        }
       		set(
       			$current, 
       			"align",
        		lv_align_30_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
;





// Entry rule entryRuleAliasDefinition
entryRuleAliasDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAliasDefinitionRule()); }
	 iv_ruleAliasDefinition=ruleAliasDefinition 
	 { $current=$iv_ruleAliasDefinition.current; } 
	 EOF 
;

// Rule AliasDefinition
ruleAliasDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAliasDefinitionAccess().getAddressAddressParserRuleCall_0_0()); 
	    }
		lv_address_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAliasDefinitionRule());
	        }
       		set(
       			$current, 
       			"address",
        		lv_address_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAliasDefinitionAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='alias' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAliasDefinitionAccess().getAliasKeyword_2());
    }
(this_ALIAS_LINKAGE_3=RULE_ALIAS_LINKAGE
    { 
    newLeafNode(this_ALIAS_LINKAGE_3, grammarAccess.getAliasDefinitionAccess().getALIAS_LINKAGETerminalRuleCall_3()); 
    }
)?(this_VISIBILITY_4=RULE_VISIBILITY
    { 
    newLeafNode(this_VISIBILITY_4, grammarAccess.getAliasDefinitionAccess().getVISIBILITYTerminalRuleCall_4()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAliasDefinitionAccess().getAliastypeTypeUseParserRuleCall_5_0()); 
	    }
		lv_aliastype_5_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAliasDefinitionRule());
	        }
       		set(
       			$current, 
       			"aliastype",
        		lv_aliastype_5_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAliasDefinitionAccess().getAliasvalueValueParserRuleCall_6_0()); 
	    }
		lv_aliasvalue_6_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAliasDefinitionRule());
	        }
       		set(
       			$current, 
       			"aliasvalue",
        		lv_aliasvalue_6_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAliasDefinitionAccess().getAliaseeTypeUseParserRuleCall_7_0()); 
	    }
		lv_aliasee_7_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAliasDefinitionRule());
	        }
       		set(
       			$current, 
       			"aliasee",
        		lv_aliasee_7_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTypeUse
entryRuleTypeUse returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeUseRule()); }
	 iv_ruleTypeUse=ruleTypeUse 
	 { $current=$iv_ruleTypeUse.current; } 
	 EOF 
;

// Rule TypeUse
ruleTypeUse returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getTypeUseAccess().getPredefinedParserRuleCall_0_0()); 
    }
    this_Predefined_0=rulePredefined
    { 
        $current = $this_Predefined_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeUseAccess().getAddressUseParserRuleCall_0_1()); 
    }
    this_AddressUse_1=ruleAddressUse
    { 
        $current = $this_AddressUse_1.current; 
        afterParserOrEnumRuleCall();
    }
)(
(
		lv_functionInput_2_0=RULE_UNKNOWN_TYPE
		{
			newLeafNode(lv_functionInput_2_0, grammarAccess.getTypeUseAccess().getFunctionInputUNKNOWN_TYPETerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeUseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"functionInput",
        		lv_functionInput_2_0, 
        		"UNKNOWN_TYPE");
	    }

)
)?)
;





// Entry rule entryRuleAddressUse
entryRuleAddressUse returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddressUseRule()); }
	 iv_ruleAddressUse=ruleAddressUse 
	 { $current=$iv_ruleAddressUse.current; } 
	 EOF 
;

// Rule AddressUse
ruleAddressUse returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddressUseRule());
	        }
        }
	otherlv_0=RULE_VALID_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getAddressUseAccess().getAddressAddressCrossReference_0_0()); 
	}

)
)(
(
		lv_pointer_1_0=RULE_POINTER
		{
			newLeafNode(lv_pointer_1_0, grammarAccess.getAddressUseAccess().getPointerPOINTERTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddressUseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"pointer",
        		lv_pointer_1_0, 
        		"POINTER");
	    }

)
)?)
;





// Entry rule entryRuleAddress
entryRuleAddress returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddressRule()); }
	 iv_ruleAddress=ruleAddress 
	 { $current=$iv_ruleAddress.current; } 
	 EOF 
;

// Rule Address
ruleAddress returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_VALID_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getAddressAccess().getNameVALID_IDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddressRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"VALID_ID");
	    }

)
)
;





// Entry rule entryRulePredefined
entryRulePredefined returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPredefinedRule()); }
	 iv_rulePredefined=rulePredefined 
	 { $current=$iv_rulePredefined.current; } 
	 EOF 
;

// Rule Predefined
rulePredefined returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_type_0_1=RULE_PRIMITIVE_VALUE
		{
			newLeafNode(lv_type_0_1, grammarAccess.getPredefinedAccess().getTypePRIMITIVE_VALUETerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPredefinedRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_0_1, 
        		"PRIMITIVE_VALUE");
	    }

    |		lv_type_0_2=RULE_INT_TYPE
		{
			newLeafNode(lv_type_0_2, grammarAccess.getPredefinedAccess().getTypeINT_TYPETerminalRuleCall_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPredefinedRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_0_2, 
        		"INT_TYPE");
	    }

    |		lv_type_0_3=RULE_FLOATING_POINT_TYPE
		{
			newLeafNode(lv_type_0_3, grammarAccess.getPredefinedAccess().getTypeFLOATING_POINT_TYPETerminalRuleCall_0_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPredefinedRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_0_3, 
        		"FLOATING_POINT_TYPE");
	    }

)

)
)(
(
		lv_pointer_1_0=RULE_POINTER
		{
			newLeafNode(lv_pointer_1_0, grammarAccess.getPredefinedAccess().getPointerPOINTERTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPredefinedRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"pointer",
        		lv_pointer_1_0, 
        		"POINTER");
	    }

)
)?)
;





// Entry rule entryRuleVector
entryRuleVector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVectorRule()); }
	 iv_ruleVector=ruleVector 
	 { $current=$iv_ruleVector.current; } 
	 EOF 
;

// Rule Vector
ruleVector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVectorAccess().getLessThanSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVectorAccess().getLengthNUMBERParserRuleCall_1_0()); 
	    }
		lv_length_1_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVectorRule());
	        }
       		set(
       			$current, 
       			"length",
        		lv_length_1_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='x' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVectorAccess().getXKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVectorAccess().getTypeTypeUseParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVectorRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='>' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVectorAccess().getGreaterThanSignKeyword_4());
    }
)
;





// Entry rule entryRuleArray
entryRuleArray returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayRule()); }
	 iv_ruleArray=ruleArray 
	 { $current=$iv_ruleArray.current; } 
	 EOF 
;

// Rule Array
ruleArray returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getArrayAccess().getArrayAction_0(),
            $current);
    }
)((	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayAccess().getLengthNUMBERParserRuleCall_1_0_1_0()); 
	    }
		lv_length_2_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayRule());
	        }
       		set(
       			$current, 
       			"length",
        		lv_length_2_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='x' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArrayAccess().getXKeyword_1_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayAccess().getTypeTypeUseParserRuleCall_1_0_3_0()); 
	    }
		lv_type_4_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_4_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getArrayAccess().getRightSquareBracketKeyword_1_0_4());
    }
)
    |	otherlv_6='[]' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getArrayAccess().getLeftSquareBracketRightSquareBracketKeyword_1_1());
    }

    |(	otherlv_7='[' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1_2_0());
    }
	otherlv_8=']' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getArrayAccess().getRightSquareBracketKeyword_1_2_1());
    }
))(this_POINTER_9=RULE_POINTER
    { 
    newLeafNode(this_POINTER_9, grammarAccess.getArrayAccess().getPOINTERTerminalRuleCall_2()); 
    }
)?)
;





// Entry rule entryRuleAggregate_Types
entryRuleAggregate_Types returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAggregate_TypesRule()); }
	 iv_ruleAggregate_Types=ruleAggregate_Types 
	 { $current=$iv_ruleAggregate_Types.current; } 
	 EOF 
;

// Rule Aggregate_Types
ruleAggregate_Types returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAggregate_TypesAccess().getStructureParserRuleCall_0()); 
    }
    this_Structure_0=ruleStructure
    { 
        $current = $this_Structure_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAggregate_TypesAccess().getArrayParserRuleCall_1()); 
    }
    this_Array_1=ruleArray
    { 
        $current = $this_Array_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAggregate_TypesAccess().getVectorParserRuleCall_2()); 
    }
    this_Vector_2=ruleVector
    { 
        $current = $this_Vector_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	 iv_ruleConstant=ruleConstant 
	 { $current=$iv_ruleConstant.current; } 
	 EOF 
;

// Rule Constant
ruleConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstantAccess().getValueNUMBERParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstantRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRulePrimitiveValue
entryRulePrimitiveValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimitiveValueRule()); }
	 iv_rulePrimitiveValue=rulePrimitiveValue 
	 { $current=$iv_rulePrimitiveValue.current; } 
	 EOF 
;

// Rule PrimitiveValue
rulePrimitiveValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_value_0_1=RULE_STRING
		{
			newLeafNode(lv_value_0_1, grammarAccess.getPrimitiveValueAccess().getValueSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_1, 
        		"STRING");
	    }

    |		lv_value_0_2=RULE_PRIMITIVE_VALUE
		{
			newLeafNode(lv_value_0_2, grammarAccess.getPrimitiveValueAccess().getValuePRIMITIVE_VALUETerminalRuleCall_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_2, 
        		"PRIMITIVE_VALUE");
	    }

    |		lv_value_0_3=RULE_INITIALIZER
		{
			newLeafNode(lv_value_0_3, grammarAccess.getPrimitiveValueAccess().getValueINITIALIZERTerminalRuleCall_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_3, 
        		"INITIALIZER");
	    }

    |		lv_value_0_4=RULE_BOOL
		{
			newLeafNode(lv_value_0_4, grammarAccess.getPrimitiveValueAccess().getValueBOOLTerminalRuleCall_0_3()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_4, 
        		"BOOL");
	    }

)

)
)
;





// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	 iv_ruleValue=ruleValue 
	 { $current=$iv_ruleValue.current; } 
	 EOF 
;

// Rule Value
ruleValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getValueAccess().getNestedCastParserRuleCall_0()); 
    }
    this_NestedCast_0=ruleNestedCast
    { 
        $current = $this_NestedCast_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getNestedGetElementPtrParserRuleCall_1()); 
    }
    this_NestedGetElementPtr_1=ruleNestedGetElementPtr
    { 
        $current = $this_NestedGetElementPtr_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getConstantParserRuleCall_2()); 
    }
    this_Constant_2=ruleConstant
    { 
        $current = $this_Constant_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getAddressUseParserRuleCall_3()); 
    }
    this_AddressUse_3=ruleAddressUse
    { 
        $current = $this_AddressUse_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getPrimitiveValueParserRuleCall_4()); 
    }
    this_PrimitiveValue_4=rulePrimitiveValue
    { 
        $current = $this_PrimitiveValue_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleValueStruct
entryRuleValueStruct returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueStructRule()); }
	 iv_ruleValueStruct=ruleValueStruct 
	 { $current=$iv_ruleValueStruct.current; } 
	 EOF 
;

// Rule ValueStruct
ruleValueStruct returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getValueStructAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValueStructAccess().getTypesTypeUseParserRuleCall_1_0()); 
	    }
		lv_types_1_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueStructRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_1_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getValueStructAccess().getValueValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueStructRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getValueStructAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValueStructAccess().getTypesTypeUseParserRuleCall_3_1_0()); 
	    }
		lv_types_4_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueStructRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_4_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getValueStructAccess().getValueValueParserRuleCall_3_2_0()); 
	    }
		lv_value_5_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueStructRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getValueStructAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleStructure
entryRuleStructure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructureRule()); }
	 iv_ruleStructure=ruleStructure 
	 { $current=$iv_ruleStructure.current; } 
	 EOF 
;

// Rule Structure
ruleStructure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStructureAccess().getStructureAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStructureAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getStructureAccess().getTypesTypeUseParserRuleCall_2_0_0()); 
	    }
		lv_types_2_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructureRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_2_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStructureAccess().getCommaKeyword_2_1_0());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructureAccess().getTypesTypeUseParserRuleCall_2_1_1_0_0()); 
	    }
		lv_types_4_1=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructureRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_4_1, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getStructureAccess().getTypesAggregate_TypesParserRuleCall_2_1_1_0_1()); 
	    }
		lv_types_4_2=ruleAggregate_Types		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructureRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_4_2, 
        		"Aggregate_Types");
	        afterParserOrEnumRuleCall();
	    }

)

)
))*)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStructureAccess().getRightCurlyBracketKeyword_3());
    }
(this_POINTER_6=RULE_POINTER
    { 
    newLeafNode(this_POINTER_6, grammarAccess.getStructureAccess().getPOINTERTerminalRuleCall_4()); 
    }
)?)
;





// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getTypeTypeUseParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_RETURN_ATTRIBUTES_1=RULE_RETURN_ATTRIBUTES
    { 
    newLeafNode(this_RETURN_ATTRIBUTES_1, grammarAccess.getParameterAccess().getRETURN_ATTRIBUTESTerminalRuleCall_1()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getValueValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleParameterList
entryRuleParameterList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterListRule()); }
	 iv_ruleParameterList=ruleParameterList 
	 { $current=$iv_ruleParameterList.current; } 
	 EOF 
;

// Rule ParameterList
ruleParameterList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getParameterListAccess().getParameterListAction_0(),
            $current);
    }
)(	otherlv_1='()' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getLeftParenthesisRightParenthesisKeyword_1_0());
    }

    |(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_1_1_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getParameterListAccess().getParamsParameterParserRuleCall_1_1_1_0_0()); 
	    }
		lv_params_3_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterListRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getParameterListAccess().getCommaKeyword_1_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterListAccess().getParamsParameterParserRuleCall_1_1_1_1_1_0()); 
	    }
		lv_params_5_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterListRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getParameterListAccess().getRightParenthesisKeyword_1_1_2());
    }
)))
;





// Entry rule entryRuleFunctionParameter
entryRuleFunctionParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionParameterRule()); }
	 iv_ruleFunctionParameter=ruleFunctionParameter 
	 { $current=$iv_ruleFunctionParameter.current; } 
	 EOF 
;

// Rule FunctionParameter
ruleFunctionParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionParameterAccess().getTypeTypeUseParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionParameterRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_RETURN_ATTRIBUTES_1=RULE_RETURN_ATTRIBUTES
    { 
    newLeafNode(this_RETURN_ATTRIBUTES_1, grammarAccess.getFunctionParameterAccess().getRETURN_ATTRIBUTESTerminalRuleCall_1()); 
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionParameterAccess().getValueAddressParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionParameterRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleFunctionParameterList
entryRuleFunctionParameterList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionParameterListRule()); }
	 iv_ruleFunctionParameterList=ruleFunctionParameterList 
	 { $current=$iv_ruleFunctionParameterList.current; } 
	 EOF 
;

// Rule FunctionParameterList
ruleFunctionParameterList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFunctionParameterListAccess().getFunctionParameterListAction_0(),
            $current);
    }
)(	otherlv_1='()' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFunctionParameterListAccess().getLeftParenthesisRightParenthesisKeyword_1_0());
    }

    |(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFunctionParameterListAccess().getLeftParenthesisKeyword_1_1_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionParameterListAccess().getParamsFunctionParameterParserRuleCall_1_1_1_0_0()); 
	    }
		lv_params_3_0=ruleFunctionParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionParameterListRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"FunctionParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFunctionParameterListAccess().getCommaKeyword_1_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionParameterListAccess().getParamsFunctionParameterParserRuleCall_1_1_1_1_1_0()); 
	    }
		lv_params_5_0=ruleFunctionParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionParameterListRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_5_0, 
        		"FunctionParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFunctionParameterListAccess().getRightParenthesisKeyword_1_1_2());
    }
)))
;





// Entry rule entryRuleTypeList
entryRuleTypeList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeListRule()); }
	 iv_ruleTypeList=ruleTypeList 
	 { $current=$iv_ruleTypeList.current; } 
	 EOF 
;

// Rule TypeList
ruleTypeList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeListAccess().getTypeListAction_0(),
            $current);
    }
)(	otherlv_1='()' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTypeListAccess().getLeftParenthesisRightParenthesisKeyword_1_0());
    }

    |(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTypeListAccess().getLeftParenthesisKeyword_1_1_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeListAccess().getTypesTypeUseParserRuleCall_1_1_1_0_0()); 
	    }
		lv_types_3_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeListRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_3_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeListAccess().getTypelistsTypeListParserRuleCall_1_1_1_1_0()); 
	    }
		lv_typelists_4_0=ruleTypeList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeListRule());
	        }
       		add(
       			$current, 
       			"typelists",
        		lv_typelists_4_0, 
        		"TypeList");
	        afterParserOrEnumRuleCall();
	    }

)
)?(this_RETURN_ATTRIBUTES_5=RULE_RETURN_ATTRIBUTES
    { 
    newLeafNode(this_RETURN_ATTRIBUTES_5, grammarAccess.getTypeListAccess().getRETURN_ATTRIBUTESTerminalRuleCall_1_1_1_2()); 
    }
)?(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTypeListAccess().getCommaKeyword_1_1_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeListAccess().getTypesTypeUseParserRuleCall_1_1_1_3_1_0()); 
	    }
		lv_types_7_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeListRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_7_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeListAccess().getTypelistsTypeListParserRuleCall_1_1_1_3_2_0()); 
	    }
		lv_typelists_8_0=ruleTypeList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeListRule());
	        }
       		add(
       			$current, 
       			"typelists",
        		lv_typelists_8_0, 
        		"TypeList");
	        afterParserOrEnumRuleCall();
	    }

)
)?(this_RETURN_ATTRIBUTES_9=RULE_RETURN_ATTRIBUTES
    { 
    newLeafNode(this_RETURN_ATTRIBUTES_9, grammarAccess.getTypeListAccess().getRETURN_ATTRIBUTESTerminalRuleCall_1_1_1_3_3()); 
    }
)?)*)?(	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTypeListAccess().getRightParenthesisKeyword_1_1_2_0());
    }

    |	otherlv_11=')*' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTypeListAccess().getRightParenthesisAsteriskKeyword_1_1_2_1());
    }

    |	otherlv_12=')**' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getTypeListAccess().getRightParenthesisAsteriskAsteriskKeyword_1_1_2_2());
    }

    |	otherlv_13=')***' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getTypeListAccess().getRightParenthesisAsteriskAsteriskAsteriskKeyword_1_1_2_3());
    }

    |	otherlv_14=')****' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getTypeListAccess().getRightParenthesisAsteriskAsteriskAsteriskAsteriskKeyword_1_1_2_4());
    }

    |	otherlv_15=')*****' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getTypeListAccess().getRightParenthesisAsteriskAsteriskAsteriskAsteriskAsteriskKeyword_1_1_2_5());
    }
))))
;





// Entry rule entryRuleFunctionBody
entryRuleFunctionBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionBodyRule()); }
	 iv_ruleFunctionBody=ruleFunctionBody 
	 { $current=$iv_ruleFunctionBody.current; } 
	 EOF 
;

// Rule FunctionBody
ruleFunctionBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionBodyAccess().getMetaMetadataValueParserRuleCall_0_0()); 
	    }
		lv_meta_0_0=ruleMetadataValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
	        }
       		add(
       			$current, 
       			"meta",
        		lv_meta_0_0, 
        		"MetadataValue");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFunctionBodyAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionBodyAccess().getBlocksBasicBlockParserRuleCall_2_0()); 
	    }
		lv_blocks_2_0=ruleBasicBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionBodyRule());
	        }
       		add(
       			$current, 
       			"blocks",
        		lv_blocks_2_0, 
        		"BasicBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFunctionBodyAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleInstruction
entryRuleInstruction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstructionRule()); }
	 iv_ruleInstruction=ruleInstruction 
	 { $current=$iv_ruleInstruction.current; } 
	 EOF 
;

// Rule Instruction
ruleInstruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getStoreParserRuleCall_0()); 
    }
    this_Store_0=ruleStore
    { 
        $current = $this_Store_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getLoadParserRuleCall_1()); 
    }
    this_Load_1=ruleLoad
    { 
        $current = $this_Load_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getGetElementPtrParserRuleCall_2()); 
    }
    this_GetElementPtr_2=ruleGetElementPtr
    { 
        $current = $this_GetElementPtr_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getAllocParserRuleCall_3()); 
    }
    this_Alloc_3=ruleAlloc
    { 
        $current = $this_Alloc_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getCmpXchgParserRuleCall_4()); 
    }
    this_CmpXchg_4=ruleCmpXchg
    { 
        $current = $this_CmpXchg_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getAtomicRMWParserRuleCall_5()); 
    }
    this_AtomicRMW_5=ruleAtomicRMW
    { 
        $current = $this_AtomicRMW_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getFenceParserRuleCall_6()); 
    }
    this_Fence_6=ruleFence
    { 
        $current = $this_Fence_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getReturnParserRuleCall_7()); 
    }
    this_Return_7=ruleReturn
    { 
        $current = $this_Return_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getBranchParserRuleCall_8()); 
    }
    this_Branch_8=ruleBranch
    { 
        $current = $this_Branch_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getSwitchParserRuleCall_9()); 
    }
    this_Switch_9=ruleSwitch
    { 
        $current = $this_Switch_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getIndirectBranchParserRuleCall_10()); 
    }
    this_IndirectBranch_10=ruleIndirectBranch
    { 
        $current = $this_IndirectBranch_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getInvokeParserRuleCall_11()); 
    }
    this_Invoke_11=ruleInvoke
    { 
        $current = $this_Invoke_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getResumeParserRuleCall_12()); 
    }
    this_Resume_12=ruleResume
    { 
        $current = $this_Resume_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getUnreachableParserRuleCall_13()); 
    }
    this_Unreachable_13=ruleUnreachable
    { 
        $current = $this_Unreachable_13.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getLogicOperationParserRuleCall_14()); 
    }
    this_LogicOperation_14=ruleLogicOperation
    { 
        $current = $this_LogicOperation_14.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getArithmeticOperationParserRuleCall_15()); 
    }
    this_ArithmeticOperation_15=ruleArithmeticOperation
    { 
        $current = $this_ArithmeticOperation_15.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getCompareParserRuleCall_16()); 
    }
    this_Compare_16=ruleCompare
    { 
        $current = $this_Compare_16.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getCastParserRuleCall_17()); 
    }
    this_Cast_17=ruleCast
    { 
        $current = $this_Cast_17.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getShuffleVectorParserRuleCall_18()); 
    }
    this_ShuffleVector_18=ruleShuffleVector
    { 
        $current = $this_ShuffleVector_18.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getInsertElementParserRuleCall_19()); 
    }
    this_InsertElement_19=ruleInsertElement
    { 
        $current = $this_InsertElement_19.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getExtractElementParserRuleCall_20()); 
    }
    this_ExtractElement_20=ruleExtractElement
    { 
        $current = $this_ExtractElement_20.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getInsertValueParserRuleCall_21()); 
    }
    this_InsertValue_21=ruleInsertValue
    { 
        $current = $this_InsertValue_21.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getExtractValueParserRuleCall_22()); 
    }
    this_ExtractValue_22=ruleExtractValue
    { 
        $current = $this_ExtractValue_22.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getPhiParserRuleCall_23()); 
    }
    this_Phi_23=rulePhi
    { 
        $current = $this_Phi_23.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getSelectParserRuleCall_24()); 
    }
    this_Select_24=ruleSelect
    { 
        $current = $this_Select_24.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getCallParserRuleCall_25()); 
    }
    this_Call_25=ruleCall
    { 
        $current = $this_Call_25.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getVariableAttributeAccessParserRuleCall_26()); 
    }
    this_VariableAttributeAccess_26=ruleVariableAttributeAccess
    { 
        $current = $this_VariableAttributeAccess_26.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getLandingPadParserRuleCall_27()); 
    }
    this_LandingPad_27=ruleLandingPad
    { 
        $current = $this_LandingPad_27.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBasicBlock
entryRuleBasicBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasicBlockRule()); }
	 iv_ruleBasicBlock=ruleBasicBlock 
	 { $current=$iv_ruleBasicBlock.current; } 
	 EOF 
;

// Rule BasicBlock
ruleBasicBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getBasicBlockAccess().getLabelLABEL_IDParserRuleCall_0_0_0()); 
	    }
		lv_label_0_0=ruleLABEL_ID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicBlockRule());
	        }
       		set(
       			$current, 
       			"label",
        		lv_label_0_0, 
        		"LABEL_ID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBasicBlockAccess().getColonKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicBlockAccess().getInstructionsInstructionParserRuleCall_1_0()); 
	    }
		lv_instructions_2_0=ruleInstruction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicBlockRule());
	        }
       		add(
       			$current, 
       			"instructions",
        		lv_instructions_2_0, 
        		"Instruction");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleArithmeticOperation
entryRuleArithmeticOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArithmeticOperationRule()); }
	 iv_ruleArithmeticOperation=ruleArithmeticOperation 
	 { $current=$iv_ruleArithmeticOperation.current; } 
	 EOF 
;

// Rule ArithmeticOperation
ruleArithmeticOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getArithmeticOperationAccess().getResultAddressParserRuleCall_0_0()); 
	    }
		lv_result_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArithmeticOperationRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArithmeticOperationAccess().getEqualsSignKeyword_1());
    }
(
(
(
		lv_operation_2_1=	'add' 
    {
        newLeafNode(lv_operation_2_1, grammarAccess.getArithmeticOperationAccess().getOperationAddKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithmeticOperationRule());
	        }
       		setWithLastConsumed($current, "operation", lv_operation_2_1, null);
	    }

    |		lv_operation_2_2=	'fadd' 
    {
        newLeafNode(lv_operation_2_2, grammarAccess.getArithmeticOperationAccess().getOperationFaddKeyword_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithmeticOperationRule());
	        }
       		setWithLastConsumed($current, "operation", lv_operation_2_2, null);
	    }

    |		lv_operation_2_3=	'sub' 
    {
        newLeafNode(lv_operation_2_3, grammarAccess.getArithmeticOperationAccess().getOperationSubKeyword_2_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithmeticOperationRule());
	        }
       		setWithLastConsumed($current, "operation", lv_operation_2_3, null);
	    }

    |		lv_operation_2_4=	'fsub' 
    {
        newLeafNode(lv_operation_2_4, grammarAccess.getArithmeticOperationAccess().getOperationFsubKeyword_2_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithmeticOperationRule());
	        }
       		setWithLastConsumed($current, "operation", lv_operation_2_4, null);
	    }

    |		lv_operation_2_5=	'mul' 
    {
        newLeafNode(lv_operation_2_5, grammarAccess.getArithmeticOperationAccess().getOperationMulKeyword_2_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithmeticOperationRule());
	        }
       		setWithLastConsumed($current, "operation", lv_operation_2_5, null);
	    }

    |		lv_operation_2_6=	'fmul' 
    {
        newLeafNode(lv_operation_2_6, grammarAccess.getArithmeticOperationAccess().getOperationFmulKeyword_2_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithmeticOperationRule());
	        }
       		setWithLastConsumed($current, "operation", lv_operation_2_6, null);
	    }

    |		lv_operation_2_7=	'udiv' 
    {
        newLeafNode(lv_operation_2_7, grammarAccess.getArithmeticOperationAccess().getOperationUdivKeyword_2_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithmeticOperationRule());
	        }
       		setWithLastConsumed($current, "operation", lv_operation_2_7, null);
	    }

    |		lv_operation_2_8=	'sdiv' 
    {
        newLeafNode(lv_operation_2_8, grammarAccess.getArithmeticOperationAccess().getOperationSdivKeyword_2_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithmeticOperationRule());
	        }
       		setWithLastConsumed($current, "operation", lv_operation_2_8, null);
	    }

    |		lv_operation_2_9=	'fdiv' 
    {
        newLeafNode(lv_operation_2_9, grammarAccess.getArithmeticOperationAccess().getOperationFdivKeyword_2_0_8());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithmeticOperationRule());
	        }
       		setWithLastConsumed($current, "operation", lv_operation_2_9, null);
	    }

    |		lv_operation_2_10=	'urem' 
    {
        newLeafNode(lv_operation_2_10, grammarAccess.getArithmeticOperationAccess().getOperationUremKeyword_2_0_9());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithmeticOperationRule());
	        }
       		setWithLastConsumed($current, "operation", lv_operation_2_10, null);
	    }

    |		lv_operation_2_11=	'srem' 
    {
        newLeafNode(lv_operation_2_11, grammarAccess.getArithmeticOperationAccess().getOperationSremKeyword_2_0_10());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithmeticOperationRule());
	        }
       		setWithLastConsumed($current, "operation", lv_operation_2_11, null);
	    }

    |		lv_operation_2_12=	'frem' 
    {
        newLeafNode(lv_operation_2_12, grammarAccess.getArithmeticOperationAccess().getOperationFremKeyword_2_0_11());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArithmeticOperationRule());
	        }
       		setWithLastConsumed($current, "operation", lv_operation_2_12, null);
	    }

)

)
)((	otherlv_3='nsw' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArithmeticOperationAccess().getNswKeyword_3_0_0());
    }

    |	otherlv_4='nuw' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getArithmeticOperationAccess().getNuwKeyword_3_0_1());
    }
)(	otherlv_5='nuw' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getArithmeticOperationAccess().getNuwKeyword_3_1_0());
    }

    |	otherlv_6='nsw' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getArithmeticOperationAccess().getNswKeyword_3_1_1());
    }
)?)?(
(
		{ 
	        newCompositeNode(grammarAccess.getArithmeticOperationAccess().getOptypeTypeUseParserRuleCall_4_0()); 
	    }
		lv_optype_7_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArithmeticOperationRule());
	        }
       		set(
       			$current, 
       			"optype",
        		lv_optype_7_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getArithmeticOperationAccess().getValue1ValueParserRuleCall_5_0()); 
	    }
		lv_value1_8_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArithmeticOperationRule());
	        }
       		set(
       			$current, 
       			"value1",
        		lv_value1_8_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getArithmeticOperationAccess().getCommaKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArithmeticOperationAccess().getValue2ValueParserRuleCall_7_0()); 
	    }
		lv_value2_10_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArithmeticOperationRule());
	        }
       		set(
       			$current, 
       			"value2",
        		lv_value2_10_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLogicOperation
entryRuleLogicOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogicOperationRule()); }
	 iv_ruleLogicOperation=ruleLogicOperation 
	 { $current=$iv_ruleLogicOperation.current; } 
	 EOF 
;

// Rule LogicOperation
ruleLogicOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getLogicOperationAccess().getResultAddressParserRuleCall_0_0()); 
	    }
		lv_result_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicOperationRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLogicOperationAccess().getEqualsSignKeyword_1());
    }
(
(
(
		lv_operation_2_1=	'shl' 
    {
        newLeafNode(lv_operation_2_1, grammarAccess.getLogicOperationAccess().getOperationShlKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicOperationRule());
	        }
       		setWithLastConsumed($current, "operation", lv_operation_2_1, null);
	    }

    |		lv_operation_2_2=	'lshr' 
    {
        newLeafNode(lv_operation_2_2, grammarAccess.getLogicOperationAccess().getOperationLshrKeyword_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicOperationRule());
	        }
       		setWithLastConsumed($current, "operation", lv_operation_2_2, null);
	    }

    |		lv_operation_2_3=	'ashr' 
    {
        newLeafNode(lv_operation_2_3, grammarAccess.getLogicOperationAccess().getOperationAshrKeyword_2_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicOperationRule());
	        }
       		setWithLastConsumed($current, "operation", lv_operation_2_3, null);
	    }

    |		lv_operation_2_4=	'and' 
    {
        newLeafNode(lv_operation_2_4, grammarAccess.getLogicOperationAccess().getOperationAndKeyword_2_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicOperationRule());
	        }
       		setWithLastConsumed($current, "operation", lv_operation_2_4, null);
	    }

    |		lv_operation_2_5=	'or' 
    {
        newLeafNode(lv_operation_2_5, grammarAccess.getLogicOperationAccess().getOperationOrKeyword_2_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicOperationRule());
	        }
       		setWithLastConsumed($current, "operation", lv_operation_2_5, null);
	    }

    |		lv_operation_2_6=	'xor' 
    {
        newLeafNode(lv_operation_2_6, grammarAccess.getLogicOperationAccess().getOperationXorKeyword_2_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicOperationRule());
	        }
       		setWithLastConsumed($current, "operation", lv_operation_2_6, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicOperationAccess().getOptypeTypeUseParserRuleCall_3_0()); 
	    }
		lv_optype_3_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicOperationRule());
	        }
       		set(
       			$current, 
       			"optype",
        		lv_optype_3_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicOperationAccess().getValue1ValueParserRuleCall_4_0()); 
	    }
		lv_value1_4_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicOperationRule());
	        }
       		set(
       			$current, 
       			"value1",
        		lv_value1_4_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLogicOperationAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicOperationAccess().getValue2ValueParserRuleCall_6_0()); 
	    }
		lv_value2_6_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicOperationRule());
	        }
       		set(
       			$current, 
       			"value2",
        		lv_value2_6_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCast
entryRuleCast returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCastRule()); }
	 iv_ruleCast=ruleCast 
	 { $current=$iv_ruleCast.current; } 
	 EOF 
;

// Rule Cast
ruleCast returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCastAccess().getResultAddressParserRuleCall_0_0()); 
	    }
		lv_result_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCastRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCastAccess().getEqualsSignKeyword_1());
    }
(
(
		lv_operation_2_0=RULE_CAST_OP
		{
			newLeafNode(lv_operation_2_0, grammarAccess.getCastAccess().getOperationCAST_OPTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCastRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operation",
        		lv_operation_2_0, 
        		"CAST_OP");
	    }

)
)(
(
(
		{ 
	        newCompositeNode(grammarAccess.getCastAccess().getFromTypeUseParserRuleCall_3_0_0()); 
	    }
		lv_from_3_1=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCastRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_3_1, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getCastAccess().getFromAggregate_TypesParserRuleCall_3_0_1()); 
	    }
		lv_from_3_2=ruleAggregate_Types		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCastRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_3_2, 
        		"Aggregate_Types");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCastAccess().getValueValueParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCastRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='to' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCastAccess().getToKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCastAccess().getToTypeUseParserRuleCall_6_0()); 
	    }
		lv_to_6_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCastRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_6_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNestedCast
entryRuleNestedCast returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNestedCastRule()); }
	 iv_ruleNestedCast=ruleNestedCast 
	 { $current=$iv_ruleNestedCast.current; } 
	 EOF 
;

// Rule NestedCast
ruleNestedCast returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_operation_0_0=RULE_CAST_OP
		{
			newLeafNode(lv_operation_0_0, grammarAccess.getNestedCastAccess().getOperationCAST_OPTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNestedCastRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operation",
        		lv_operation_0_0, 
        		"CAST_OP");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNestedCastAccess().getLeftParenthesisKeyword_1());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getNestedCastAccess().getFromTypeUseParserRuleCall_2_0_0()); 
	    }
		lv_from_2_1=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNestedCastRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_2_1, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getNestedCastAccess().getFromAggregate_TypesParserRuleCall_2_0_1()); 
	    }
		lv_from_2_2=ruleAggregate_Types		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNestedCastRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_2_2, 
        		"Aggregate_Types");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNestedCastAccess().getValueValueParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNestedCastRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='to' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNestedCastAccess().getToKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNestedCastAccess().getToTypeUseParserRuleCall_5_0()); 
	    }
		lv_to_5_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNestedCastRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_5_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getNestedCastAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleMetaArgValue
entryRuleMetaArgValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetaArgValueRule()); }
	 iv_ruleMetaArgValue=ruleMetaArgValue 
	 { $current=$iv_ruleMetaArgValue.current; } 
	 EOF 
;

// Rule MetaArgValue
ruleMetaArgValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_arg_0_0=RULE_METADATA
		{
			newLeafNode(lv_arg_0_0, grammarAccess.getMetaArgValueAccess().getArgMETADATATerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaArgValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"arg",
        		lv_arg_0_0, 
        		"METADATA");
	    }

)
)(
(
(
		lv_value_1_1=RULE_METADATA
		{
			newLeafNode(lv_value_1_1, grammarAccess.getMetaArgValueAccess().getValueMETADATATerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaArgValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_1, 
        		"METADATA");
	    }

    |		lv_value_1_2=RULE_STRING
		{
			newLeafNode(lv_value_1_2, grammarAccess.getMetaArgValueAccess().getValueSTRINGTerminalRuleCall_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaArgValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_2, 
        		"STRING");
	    }

)

)
))
;





// Entry rule entryRuleMeta
entryRuleMeta returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetaRule()); }
	 iv_ruleMeta=ruleMeta 
	 { $current=$iv_ruleMeta.current; } 
	 EOF 
;

// Rule Meta
ruleMeta returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='metadata' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMetaAccess().getMetadataKeyword_0_0());
    }
(
(
		lv_meta_1_0=RULE_METADATA
		{
			newLeafNode(lv_meta_1_0, grammarAccess.getMetaAccess().getMetaMETADATATerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetaRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"meta",
        		lv_meta_1_0, 
        		"METADATA");
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getMetaAccess().getArgPredefinedParserRuleCall_1_0_0()); 
	    }
		lv_arg_2_0=rulePredefined		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaRule());
	        }
       		set(
       			$current, 
       			"arg",
        		lv_arg_2_0, 
        		"Predefined");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMetaAccess().getValueValueParserRuleCall_1_1_0()); 
	    }
		lv_value_3_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetaRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleMetadataValue
entryRuleMetadataValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetadataValueRule()); }
	 iv_ruleMetadataValue=ruleMetadataValue 
	 { $current=$iv_ruleMetadataValue.current; } 
	 EOF 
;

// Rule MetadataValue
ruleMetadataValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_nodeId_0_0=RULE_METADATA
		{
			newLeafNode(lv_nodeId_0_0, grammarAccess.getMetadataValueAccess().getNodeIdMETADATATerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetadataValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nodeId",
        		lv_nodeId_0_0, 
        		"METADATA");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMetadataValueAccess().getEqualsSignKeyword_1());
    }
(	otherlv_2='metadata' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMetadataValueAccess().getMetadataKeyword_2());
    }
)?((	otherlv_3='!' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMetadataValueAccess().getExclamationMarkKeyword_3_0_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMetadataValueAccess().getLeftCurlyBracketKeyword_3_0_1());
    }
)
    |	otherlv_5='!{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMetadataValueAccess().getExclamationMarkLeftCurlyBracketKeyword_3_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMetadataValueAccess().getValuesMetaParserRuleCall_4_0()); 
	    }
		lv_values_6_0=ruleMeta		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetadataValueRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_6_0, 
        		"Meta");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMetadataValueAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMetadataValueAccess().getValuesMetaParserRuleCall_5_1_0()); 
	    }
		lv_values_8_0=ruleMeta		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMetadataValueRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_8_0, 
        		"Meta");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMetadataValueAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleGetElementPtr
entryRuleGetElementPtr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGetElementPtrRule()); }
	 iv_ruleGetElementPtr=ruleGetElementPtr 
	 { $current=$iv_ruleGetElementPtr.current; } 
	 EOF 
;

// Rule GetElementPtr
ruleGetElementPtr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getGetElementPtrAccess().getResultAddressParserRuleCall_0_0()); 
	    }
		lv_result_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGetElementPtrRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGetElementPtrAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='getelementptr' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGetElementPtrAccess().getGetelementptrKeyword_2());
    }
(	otherlv_3='inbounds' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getGetElementPtrAccess().getInboundsKeyword_3());
    }
)?((
(
(
		{ 
	        newCompositeNode(grammarAccess.getGetElementPtrAccess().getAggregateTypeUseParserRuleCall_4_0_0_0()); 
	    }
		lv_aggregate_4_1=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGetElementPtrRule());
	        }
       		set(
       			$current, 
       			"aggregate",
        		lv_aggregate_4_1, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getGetElementPtrAccess().getAggregateArrayParserRuleCall_4_0_0_1()); 
	    }
		lv_aggregate_4_2=ruleArray		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGetElementPtrRule());
	        }
       		set(
       			$current, 
       			"aggregate",
        		lv_aggregate_4_2, 
        		"Array");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGetElementPtrAccess().getAggregatenameValueParserRuleCall_4_1_0()); 
	    }
		lv_aggregatename_5_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGetElementPtrRule());
	        }
       		set(
       			$current, 
       			"aggregatename",
        		lv_aggregatename_5_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGetElementPtrAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGetElementPtrAccess().getIndTypesTypeUseParserRuleCall_4_2_1_0()); 
	    }
		lv_indTypes_7_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGetElementPtrRule());
	        }
       		add(
       			$current, 
       			"indTypes",
        		lv_indTypes_7_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGetElementPtrAccess().getIndiziesValueParserRuleCall_4_2_2_0()); 
	    }
		lv_indizies_8_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGetElementPtrRule());
	        }
       		add(
       			$current, 
       			"indizies",
        		lv_indizies_8_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
;





// Entry rule entryRuleNestedGetElementPtr
entryRuleNestedGetElementPtr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNestedGetElementPtrRule()); }
	 iv_ruleNestedGetElementPtr=ruleNestedGetElementPtr 
	 { $current=$iv_ruleNestedGetElementPtr.current; } 
	 EOF 
;

// Rule NestedGetElementPtr
ruleNestedGetElementPtr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='getelementptr' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNestedGetElementPtrAccess().getGetelementptrKeyword_0());
    }
(	otherlv_1='inbounds' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNestedGetElementPtrAccess().getInboundsKeyword_1());
    }
)?(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNestedGetElementPtrAccess().getLeftParenthesisKeyword_2_0());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getNestedGetElementPtrAccess().getAggregateTypeUseParserRuleCall_2_1_0_0()); 
	    }
		lv_aggregate_3_1=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNestedGetElementPtrRule());
	        }
       		set(
       			$current, 
       			"aggregate",
        		lv_aggregate_3_1, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getNestedGetElementPtrAccess().getAggregateArrayParserRuleCall_2_1_0_1()); 
	    }
		lv_aggregate_3_2=ruleArray		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNestedGetElementPtrRule());
	        }
       		set(
       			$current, 
       			"aggregate",
        		lv_aggregate_3_2, 
        		"Array");
	        afterParserOrEnumRuleCall();
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNestedGetElementPtrAccess().getAggregatenameValueParserRuleCall_2_2_0()); 
	    }
		lv_aggregatename_4_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNestedGetElementPtrRule());
	        }
       		set(
       			$current, 
       			"aggregatename",
        		lv_aggregatename_4_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getNestedGetElementPtrAccess().getCommaKeyword_2_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNestedGetElementPtrAccess().getIndTypesTypeUseParserRuleCall_2_3_1_0()); 
	    }
		lv_indTypes_6_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNestedGetElementPtrRule());
	        }
       		add(
       			$current, 
       			"indTypes",
        		lv_indTypes_6_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNestedGetElementPtrAccess().getIndiziesValueParserRuleCall_2_3_2_0()); 
	    }
		lv_indizies_7_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNestedGetElementPtrRule());
	        }
       		add(
       			$current, 
       			"indizies",
        		lv_indizies_7_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getNestedGetElementPtrAccess().getRightParenthesisKeyword_2_4());
    }
))
;





// Entry rule entryRuleExtractValue
entryRuleExtractValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExtractValueRule()); }
	 iv_ruleExtractValue=ruleExtractValue 
	 { $current=$iv_ruleExtractValue.current; } 
	 EOF 
;

// Rule ExtractValue
ruleExtractValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getExtractValueAccess().getResultAddressParserRuleCall_0_0()); 
	    }
		lv_result_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtractValueRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExtractValueAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='extractvalue' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExtractValueAccess().getExtractvalueKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getExtractValueAccess().getArrayArrayParserRuleCall_3_0_0()); 
	    }
		lv_array_3_0=ruleArray		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtractValueRule());
	        }
       		set(
       			$current, 
       			"array",
        		lv_array_3_0, 
        		"Array");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getExtractValueAccess().getStructStructureParserRuleCall_3_1_0()); 
	    }
		lv_struct_4_0=ruleStructure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtractValueRule());
	        }
       		set(
       			$current, 
       			"struct",
        		lv_struct_4_0, 
        		"Structure");
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getExtractValueAccess().getValueValueParserRuleCall_4_0()); 
	    }
		lv_value_5_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtractValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExtractValueAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExtractValueAccess().getIndexNUMBERParserRuleCall_5_1_0()); 
	    }
		lv_index_7_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtractValueRule());
	        }
       		add(
       			$current, 
       			"index",
        		lv_index_7_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
;





// Entry rule entryRuleInsertValue
entryRuleInsertValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInsertValueRule()); }
	 iv_ruleInsertValue=ruleInsertValue 
	 { $current=$iv_ruleInsertValue.current; } 
	 EOF 
;

// Rule InsertValue
ruleInsertValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInsertValueAccess().getResultAddressParserRuleCall_0_0()); 
	    }
		lv_result_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertValueRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInsertValueAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='insertvalue' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInsertValueAccess().getInsertvalueKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInsertValueAccess().getStructStructureParserRuleCall_3_0()); 
	    }
		lv_struct_3_0=ruleStructure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertValueRule());
	        }
       		set(
       			$current, 
       			"struct",
        		lv_struct_3_0, 
        		"Structure");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInsertValueAccess().getValueValueParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInsertValueAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInsertValueAccess().getInserttypeTypeUseParserRuleCall_6_0()); 
	    }
		lv_inserttype_6_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertValueRule());
	        }
       		set(
       			$current, 
       			"inserttype",
        		lv_inserttype_6_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInsertValueAccess().getInsertvalueValueParserRuleCall_7_0()); 
	    }
		lv_insertvalue_7_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertValueRule());
	        }
       		set(
       			$current, 
       			"insertvalue",
        		lv_insertvalue_7_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInsertValueAccess().getCommaKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInsertValueAccess().getIndexNUMBERParserRuleCall_8_1_0()); 
	    }
		lv_index_9_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertValueRule());
	        }
       		add(
       			$current, 
       			"index",
        		lv_index_9_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
;





// Entry rule entryRuleFence
entryRuleFence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFenceRule()); }
	 iv_ruleFence=ruleFence 
	 { $current=$iv_ruleFence.current; } 
	 EOF 
;

// Rule Fence
ruleFence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='fence' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFenceAccess().getFenceKeyword_0());
    }
(	otherlv_1='singlethread' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFenceAccess().getSinglethreadKeyword_1());
    }
)?(
(
		lv_ordering_2_0=RULE_ATOMIC_ORDERING
		{
			newLeafNode(lv_ordering_2_0, grammarAccess.getFenceAccess().getOrderingATOMIC_ORDERINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ordering",
        		lv_ordering_2_0, 
        		"ATOMIC_ORDERING");
	    }

)
))
;





// Entry rule entryRuleCmpXchg
entryRuleCmpXchg returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCmpXchgRule()); }
	 iv_ruleCmpXchg=ruleCmpXchg 
	 { $current=$iv_ruleCmpXchg.current; } 
	 EOF 
;

// Rule CmpXchg
ruleCmpXchg returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCmpXchgAccess().getResultAddressParserRuleCall_0_0()); 
	    }
		lv_result_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCmpXchgRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCmpXchgAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='cmpxchg' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCmpXchgAccess().getCmpxchgKeyword_2());
    }
(
(
		lv_volatile_3_0=	'volatile' 
    {
        newLeafNode(lv_volatile_3_0, grammarAccess.getCmpXchgAccess().getVolatileVolatileKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCmpXchgRule());
	        }
       		setWithLastConsumed($current, "volatile", true, "volatile");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCmpXchgAccess().getAdresstypeTypeUseParserRuleCall_4_0()); 
	    }
		lv_adresstype_4_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCmpXchgRule());
	        }
       		set(
       			$current, 
       			"adresstype",
        		lv_adresstype_4_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCmpXchgAccess().getAdressValueParserRuleCall_5_0()); 
	    }
		lv_adress_5_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCmpXchgRule());
	        }
       		set(
       			$current, 
       			"adress",
        		lv_adress_5_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCmpXchgAccess().getCommaKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCmpXchgAccess().getComparetypeTypeUseParserRuleCall_7_0()); 
	    }
		lv_comparetype_7_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCmpXchgRule());
	        }
       		set(
       			$current, 
       			"comparetype",
        		lv_comparetype_7_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCmpXchgAccess().getComparevalueValueParserRuleCall_8_0()); 
	    }
		lv_comparevalue_8_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCmpXchgRule());
	        }
       		set(
       			$current, 
       			"comparevalue",
        		lv_comparevalue_8_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCmpXchgAccess().getCommaKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCmpXchgAccess().getNewtypeTypeUseParserRuleCall_10_0()); 
	    }
		lv_newtype_10_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCmpXchgRule());
	        }
       		set(
       			$current, 
       			"newtype",
        		lv_newtype_10_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCmpXchgAccess().getNewvalueValueParserRuleCall_11_0()); 
	    }
		lv_newvalue_11_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCmpXchgRule());
	        }
       		set(
       			$current, 
       			"newvalue",
        		lv_newvalue_11_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12='singlethread' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCmpXchgAccess().getSinglethreadKeyword_12());
    }
)?(
(
		lv_ordering_13_0=RULE_ATOMIC_ORDERING
		{
			newLeafNode(lv_ordering_13_0, grammarAccess.getCmpXchgAccess().getOrderingATOMIC_ORDERINGTerminalRuleCall_13_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCmpXchgRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ordering",
        		lv_ordering_13_0, 
        		"ATOMIC_ORDERING");
	    }

)
))
;





// Entry rule entryRuleAtomicRMW
entryRuleAtomicRMW returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAtomicRMWRule()); }
	 iv_ruleAtomicRMW=ruleAtomicRMW 
	 { $current=$iv_ruleAtomicRMW.current; } 
	 EOF 
;

// Rule AtomicRMW
ruleAtomicRMW returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicRMWAccess().getResultAddressParserRuleCall_0_0()); 
	    }
		lv_result_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicRMWRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAtomicRMWAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='atomicrmw' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAtomicRMWAccess().getAtomicrmwKeyword_2());
    }
(
(
		lv_volatile_3_0=	'volatile' 
    {
        newLeafNode(lv_volatile_3_0, grammarAccess.getAtomicRMWAccess().getVolatileVolatileKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicRMWRule());
	        }
       		setWithLastConsumed($current, "volatile", true, "volatile");
	    }

)
)?(
(
		lv_operation_4_0=RULE_BIN_OP
		{
			newLeafNode(lv_operation_4_0, grammarAccess.getAtomicRMWAccess().getOperationBIN_OPTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicRMWRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operation",
        		lv_operation_4_0, 
        		"BIN_OP");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicRMWAccess().getAdresstypeTypeUseParserRuleCall_5_0()); 
	    }
		lv_adresstype_5_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicRMWRule());
	        }
       		set(
       			$current, 
       			"adresstype",
        		lv_adresstype_5_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicRMWAccess().getAdressValueParserRuleCall_6_0()); 
	    }
		lv_adress_6_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicRMWRule());
	        }
       		set(
       			$current, 
       			"adress",
        		lv_adress_6_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAtomicRMWAccess().getCommaKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicRMWAccess().getOptypeTypeUseParserRuleCall_8_0()); 
	    }
		lv_optype_8_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicRMWRule());
	        }
       		set(
       			$current, 
       			"optype",
        		lv_optype_8_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAtomicRMWAccess().getOpvalueValueParserRuleCall_9_0()); 
	    }
		lv_opvalue_9_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtomicRMWRule());
	        }
       		set(
       			$current, 
       			"opvalue",
        		lv_opvalue_9_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10='singlethread' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getAtomicRMWAccess().getSinglethreadKeyword_10());
    }
)?(
(
		lv_ordering_11_0=RULE_ATOMIC_ORDERING
		{
			newLeafNode(lv_ordering_11_0, grammarAccess.getAtomicRMWAccess().getOrderingATOMIC_ORDERINGTerminalRuleCall_11_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicRMWRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ordering",
        		lv_ordering_11_0, 
        		"ATOMIC_ORDERING");
	    }

)
))
;





// Entry rule entryRuleLoad
entryRuleLoad returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLoadRule()); }
	 iv_ruleLoad=ruleLoad 
	 { $current=$iv_ruleLoad.current; } 
	 EOF 
;

// Rule Load
ruleLoad returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getLoadAccess().getResultAddressParserRuleCall_0_0_0()); 
	    }
		lv_result_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLoadRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLoadAccess().getEqualsSignKeyword_0_1());
    }
(((
(
		lv_volatile_2_0=	'volatile' 
    {
        newLeafNode(lv_volatile_2_0, grammarAccess.getLoadAccess().getVolatileVolatileKeyword_0_2_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLoadRule());
	        }
       		setWithLastConsumed($current, "volatile", true, "volatile");
	    }

)
)	otherlv_3='load' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLoadAccess().getLoadKeyword_0_2_0_1());
    }
)
    |(	otherlv_4='load' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLoadAccess().getLoadKeyword_0_2_1_0());
    }
(
(
		lv_volatile_5_0=	'volatile' 
    {
        newLeafNode(lv_volatile_5_0, grammarAccess.getLoadAccess().getVolatileVolatileKeyword_0_2_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLoadRule());
	        }
       		setWithLastConsumed($current, "volatile", true, "volatile");
	    }

)
)?))(
(
		{ 
	        newCompositeNode(grammarAccess.getLoadAccess().getAddressParameterParserRuleCall_0_3_0()); 
	    }
		lv_address_6_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLoadRule());
	        }
       		set(
       			$current, 
       			"address",
        		lv_address_6_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLoadAccess().getCommaKeyword_0_4_0());
    }
	otherlv_8='align' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getLoadAccess().getAlignKeyword_0_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLoadAccess().getAlignNUMBERParserRuleCall_0_4_2_0()); 
	    }
		lv_align_9_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLoadRule());
	        }
       		set(
       			$current, 
       			"align",
        		lv_align_9_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getLoadAccess().getCommaKeyword_0_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLoadAccess().getMetaMetaArgValueParserRuleCall_0_5_1_0()); 
	    }
		lv_meta_11_0=ruleMetaArgValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLoadRule());
	        }
       		add(
       			$current, 
       			"meta",
        		lv_meta_11_0, 
        		"MetaArgValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getLoadAccess().getResultAddressParserRuleCall_1_0_0()); 
	    }
		lv_result_12_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLoadRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_12_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getLoadAccess().getEqualsSignKeyword_1_1());
    }
	otherlv_14='load' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getLoadAccess().getLoadKeyword_1_2());
    }
	otherlv_15='atomic' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getLoadAccess().getAtomicKeyword_1_3());
    }
(
(
		lv_volatile_16_0=	'volatile' 
    {
        newLeafNode(lv_volatile_16_0, grammarAccess.getLoadAccess().getVolatileVolatileKeyword_1_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLoadRule());
	        }
       		setWithLastConsumed($current, "volatile", true, "volatile");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getLoadAccess().getAddressParameterParserRuleCall_1_5_0()); 
	    }
		lv_address_17_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLoadRule());
	        }
       		set(
       			$current, 
       			"address",
        		lv_address_17_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_18='singlethread' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getLoadAccess().getSinglethreadKeyword_1_6());
    }
)?(
(
		lv_ordering_19_0=RULE_ATOMIC_ORDERING
		{
			newLeafNode(lv_ordering_19_0, grammarAccess.getLoadAccess().getOrderingATOMIC_ORDERINGTerminalRuleCall_1_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLoadRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ordering",
        		lv_ordering_19_0, 
        		"ATOMIC_ORDERING");
	    }

)
)(	otherlv_20=',' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getLoadAccess().getCommaKeyword_1_8_0());
    }
	otherlv_21='align' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getLoadAccess().getAlignKeyword_1_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLoadAccess().getAlignNUMBERParserRuleCall_1_8_2_0()); 
	    }
		lv_align_22_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLoadRule());
	        }
       		set(
       			$current, 
       			"align",
        		lv_align_22_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
;





// Entry rule entryRuleStore
entryRuleStore returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStoreRule()); }
	 iv_ruleStore=ruleStore 
	 { $current=$iv_ruleStore.current; } 
	 EOF 
;

// Rule Store
ruleStore returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((((
(
		lv_volatile_0_0=	'volatile' 
    {
        newLeafNode(lv_volatile_0_0, grammarAccess.getStoreAccess().getVolatileVolatileKeyword_0_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStoreRule());
	        }
       		setWithLastConsumed($current, "volatile", true, "volatile");
	    }

)
)	otherlv_1='store' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStoreAccess().getStoreKeyword_0_0_0_1());
    }
)
    |(	otherlv_2='store' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStoreAccess().getStoreKeyword_0_0_1_0());
    }
(
(
		lv_volatile_3_0=	'volatile' 
    {
        newLeafNode(lv_volatile_3_0, grammarAccess.getStoreAccess().getVolatileVolatileKeyword_0_0_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStoreRule());
	        }
       		setWithLastConsumed($current, "volatile", true, "volatile");
	    }

)
)?))(
(
		{ 
	        newCompositeNode(grammarAccess.getStoreAccess().getTargetAddressParameterParserRuleCall_0_1_0()); 
	    }
		lv_targetAddress_4_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStoreRule());
	        }
       		set(
       			$current, 
       			"targetAddress",
        		lv_targetAddress_4_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStoreAccess().getCommaKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStoreAccess().getValueParameterParserRuleCall_0_3_0()); 
	    }
		lv_value_6_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStoreRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_6_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStoreAccess().getCommaKeyword_0_4_0());
    }
	otherlv_8='align' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStoreAccess().getAlignKeyword_0_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStoreAccess().getAlignNUMBERParserRuleCall_0_4_2_0()); 
	    }
		lv_align_9_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStoreRule());
	        }
       		set(
       			$current, 
       			"align",
        		lv_align_9_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getStoreAccess().getCommaKeyword_0_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStoreAccess().getMetaMetaArgValueParserRuleCall_0_5_1_0()); 
	    }
		lv_meta_11_0=ruleMetaArgValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStoreRule());
	        }
       		add(
       			$current, 
       			"meta",
        		lv_meta_11_0, 
        		"MetaArgValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |(	otherlv_12='store' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getStoreAccess().getStoreKeyword_1_0());
    }
	otherlv_13='atomic' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getStoreAccess().getAtomicKeyword_1_1());
    }
(
(
		lv_volatile_14_0=	'volatile' 
    {
        newLeafNode(lv_volatile_14_0, grammarAccess.getStoreAccess().getVolatileVolatileKeyword_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStoreRule());
	        }
       		setWithLastConsumed($current, "volatile", true, "volatile");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getStoreAccess().getTargetAddressParameterParserRuleCall_1_3_0()); 
	    }
		lv_targetAddress_15_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStoreRule());
	        }
       		set(
       			$current, 
       			"targetAddress",
        		lv_targetAddress_15_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_16=',' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getStoreAccess().getCommaKeyword_1_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStoreAccess().getValueParameterParserRuleCall_1_5_0()); 
	    }
		lv_value_17_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStoreRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_17_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_18='singlethread' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getStoreAccess().getSinglethreadKeyword_1_6());
    }
)?(
(
		lv_ordering_19_0=RULE_ATOMIC_ORDERING
		{
			newLeafNode(lv_ordering_19_0, grammarAccess.getStoreAccess().getOrderingATOMIC_ORDERINGTerminalRuleCall_1_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStoreRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ordering",
        		lv_ordering_19_0, 
        		"ATOMIC_ORDERING");
	    }

)
)(	otherlv_20=',' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getStoreAccess().getCommaKeyword_1_8_0());
    }
	otherlv_21='align' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getStoreAccess().getAlignKeyword_1_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStoreAccess().getAlignNUMBERParserRuleCall_1_8_2_0()); 
	    }
		lv_align_22_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStoreRule());
	        }
       		set(
       			$current, 
       			"align",
        		lv_align_22_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
))?))
;





// Entry rule entryRuleCall
entryRuleCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCallRule()); }
	 iv_ruleCall=ruleCall 
	 { $current=$iv_ruleCall.current; } 
	 EOF 
;

// Rule Call
ruleCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getCallAccess().getResultAddressParserRuleCall_0_0_0()); 
	    }
		lv_result_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCallRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCallAccess().getEqualsSignKeyword_0_1());
    }
)?(	otherlv_2='tail' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCallAccess().getTailKeyword_1());
    }
)?	otherlv_3='call' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCallAccess().getCallKeyword_2());
    }
(
    { 
        newCompositeNode(grammarAccess.getCallAccess().getCallingConvParserRuleCall_3()); 
    }
ruleCallingConv
    { 
        afterParserOrEnumRuleCall();
    }
)?(this_RETURN_ATTRIBUTES_5=RULE_RETURN_ATTRIBUTES
    { 
    newLeafNode(this_RETURN_ATTRIBUTES_5, grammarAccess.getCallAccess().getRETURN_ATTRIBUTESTerminalRuleCall_4()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCallAccess().getAdresstypeTypeUseParserRuleCall_5_0()); 
	    }
		lv_adresstype_6_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCallRule());
	        }
       		set(
       			$current, 
       			"adresstype",
        		lv_adresstype_6_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getCallAccess().getAdressValueParserRuleCall_6_0_0()); 
	    }
		lv_adress_7_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCallRule());
	        }
       		set(
       			$current, 
       			"adress",
        		lv_adress_7_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_8='asm' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCallAccess().getAsmKeyword_6_1_0());
    }
(	otherlv_9='sideeffect' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCallAccess().getSideeffectKeyword_6_1_1());
    }
)?this_STRING_10=RULE_STRING
    { 
    newLeafNode(this_STRING_10, grammarAccess.getCallAccess().getSTRINGTerminalRuleCall_6_1_2()); 
    }
	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCallAccess().getCommaKeyword_6_1_3());
    }
this_STRING_12=RULE_STRING
    { 
    newLeafNode(this_STRING_12, grammarAccess.getCallAccess().getSTRINGTerminalRuleCall_6_1_4()); 
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getCallAccess().getPListParameterListParserRuleCall_7_0()); 
	    }
		lv_pList_13_0=ruleParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCallRule());
	        }
       		set(
       			$current, 
       			"pList",
        		lv_pList_13_0, 
        		"ParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getCallAccess().getFUNCTION_ATTRIBUTESParserRuleCall_8()); 
    }
ruleFUNCTION_ATTRIBUTES
    { 
        afterParserOrEnumRuleCall();
    }
)*(	otherlv_15=',' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getCallAccess().getCommaKeyword_9_0());
    }
	otherlv_16='!srcloc' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getCallAccess().getSrclocKeyword_9_1());
    }
	otherlv_17='!' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getCallAccess().getExclamationMarkKeyword_9_2());
    }

    { 
        newCompositeNode(grammarAccess.getCallAccess().getNUMBERParserRuleCall_9_3()); 
    }
ruleNUMBER
    { 
        afterParserOrEnumRuleCall();
    }
)*)
;





// Entry rule entryRuleAlloc
entryRuleAlloc returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAllocRule()); }
	 iv_ruleAlloc=ruleAlloc 
	 { $current=$iv_ruleAlloc.current; } 
	 EOF 
;

// Rule Alloc
ruleAlloc returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAllocAccess().getResultAddressParserRuleCall_0_0()); 
	    }
		lv_result_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAllocRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAllocAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='alloca' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAllocAccess().getAllocaKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAllocAccess().getTypeTypeUseParserRuleCall_3_0_0()); 
	    }
		lv_type_3_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAllocRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAllocAccess().getTypelistParameterListParserRuleCall_3_1_0()); 
	    }
		lv_typelist_4_0=ruleParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAllocRule());
	        }
       		set(
       			$current, 
       			"typelist",
        		lv_typelist_4_0, 
        		"ParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)?)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAllocAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAllocAccess().getNumelementstypeTypeUseParserRuleCall_4_1_0()); 
	    }
		lv_numelementstype_6_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAllocRule());
	        }
       		set(
       			$current, 
       			"numelementstype",
        		lv_numelementstype_6_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAllocAccess().getNumelementsvalueValueParserRuleCall_4_2_0()); 
	    }
		lv_numelementsvalue_7_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAllocRule());
	        }
       		set(
       			$current, 
       			"numelementsvalue",
        		lv_numelementsvalue_7_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAllocAccess().getCommaKeyword_5_0());
    }
	otherlv_9='align' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAllocAccess().getAlignKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAllocAccess().getAlignNUMBERParserRuleCall_5_2_0()); 
	    }
		lv_align_10_0=ruleNUMBER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAllocRule());
	        }
       		set(
       			$current, 
       			"align",
        		lv_align_10_0, 
        		"NUMBER");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRulePhiCase
entryRulePhiCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPhiCaseRule()); }
	 iv_rulePhiCase=rulePhiCase 
	 { $current=$iv_rulePhiCase.current; } 
	 EOF 
;

// Rule PhiCase
rulePhiCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPhiCaseAccess().getValueValueParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPhiCaseRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPhiCaseAccess().getCommaKeyword_1());
    }
(
(
		lv_label_2_0=RULE_VALID_ID
		{
			newLeafNode(lv_label_2_0, grammarAccess.getPhiCaseAccess().getLabelVALID_IDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPhiCaseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_2_0, 
        		"VALID_ID");
	    }

)
))
;





// Entry rule entryRulePhi
entryRulePhi returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPhiRule()); }
	 iv_rulePhi=rulePhi 
	 { $current=$iv_rulePhi.current; } 
	 EOF 
;

// Rule Phi
rulePhi returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPhiAccess().getResultAddressParserRuleCall_0_0()); 
	    }
		lv_result_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPhiRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPhiAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='phi' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPhiAccess().getPhiKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPhiAccess().getTypeTypeUseParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPhiRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPhiAccess().getLeftSquareBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPhiAccess().getCasesPhiCaseParserRuleCall_5_0()); 
	    }
		lv_cases_5_0=rulePhiCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPhiRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_5_0, 
        		"PhiCase");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPhiAccess().getRightSquareBracketKeyword_6());
    }
(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPhiAccess().getCommaKeyword_7_0());
    }
	otherlv_8='[' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPhiAccess().getLeftSquareBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPhiAccess().getCasesPhiCaseParserRuleCall_7_2_0()); 
	    }
		lv_cases_9_0=rulePhiCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPhiRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_9_0, 
        		"PhiCase");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10=']' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPhiAccess().getRightSquareBracketKeyword_7_3());
    }
)*)
;





// Entry rule entryRuleLandingPad
entryRuleLandingPad returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLandingPadRule()); }
	 iv_ruleLandingPad=ruleLandingPad 
	 { $current=$iv_ruleLandingPad.current; } 
	 EOF 
;

// Rule LandingPad
ruleLandingPad returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getLandingPadAccess().getResultAddressParserRuleCall_0_0()); 
	    }
		lv_result_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLandingPadRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLandingPadAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='landingpad' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLandingPadAccess().getLandingpadKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLandingPadAccess().getStructStructureParserRuleCall_3_0()); 
	    }
		lv_struct_3_0=ruleStructure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLandingPadRule());
	        }
       		set(
       			$current, 
       			"struct",
        		lv_struct_3_0, 
        		"Structure");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='personality' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLandingPadAccess().getPersonalityKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLandingPadAccess().getPersonalitytypeTypeUseParserRuleCall_5_0()); 
	    }
		lv_personalitytype_5_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLandingPadRule());
	        }
       		set(
       			$current, 
       			"personalitytype",
        		lv_personalitytype_5_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLandingPadAccess().getPersonalityvalueValueParserRuleCall_6_0()); 
	    }
		lv_personalityvalue_6_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLandingPadRule());
	        }
       		set(
       			$current, 
       			"personalityvalue",
        		lv_personalityvalue_6_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_7='cleanup' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLandingPadAccess().getCleanupKeyword_7_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLandingPadAccess().getClauseClauseParserRuleCall_7_0_1_0()); 
	    }
		lv_clause_8_0=ruleClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLandingPadRule());
	        }
       		add(
       			$current, 
       			"clause",
        		lv_clause_8_0, 
        		"Clause");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLandingPadAccess().getClauseClauseParserRuleCall_7_1_0()); 
	    }
		lv_clause_9_0=ruleClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLandingPadRule());
	        }
       		add(
       			$current, 
       			"clause",
        		lv_clause_9_0, 
        		"Clause");
	        afterParserOrEnumRuleCall();
	    }

)
)+))
;





// Entry rule entryRuleClause
entryRuleClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClauseRule()); }
	 iv_ruleClause=ruleClause 
	 { $current=$iv_ruleClause.current; } 
	 EOF 
;

// Rule Clause
ruleClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='catch' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClauseAccess().getCatchKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseAccess().getTypeTypeUseParserRuleCall_0_1_0()); 
	    }
		lv_type_1_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseAccess().getValueValueParserRuleCall_0_2_0()); 
	    }
		lv_value_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_3='filter' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getClauseAccess().getFilterKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseAccess().getFilterarrayArrayParserRuleCall_1_1_0()); 
	    }
		lv_filterarray_4_0=ruleArray		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseRule());
	        }
       		set(
       			$current, 
       			"filterarray",
        		lv_filterarray_4_0, 
        		"Array");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseAccess().getConstantValueParserRuleCall_1_2_0()); 
	    }
		lv_constant_5_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseRule());
	        }
       		set(
       			$current, 
       			"constant",
        		lv_constant_5_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleSelect
entryRuleSelect returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSelectRule()); }
	 iv_ruleSelect=ruleSelect 
	 { $current=$iv_ruleSelect.current; } 
	 EOF 
;

// Rule Select
ruleSelect returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSelectAccess().getResultAddressParserRuleCall_0_0()); 
	    }
		lv_result_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSelectAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='select' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSelectAccess().getSelectKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectAccess().getConditiontypeTypeUseParserRuleCall_3_0()); 
	    }
		lv_conditiontype_3_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectRule());
	        }
       		set(
       			$current, 
       			"conditiontype",
        		lv_conditiontype_3_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectAccess().getConditionvalueValueParserRuleCall_4_0()); 
	    }
		lv_conditionvalue_4_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectRule());
	        }
       		set(
       			$current, 
       			"conditionvalue",
        		lv_conditionvalue_4_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSelectAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectAccess().getVal1typeTypeUseParserRuleCall_6_0()); 
	    }
		lv_val1type_6_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectRule());
	        }
       		set(
       			$current, 
       			"val1type",
        		lv_val1type_6_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectAccess().getVal1valueValueParserRuleCall_7_0()); 
	    }
		lv_val1value_7_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectRule());
	        }
       		set(
       			$current, 
       			"val1value",
        		lv_val1value_7_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSelectAccess().getCommaKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectAccess().getVal2typeTypeUseParserRuleCall_9_0()); 
	    }
		lv_val2type_9_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectRule());
	        }
       		set(
       			$current, 
       			"val2type",
        		lv_val2type_9_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSelectAccess().getVal2valueValueParserRuleCall_10_0()); 
	    }
		lv_val2value_10_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSelectRule());
	        }
       		set(
       			$current, 
       			"val2value",
        		lv_val2value_10_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVariableAttributeAccess
entryRuleVariableAttributeAccess returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableAttributeAccessRule()); }
	 iv_ruleVariableAttributeAccess=ruleVariableAttributeAccess 
	 { $current=$iv_ruleVariableAttributeAccess.current; } 
	 EOF 
;

// Rule VariableAttributeAccess
ruleVariableAttributeAccess returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAttributeAccessAccess().getResultAddressParserRuleCall_0_0()); 
	    }
		lv_result_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableAttributeAccessRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVariableAttributeAccessAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='va_arg' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariableAttributeAccessAccess().getVa_argKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAttributeAccessAccess().getListtypeTypeUseParserRuleCall_3_0()); 
	    }
		lv_listtype_3_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableAttributeAccessRule());
	        }
       		set(
       			$current, 
       			"listtype",
        		lv_listtype_3_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAttributeAccessAccess().getListvalueValueParserRuleCall_4_0()); 
	    }
		lv_listvalue_4_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableAttributeAccessRule());
	        }
       		set(
       			$current, 
       			"listvalue",
        		lv_listvalue_4_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVariableAttributeAccessAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAttributeAccessAccess().getArgTypeTypeUseParserRuleCall_6_0()); 
	    }
		lv_argType_6_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableAttributeAccessRule());
	        }
       		set(
       			$current, 
       			"argType",
        		lv_argType_6_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleExtractElement
entryRuleExtractElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExtractElementRule()); }
	 iv_ruleExtractElement=ruleExtractElement 
	 { $current=$iv_ruleExtractElement.current; } 
	 EOF 
;

// Rule ExtractElement
ruleExtractElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getExtractElementAccess().getResultAddressParserRuleCall_0_0()); 
	    }
		lv_result_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtractElementRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExtractElementAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='extractelement' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExtractElementAccess().getExtractelementKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExtractElementAccess().getVectortypeTypeUseParserRuleCall_3_0()); 
	    }
		lv_vectortype_3_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtractElementRule());
	        }
       		set(
       			$current, 
       			"vectortype",
        		lv_vectortype_3_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExtractElementAccess().getVectorvalueValueParserRuleCall_4_0()); 
	    }
		lv_vectorvalue_4_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtractElementRule());
	        }
       		set(
       			$current, 
       			"vectorvalue",
        		lv_vectorvalue_4_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExtractElementAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExtractElementAccess().getIndextypeTypeUseParserRuleCall_6_0()); 
	    }
		lv_indextype_6_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtractElementRule());
	        }
       		set(
       			$current, 
       			"indextype",
        		lv_indextype_6_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExtractElementAccess().getIndexValueParserRuleCall_7_0()); 
	    }
		lv_index_7_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtractElementRule());
	        }
       		set(
       			$current, 
       			"index",
        		lv_index_7_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInsertElement
entryRuleInsertElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInsertElementRule()); }
	 iv_ruleInsertElement=ruleInsertElement 
	 { $current=$iv_ruleInsertElement.current; } 
	 EOF 
;

// Rule InsertElement
ruleInsertElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInsertElementAccess().getResultAddressParserRuleCall_0_0()); 
	    }
		lv_result_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertElementRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInsertElementAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='insertelement' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInsertElementAccess().getInsertelementKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInsertElementAccess().getVectortypeTypeUseParserRuleCall_3_0()); 
	    }
		lv_vectortype_3_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertElementRule());
	        }
       		set(
       			$current, 
       			"vectortype",
        		lv_vectortype_3_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInsertElementAccess().getVectorvalueValueParserRuleCall_4_0()); 
	    }
		lv_vectorvalue_4_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertElementRule());
	        }
       		set(
       			$current, 
       			"vectorvalue",
        		lv_vectorvalue_4_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInsertElementAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInsertElementAccess().getScalartypeTypeUseParserRuleCall_6_0()); 
	    }
		lv_scalartype_6_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertElementRule());
	        }
       		set(
       			$current, 
       			"scalartype",
        		lv_scalartype_6_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInsertElementAccess().getScalarvalueValueParserRuleCall_7_0()); 
	    }
		lv_scalarvalue_7_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertElementRule());
	        }
       		set(
       			$current, 
       			"scalarvalue",
        		lv_scalarvalue_7_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInsertElementAccess().getCommaKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInsertElementAccess().getIndextypeTypeUseParserRuleCall_9_0()); 
	    }
		lv_indextype_9_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertElementRule());
	        }
       		set(
       			$current, 
       			"indextype",
        		lv_indextype_9_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInsertElementAccess().getIndexValueParserRuleCall_10_0()); 
	    }
		lv_index_10_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInsertElementRule());
	        }
       		set(
       			$current, 
       			"index",
        		lv_index_10_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleShuffleVector
entryRuleShuffleVector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShuffleVectorRule()); }
	 iv_ruleShuffleVector=ruleShuffleVector 
	 { $current=$iv_ruleShuffleVector.current; } 
	 EOF 
;

// Rule ShuffleVector
ruleShuffleVector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getShuffleVectorAccess().getResultAddressParserRuleCall_0_0()); 
	    }
		lv_result_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShuffleVectorRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getShuffleVectorAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='shufflevector' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getShuffleVectorAccess().getShufflevectorKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getShuffleVectorAccess().getVal1typeTypeUseParserRuleCall_3_0()); 
	    }
		lv_val1type_3_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShuffleVectorRule());
	        }
       		set(
       			$current, 
       			"val1type",
        		lv_val1type_3_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getShuffleVectorAccess().getVal1valueValueParserRuleCall_4_0()); 
	    }
		lv_val1value_4_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShuffleVectorRule());
	        }
       		set(
       			$current, 
       			"val1value",
        		lv_val1value_4_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getShuffleVectorAccess().getCommaKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getShuffleVectorAccess().getVal2typeTypeUseParserRuleCall_6_0()); 
	    }
		lv_val2type_6_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShuffleVectorRule());
	        }
       		set(
       			$current, 
       			"val2type",
        		lv_val2type_6_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getShuffleVectorAccess().getVal2valueValueParserRuleCall_7_0()); 
	    }
		lv_val2value_7_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShuffleVectorRule());
	        }
       		set(
       			$current, 
       			"val2value",
        		lv_val2value_7_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getShuffleVectorAccess().getCommaKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getShuffleVectorAccess().getMasktypeTypeUseParserRuleCall_9_0()); 
	    }
		lv_masktype_9_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShuffleVectorRule());
	        }
       		set(
       			$current, 
       			"masktype",
        		lv_masktype_9_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getShuffleVectorAccess().getMaskvalueValueParserRuleCall_10_0()); 
	    }
		lv_maskvalue_10_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShuffleVectorRule());
	        }
       		set(
       			$current, 
       			"maskvalue",
        		lv_maskvalue_10_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCompare
entryRuleCompare returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompareRule()); }
	 iv_ruleCompare=ruleCompare 
	 { $current=$iv_ruleCompare.current; } 
	 EOF 
;

// Rule Compare
ruleCompare returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCompareAccess().getResultAddressParserRuleCall_0_0()); 
	    }
		lv_result_0_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_0_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCompareAccess().getEqualsSignKeyword_1());
    }
((	otherlv_2='icmp' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCompareAccess().getIcmpKeyword_2_0_0());
    }
(
(
		lv_pred_3_0=RULE_I_PREDICATES
		{
			newLeafNode(lv_pred_3_0, grammarAccess.getCompareAccess().getPredI_PREDICATESTerminalRuleCall_2_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompareRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"pred",
        		lv_pred_3_0, 
        		"I_PREDICATES");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareAccess().getComptypeTypeUseParserRuleCall_2_0_2_0()); 
	    }
		lv_comptype_4_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareRule());
	        }
       		set(
       			$current, 
       			"comptype",
        		lv_comptype_4_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareAccess().getValue1ValueParserRuleCall_2_0_3_0()); 
	    }
		lv_value1_5_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareRule());
	        }
       		set(
       			$current, 
       			"value1",
        		lv_value1_5_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCompareAccess().getCommaKeyword_2_0_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareAccess().getValue2ValueParserRuleCall_2_0_5_0()); 
	    }
		lv_value2_7_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareRule());
	        }
       		set(
       			$current, 
       			"value2",
        		lv_value2_7_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_8='fcmp' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCompareAccess().getFcmpKeyword_2_1_0());
    }
(
(
(
		lv_pred_9_1=RULE_F_PREDICATES
		{
			newLeafNode(lv_pred_9_1, grammarAccess.getCompareAccess().getPredF_PREDICATESTerminalRuleCall_2_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompareRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"pred",
        		lv_pred_9_1, 
        		"F_PREDICATES");
	    }

    |		lv_pred_9_2=RULE_BOOL
		{
			newLeafNode(lv_pred_9_2, grammarAccess.getCompareAccess().getPredBOOLTerminalRuleCall_2_1_1_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompareRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"pred",
        		lv_pred_9_2, 
        		"BOOL");
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareAccess().getComptypeTypeUseParserRuleCall_2_1_2_0()); 
	    }
		lv_comptype_10_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareRule());
	        }
       		set(
       			$current, 
       			"comptype",
        		lv_comptype_10_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareAccess().getValue1ValueParserRuleCall_2_1_3_0()); 
	    }
		lv_value1_11_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareRule());
	        }
       		set(
       			$current, 
       			"value1",
        		lv_value1_11_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCompareAccess().getCommaKeyword_2_1_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompareAccess().getValue2ValueParserRuleCall_2_1_5_0()); 
	    }
		lv_value2_13_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompareRule());
	        }
       		set(
       			$current, 
       			"value2",
        		lv_value2_13_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleIndirectBranch
entryRuleIndirectBranch returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndirectBranchRule()); }
	 iv_ruleIndirectBranch=ruleIndirectBranch 
	 { $current=$iv_ruleIndirectBranch.current; } 
	 EOF 
;

// Rule IndirectBranch
ruleIndirectBranch returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='indirectbr' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIndirectBranchAccess().getIndirectbrKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIndirectBranchAccess().getAdresstypeTypeUseParserRuleCall_1_0()); 
	    }
		lv_adresstype_1_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndirectBranchRule());
	        }
       		set(
       			$current, 
       			"adresstype",
        		lv_adresstype_1_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIndirectBranchAccess().getAdressValueParserRuleCall_2_0()); 
	    }
		lv_adress_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndirectBranchRule());
	        }
       		set(
       			$current, 
       			"adress",
        		lv_adress_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIndirectBranchAccess().getCommaKeyword_3());
    }
	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIndirectBranchAccess().getLeftSquareBracketKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getIndirectBranchAccess().getLabeltypeTypeUseParserRuleCall_5_0_0()); 
	    }
		lv_labeltype_5_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndirectBranchRule());
	        }
       		add(
       			$current, 
       			"labeltype",
        		lv_labeltype_5_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIndirectBranchAccess().getLabelsValueParserRuleCall_5_1_0()); 
	    }
		lv_labels_6_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndirectBranchRule());
	        }
       		add(
       			$current, 
       			"labels",
        		lv_labels_6_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIndirectBranchAccess().getCommaKeyword_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIndirectBranchAccess().getLabeltypeTypeUseParserRuleCall_5_2_1_0()); 
	    }
		lv_labeltype_8_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndirectBranchRule());
	        }
       		add(
       			$current, 
       			"labeltype",
        		lv_labeltype_8_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIndirectBranchAccess().getLabelsValueParserRuleCall_5_2_2_0()); 
	    }
		lv_labels_9_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndirectBranchRule());
	        }
       		add(
       			$current, 
       			"labels",
        		lv_labels_9_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_10=']' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getIndirectBranchAccess().getRightSquareBracketKeyword_6());
    }
)
;





// Entry rule entryRuleSwitch
entryRuleSwitch returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSwitchRule()); }
	 iv_ruleSwitch=ruleSwitch 
	 { $current=$iv_ruleSwitch.current; } 
	 EOF 
;

// Rule Switch
ruleSwitch returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='switch' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSwitchAccess().getSwitchKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchAccess().getComptypeTypeUseParserRuleCall_1_0()); 
	    }
		lv_comptype_1_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchRule());
	        }
       		set(
       			$current, 
       			"comptype",
        		lv_comptype_1_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchAccess().getCompvalueValueParserRuleCall_2_0()); 
	    }
		lv_compvalue_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchRule());
	        }
       		set(
       			$current, 
       			"compvalue",
        		lv_compvalue_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSwitchAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchAccess().getDefaulttypeTypeUseParserRuleCall_4_0()); 
	    }
		lv_defaulttype_4_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchRule());
	        }
       		set(
       			$current, 
       			"defaulttype",
        		lv_defaulttype_4_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchAccess().getDefaultvalueValueParserRuleCall_5_0()); 
	    }
		lv_defaultvalue_5_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchRule());
	        }
       		set(
       			$current, 
       			"defaultvalue",
        		lv_defaultvalue_5_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='[' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSwitchAccess().getLeftSquareBracketKeyword_6());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchAccess().getJtypesTypeUseParserRuleCall_7_0_0()); 
	    }
		lv_jtypes_7_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchRule());
	        }
       		add(
       			$current, 
       			"jtypes",
        		lv_jtypes_7_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchAccess().getJvaluesValueParserRuleCall_7_1_0()); 
	    }
		lv_jvalues_8_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchRule());
	        }
       		add(
       			$current, 
       			"jvalues",
        		lv_jvalues_8_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSwitchAccess().getCommaKeyword_7_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchAccess().getDestinationtypesTypeUseParserRuleCall_7_3_0()); 
	    }
		lv_destinationtypes_10_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchRule());
	        }
       		add(
       			$current, 
       			"destinationtypes",
        		lv_destinationtypes_10_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchAccess().getDestinationsValueParserRuleCall_7_4_0()); 
	    }
		lv_destinations_11_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchRule());
	        }
       		add(
       			$current, 
       			"destinations",
        		lv_destinations_11_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_12=']' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSwitchAccess().getRightSquareBracketKeyword_8());
    }
)
;





// Entry rule entryRuleInvoke
entryRuleInvoke returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInvokeRule()); }
	 iv_ruleInvoke=ruleInvoke 
	 { $current=$iv_ruleInvoke.current; } 
	 EOF 
;

// Rule Invoke
ruleInvoke returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='invoke' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInvokeAccess().getInvokeKeyword_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getInvokeAccess().getCallingConvParserRuleCall_1()); 
    }
ruleCallingConv
    { 
        afterParserOrEnumRuleCall();
    }
)?(this_RETURN_ATTRIBUTES_2=RULE_RETURN_ATTRIBUTES
    { 
    newLeafNode(this_RETURN_ATTRIBUTES_2, grammarAccess.getInvokeAccess().getRETURN_ATTRIBUTESTerminalRuleCall_2()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeAccess().getFunctiontypeTypeUseParserRuleCall_3_0()); 
	    }
		lv_functiontype_3_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeRule());
	        }
       		set(
       			$current, 
       			"functiontype",
        		lv_functiontype_3_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeAccess().getNameAddressParserRuleCall_4_0()); 
	    }
		lv_name_4_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeAccess().getPListParameterListParserRuleCall_5_0()); 
	    }
		lv_pList_5_0=ruleParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeRule());
	        }
       		set(
       			$current, 
       			"pList",
        		lv_pList_5_0, 
        		"ParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getInvokeAccess().getFUNCTION_ATTRIBUTESParserRuleCall_6()); 
    }
ruleFUNCTION_ATTRIBUTES
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_7='to' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInvokeAccess().getToKeyword_7());
    }
	otherlv_8='label' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInvokeAccess().getLabelKeyword_8());
    }
(
(
		lv_toTarget_9_0=RULE_VALID_ID
		{
			newLeafNode(lv_toTarget_9_0, grammarAccess.getInvokeAccess().getToTargetVALID_IDTerminalRuleCall_9_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInvokeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"toTarget",
        		lv_toTarget_9_0, 
        		"VALID_ID");
	    }

)
)	otherlv_10='unwind' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getInvokeAccess().getUnwindKeyword_10());
    }
	otherlv_11='label' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInvokeAccess().getLabelKeyword_11());
    }
(
(
		lv_unwindCase_12_0=RULE_VALID_ID
		{
			newLeafNode(lv_unwindCase_12_0, grammarAccess.getInvokeAccess().getUnwindCaseVALID_IDTerminalRuleCall_12_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInvokeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"unwindCase",
        		lv_unwindCase_12_0, 
        		"VALID_ID");
	    }

)
))
;





// Entry rule entryRuleResume
entryRuleResume returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResumeRule()); }
	 iv_ruleResume=ruleResume 
	 { $current=$iv_ruleResume.current; } 
	 EOF 
;

// Rule Resume
ruleResume returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='resume' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getResumeAccess().getResumeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResumeAccess().getResumestructStructureParserRuleCall_1_0()); 
	    }
		lv_resumestruct_1_0=ruleStructure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResumeRule());
	        }
       		set(
       			$current, 
       			"resumestruct",
        		lv_resumestruct_1_0, 
        		"Structure");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getResumeAccess().getResumevalueValueParserRuleCall_2_0()); 
	    }
		lv_resumevalue_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResumeRule());
	        }
       		set(
       			$current, 
       			"resumevalue",
        		lv_resumevalue_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleUnreachable
entryRuleUnreachable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnreachableRule()); }
	 iv_ruleUnreachable=ruleUnreachable 
	 { $current=$iv_ruleUnreachable.current; } 
	 EOF 
;

// Rule Unreachable
ruleUnreachable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnreachableAccess().getUnreachableAction_0(),
            $current);
    }
)	otherlv_1='unreachable' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUnreachableAccess().getUnreachableKeyword_1());
    }
)
;





// Entry rule entryRuleReturn
entryRuleReturn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReturnRule()); }
	 iv_ruleReturn=ruleReturn 
	 { $current=$iv_ruleReturn.current; } 
	 EOF 
;

// Rule Return
ruleReturn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='ret' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReturnAccess().getRetKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReturnAccess().getReturntypePredefinedParserRuleCall_0_1_0()); 
	    }
		lv_returntype_1_0=rulePredefined		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReturnRule());
	        }
       		set(
       			$current, 
       			"returntype",
        		lv_returntype_1_0, 
        		"Predefined");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getReturnAccess().getCommaKeyword_0_2_0());
    }
	otherlv_3='!dbg' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getReturnAccess().getDbgKeyword_0_2_1());
    }
	otherlv_4='!' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getReturnAccess().getExclamationMarkKeyword_0_2_2());
    }

    { 
        newCompositeNode(grammarAccess.getReturnAccess().getNUMBERParserRuleCall_0_2_3()); 
    }
ruleNUMBER
    { 
        afterParserOrEnumRuleCall();
    }
)?)
    |(	otherlv_6='ret' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getReturnAccess().getRetKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReturnAccess().getReturntypeTypeUseParserRuleCall_1_1_0()); 
	    }
		lv_returntype_7_0=ruleTypeUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReturnRule());
	        }
       		set(
       			$current, 
       			"returntype",
        		lv_returntype_7_0, 
        		"TypeUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getReturnAccess().getReturnvalueValueParserRuleCall_1_2_0()); 
	    }
		lv_returnvalue_8_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReturnRule());
	        }
       		set(
       			$current, 
       			"returnvalue",
        		lv_returnvalue_8_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getReturnAccess().getCommaKeyword_1_3_0());
    }
	otherlv_10='!dbg' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getReturnAccess().getDbgKeyword_1_3_1());
    }
	otherlv_11='!' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getReturnAccess().getExclamationMarkKeyword_1_3_2());
    }

    { 
        newCompositeNode(grammarAccess.getReturnAccess().getNUMBERParserRuleCall_1_3_3()); 
    }
ruleNUMBER
    { 
        afterParserOrEnumRuleCall();
    }
)?))
;





// Entry rule entryRuleBranch
entryRuleBranch returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBranchRule()); }
	 iv_ruleBranch=ruleBranch 
	 { $current=$iv_ruleBranch.current; } 
	 EOF 
;

// Rule Branch
ruleBranch returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='br' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBranchAccess().getBrKeyword_0_0());
    }
	otherlv_1='label' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBranchAccess().getLabelKeyword_0_1());
    }
(
(
		lv_destination_2_0=RULE_VALID_ID
		{
			newLeafNode(lv_destination_2_0, grammarAccess.getBranchAccess().getDestinationVALID_IDTerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBranchRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"destination",
        		lv_destination_2_0, 
        		"VALID_ID");
	    }

)
))
    |(	otherlv_3='br' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBranchAccess().getBrKeyword_1_0());
    }
this_INT_TYPE_4=RULE_INT_TYPE
    { 
    newLeafNode(this_INT_TYPE_4, grammarAccess.getBranchAccess().getINT_TYPETerminalRuleCall_1_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBranchAccess().getCondvalueValueParserRuleCall_1_2_0()); 
	    }
		lv_condvalue_5_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBranchRule());
	        }
       		set(
       			$current, 
       			"condvalue",
        		lv_condvalue_5_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBranchAccess().getCommaKeyword_1_3());
    }
	otherlv_7='label' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBranchAccess().getLabelKeyword_1_4());
    }
(
(
		lv_labelTrue_8_0=RULE_VALID_ID
		{
			newLeafNode(lv_labelTrue_8_0, grammarAccess.getBranchAccess().getLabelTrueVALID_IDTerminalRuleCall_1_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBranchRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"labelTrue",
        		lv_labelTrue_8_0, 
        		"VALID_ID");
	    }

)
)	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getBranchAccess().getCommaKeyword_1_6());
    }
	otherlv_10='label' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getBranchAccess().getLabelKeyword_1_7());
    }
(
(
		lv_labelFalse_11_0=RULE_VALID_ID
		{
			newLeafNode(lv_labelFalse_11_0, grammarAccess.getBranchAccess().getLabelFalseVALID_IDTerminalRuleCall_1_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBranchRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"labelFalse",
        		lv_labelFalse_11_0, 
        		"VALID_ID");
	    }

)
)))
;





RULE_VALID_ID : (('%'|'@') '.'* (('a'..'z'|'A'..'Z'|'_'|'0'..'9')+|RULE_STRING)|'(' RULE_VALID_ID RULE_POINTER? ')') ('.' (('a'..'z'|'A'..'Z'|'_'|'0'..'9')+|'(' ('a'..'z'|'A'..'Z'|'_'|'0'..'9')+ RULE_POINTER? ')'))*;

RULE_INT_TYPE : 'i' ('0'..'9')+ RULE_POINTER?;

RULE_BOOL : ('true'|'false');

RULE_PRIMITIVE_VALUE : ('void'|'null'|'label'|'undef'|'...');

RULE_FLOATING_POINT_TYPE : ('half'|'float'|'double'|'x86_fp80'|'fp128'|'ppc_fp128');

RULE_INITIALIZER : 'zeroinitializer';

RULE_STRING : ('c'? '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'0'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'c'? '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'0'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_UNKNOWN_TYPE : '(...)' RULE_POINTER?;

RULE_SL_COMMENT : ';' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_POINTER : '*'+;

RULE_METADATA : ('!' ('a'..'z'|'A'..'Z'|'_'|'0'..'9')+|'!"' ( options {greedy=false;} : . )*'"');

RULE_F_PREDICATES : ('oeq'|'ogt'|'oge'|'olt'|'ole'|'one'|'ord'|'ueq'|'ugt'|'uge'|'ult'|'ule'|'une'|'uno');

RULE_ATOMIC_ORDERING : ('unordered'|'monotonic'|'aquire'|'release'|'acq_rel'|'seq_cst');

RULE_BIN_OP : ('xchg'|'add'|'sub'|'and'|'nand'|'or'|'xor'|'max'|'min'|'umax'|'umin');

RULE_RETURN_ATTRIBUTES : ('zeroext'|'signext'|'inreg'|'byval'|'sret'|'noalias'|'nocapture'|'nest');

RULE_CAST_OP : ('trunc'|'zext'|'sext'|'fptrunc'|'fpext'|'fptoui'|'fptosi'|'uitofp'|'sitofp'|'ptrtoint'|'inttoptr'|'bitcast');

RULE_I_PREDICATES : ('eq'|'ne'|'ugt'|'uge'|'ult'|'ule'|'sgt'|'sge'|'slt'|'sle');

RULE_VISIBILITY : ('default'|'hidden'|'protected');

RULE_LINKAGE : ('private'|'linker_private'|'linker_private_weak'|'available_externally'|'linkonce'|'common'|'appending'|'extern_weak'|'linkonce_odr'|'linkonce_odr_auto_hide'|'dllimport'|'dllexport');

RULE_ALIAS_LINKAGE : ('external'|'internal'|'weak'|'weak_odr');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


