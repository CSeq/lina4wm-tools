/*
* generated by Xtext
*/
package de.upb.llvm_parser.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.upb.llvm_parser.services.LLVMGrammarAccess;

public class LLVMParser extends AbstractContentAssistParser {
	
	@Inject
	private LLVMGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.upb.llvm_parser.ui.contentassist.antlr.internal.InternalLLVMParser createParser() {
		de.upb.llvm_parser.ui.contentassist.antlr.internal.InternalLLVMParser result = new de.upb.llvm_parser.ui.contentassist.antlr.internal.InternalLLVMParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAbstractElementAccess().getAlternatives(), "rule__AbstractElement__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getLocalVarAccess().getAlternatives_2(), "rule__LocalVar__Alternatives_2");
					put(grammarAccess.getStructTypeAccess().getAlternatives(), "rule__StructType__Alternatives");
					put(grammarAccess.getAtomicOrderingAccess().getAlternatives(), "rule__AtomicOrdering__Alternatives");
					put(grammarAccess.getBinOpAccess().getAlternatives(), "rule__BinOp__Alternatives");
					put(grammarAccess.getLoadAccess().getAlternatives(), "rule__Load__Alternatives");
					put(grammarAccess.getStoreAccess().getAlternatives(), "rule__Store__Alternatives");
					put(grammarAccess.getReturnAttributesAccess().getAlternatives(), "rule__ReturnAttributes__Alternatives");
					put(grammarAccess.getCallingConvAccess().getAlternatives(), "rule__CallingConv__Alternatives");
					put(grammarAccess.getFunctionAttributesAccess().getAlternatives(), "rule__FunctionAttributes__Alternatives");
					put(grammarAccess.getParameterListAccess().getAlternatives_2(), "rule__ParameterList__Alternatives_2");
					put(grammarAccess.getLandingPadAccess().getAlternatives_4(), "rule__LandingPad__Alternatives_4");
					put(grammarAccess.getClauseAccess().getAlternatives(), "rule__Clause__Alternatives");
					put(grammarAccess.getCastTypeAccess().getAlternatives(), "rule__CastType__Alternatives");
					put(grammarAccess.getCompareAccess().getAlternatives(), "rule__Compare__Alternatives");
					put(grammarAccess.getIPredicatesAccess().getAlternatives(), "rule__IPredicates__Alternatives");
					put(grammarAccess.getFPredicatesAccess().getAlternatives(), "rule__FPredicates__Alternatives");
					put(grammarAccess.getArithmeticOPAccess().getAlternatives(), "rule__ArithmeticOP__Alternatives");
					put(grammarAccess.getLogicalOPAccess().getAlternatives(), "rule__LogicalOP__Alternatives");
					put(grammarAccess.getInstructionAccess().getAlternatives(), "rule__Instruction__Alternatives");
					put(grammarAccess.getReturnAccess().getAlternatives(), "rule__Return__Alternatives");
					put(grammarAccess.getBranchAccess().getAlternatives(), "rule__Branch__Alternatives");
					put(grammarAccess.getFunctionHeaderAccess().getAlternatives_0(), "rule__FunctionHeader__Alternatives_0");
					put(grammarAccess.getVisibilityAccess().getAlternatives(), "rule__Visibility__Alternatives");
					put(grammarAccess.getLinkageAccess().getAlternatives(), "rule__Linkage__Alternatives");
					put(grammarAccess.getAliasLinkageAccess().getAlternatives(), "rule__AliasLinkage__Alternatives");
					put(grammarAccess.getMetadataValueAccess().getAlternatives(), "rule__MetadataValue__Alternatives");
					put(grammarAccess.getTopLevelEntityAccess().getAlternatives(), "rule__TopLevelEntity__Alternatives");
					put(grammarAccess.getMainLevelEntityAccess().getAlternatives(), "rule__MainLevelEntity__Alternatives");
					put(grammarAccess.getAbstractElementAccess().getGroup_0(), "rule__AbstractElement__Group_0__0");
					put(grammarAccess.getAbstractElementAccess().getGroup_1(), "rule__AbstractElement__Group_1__0");
					put(grammarAccess.getTypeAndValueAccess().getGroup(), "rule__TypeAndValue__Group__0");
					put(grammarAccess.getLocalVarAccess().getGroup(), "rule__LocalVar__Group__0");
					put(grammarAccess.getLocalVarAccess().getGroup_2_0(), "rule__LocalVar__Group_2_0__0");
					put(grammarAccess.getStructTypeAccess().getGroup_0(), "rule__StructType__Group_0__0");
					put(grammarAccess.getStructTypeAccess().getGroup_0_1(), "rule__StructType__Group_0_1__0");
					put(grammarAccess.getStructTypeAccess().getGroup_0_1_1(), "rule__StructType__Group_0_1_1__0");
					put(grammarAccess.getStructTypeAccess().getGroup_1(), "rule__StructType__Group_1__0");
					put(grammarAccess.getStructTypeAccess().getGroup_1_2(), "rule__StructType__Group_1_2__0");
					put(grammarAccess.getStructTypeAccess().getGroup_1_2_1(), "rule__StructType__Group_1_2_1__0");
					put(grammarAccess.getGetElementPtrAccess().getGroup(), "rule__GetElementPtr__Group__0");
					put(grammarAccess.getGetElementPtrAccess().getGroup_3(), "rule__GetElementPtr__Group_3__0");
					put(grammarAccess.getExtractValueAccess().getGroup(), "rule__ExtractValue__Group__0");
					put(grammarAccess.getExtractValueAccess().getGroup_2(), "rule__ExtractValue__Group_2__0");
					put(grammarAccess.getInsertValueAccess().getGroup(), "rule__InsertValue__Group__0");
					put(grammarAccess.getInsertValueAccess().getGroup_4(), "rule__InsertValue__Group_4__0");
					put(grammarAccess.getFenceAccess().getGroup(), "rule__Fence__Group__0");
					put(grammarAccess.getCmpXchgAccess().getGroup(), "rule__CmpXchg__Group__0");
					put(grammarAccess.getAtomicRMWAccess().getGroup(), "rule__AtomicRMW__Group__0");
					put(grammarAccess.getLoadAccess().getGroup_0(), "rule__Load__Group_0__0");
					put(grammarAccess.getLoadAccess().getGroup_0_3(), "rule__Load__Group_0_3__0");
					put(grammarAccess.getLoadAccess().getGroup_0_4(), "rule__Load__Group_0_4__0");
					put(grammarAccess.getLoadAccess().getGroup_1(), "rule__Load__Group_1__0");
					put(grammarAccess.getLoadAccess().getGroup_1_6(), "rule__Load__Group_1_6__0");
					put(grammarAccess.getStoreAccess().getGroup_0(), "rule__Store__Group_0__0");
					put(grammarAccess.getStoreAccess().getGroup_0_5(), "rule__Store__Group_0_5__0");
					put(grammarAccess.getStoreAccess().getGroup_1(), "rule__Store__Group_1__0");
					put(grammarAccess.getStoreAccess().getGroup_1_8(), "rule__Store__Group_1_8__0");
					put(grammarAccess.getCallAccess().getGroup(), "rule__Call__Group__0");
					put(grammarAccess.getAllocAccess().getGroup(), "rule__Alloc__Group__0");
					put(grammarAccess.getAllocAccess().getGroup_2(), "rule__Alloc__Group_2__0");
					put(grammarAccess.getAllocAccess().getGroup_3(), "rule__Alloc__Group_3__0");
					put(grammarAccess.getCallingConvAccess().getGroup_14(), "rule__CallingConv__Group_14__0");
					put(grammarAccess.getFunctionAttributesAccess().getGroup_1(), "rule__FunctionAttributes__Group_1__0");
					put(grammarAccess.getParameterListAccess().getGroup(), "rule__ParameterList__Group__0");
					put(grammarAccess.getParameterListAccess().getGroup_2_1(), "rule__ParameterList__Group_2_1__0");
					put(grammarAccess.getParameterListAccess().getGroup_2_1_1(), "rule__ParameterList__Group_2_1_1__0");
					put(grammarAccess.getPHIAccess().getGroup(), "rule__PHI__Group__0");
					put(grammarAccess.getPHIAccess().getGroup_5(), "rule__PHI__Group_5__0");
					put(grammarAccess.getValuePairAccess().getGroup(), "rule__ValuePair__Group__0");
					put(grammarAccess.getLandingPadAccess().getGroup(), "rule__LandingPad__Group__0");
					put(grammarAccess.getLandingPadAccess().getGroup_4_0(), "rule__LandingPad__Group_4_0__0");
					put(grammarAccess.getClauseAccess().getGroup_0(), "rule__Clause__Group_0__0");
					put(grammarAccess.getClauseAccess().getGroup_1(), "rule__Clause__Group_1__0");
					put(grammarAccess.getClauseAccess().getGroup_1_2(), "rule__Clause__Group_1_2__0");
					put(grammarAccess.getSelectAccess().getGroup(), "rule__Select__Group__0");
					put(grammarAccess.getVA_ArgAccess().getGroup(), "rule__VA_Arg__Group__0");
					put(grammarAccess.getExtractElementAccess().getGroup(), "rule__ExtractElement__Group__0");
					put(grammarAccess.getInsertElementAccess().getGroup(), "rule__InsertElement__Group__0");
					put(grammarAccess.getShuffleVectorAccess().getGroup(), "rule__ShuffleVector__Group__0");
					put(grammarAccess.getCastAccess().getGroup(), "rule__Cast__Group__0");
					put(grammarAccess.getCompareAccess().getGroup_0(), "rule__Compare__Group_0__0");
					put(grammarAccess.getCompareAccess().getGroup_1(), "rule__Compare__Group_1__0");
					put(grammarAccess.getArithmeticAccess().getGroup(), "rule__Arithmetic__Group__0");
					put(grammarAccess.getLogicalAccess().getGroup(), "rule__Logical__Group__0");
					put(grammarAccess.getIndirectBranchAccess().getGroup(), "rule__IndirectBranch__Group__0");
					put(grammarAccess.getSwitchAccess().getGroup(), "rule__Switch__Group__0");
					put(grammarAccess.getJumpTableAccess().getGroup(), "rule__JumpTable__Group__0");
					put(grammarAccess.getInvokeAccess().getGroup(), "rule__Invoke__Group__0");
					put(grammarAccess.getResumeAccess().getGroup(), "rule__Resume__Group__0");
					put(grammarAccess.getReturnAccess().getGroup_0(), "rule__Return__Group_0__0");
					put(grammarAccess.getReturnAccess().getGroup_0_3(), "rule__Return__Group_0_3__0");
					put(grammarAccess.getReturnAccess().getGroup_1(), "rule__Return__Group_1__0");
					put(grammarAccess.getReturnAccess().getGroup_1_2(), "rule__Return__Group_1_2__0");
					put(grammarAccess.getBranchAccess().getGroup_0(), "rule__Branch__Group_0__0");
					put(grammarAccess.getBranchAccess().getGroup_1(), "rule__Branch__Group_1__0");
					put(grammarAccess.getFunctionBodyAccess().getGroup(), "rule__FunctionBody__Group__0");
					put(grammarAccess.getBasicBlockAccess().getGroup(), "rule__BasicBlock__Group__0");
					put(grammarAccess.getLabelStrAccess().getGroup(), "rule__LabelStr__Group__0");
					put(grammarAccess.getFunctionHeaderAccess().getGroup(), "rule__FunctionHeader__Group__0");
					put(grammarAccess.getFunctionHeaderAccess().getGroup_10(), "rule__FunctionHeader__Group_10__0");
					put(grammarAccess.getGlobalNameAccess().getGroup(), "rule__GlobalName__Group__0");
					put(grammarAccess.getMetadataValueAccess().getGroup_0(), "rule__MetadataValue__Group_0__0");
					put(grammarAccess.getMetadataValueAccess().getGroup_1(), "rule__MetadataValue__Group_1__0");
					put(grammarAccess.getMetadataValueAccess().getGroup_2(), "rule__MetadataValue__Group_2__0");
					put(grammarAccess.getTopLevelEntityAccess().getGroup_0(), "rule__TopLevelEntity__Group_0__0");
					put(grammarAccess.getTopLevelEntityAccess().getGroup_1(), "rule__TopLevelEntity__Group_1__0");
					put(grammarAccess.getTopLevelEntityAccess().getGroup_2(), "rule__TopLevelEntity__Group_2__0");
					put(grammarAccess.getTopLevelEntityAccess().getGroup_3(), "rule__TopLevelEntity__Group_3__0");
					put(grammarAccess.getTopLevelEntityAccess().getGroup_4(), "rule__TopLevelEntity__Group_4__0");
					put(grammarAccess.getTopLevelEntityAccess().getGroup_4_4(), "rule__TopLevelEntity__Group_4_4__0");
					put(grammarAccess.getAlignmentAccess().getGroup(), "rule__Alignment__Group__0");
					put(grammarAccess.getLLVMAccess().getElementsAssignment(), "rule__LLVM__ElementsAssignment");
					put(grammarAccess.getTypeAndValueAccess().getTypeAssignment_0(), "rule__TypeAndValue__TypeAssignment_0");
					put(grammarAccess.getTypeAndValueAccess().getValueAssignment_1(), "rule__TypeAndValue__ValueAssignment_1");
					put(grammarAccess.getLocalVarAccess().getNameAssignment_0(), "rule__LocalVar__NameAssignment_0");
					put(grammarAccess.getLocalVarAccess().getInstrAssignment_2_1(), "rule__LocalVar__InstrAssignment_2_1");
					put(grammarAccess.getGetElementPtrAccess().getPointerAssignment_2(), "rule__GetElementPtr__PointerAssignment_2");
					put(grammarAccess.getGetElementPtrAccess().getParamsAssignment_3_1(), "rule__GetElementPtr__ParamsAssignment_3_1");
					put(grammarAccess.getExtractValueAccess().getAggregateAssignment_1(), "rule__ExtractValue__AggregateAssignment_1");
					put(grammarAccess.getExtractValueAccess().getIndexAssignment_2_1(), "rule__ExtractValue__IndexAssignment_2_1");
					put(grammarAccess.getInsertValueAccess().getAggregateAssignment_1(), "rule__InsertValue__AggregateAssignment_1");
					put(grammarAccess.getInsertValueAccess().getValueAssignment_3(), "rule__InsertValue__ValueAssignment_3");
					put(grammarAccess.getInsertValueAccess().getIndexAssignment_4_1(), "rule__InsertValue__IndexAssignment_4_1");
					put(grammarAccess.getFenceAccess().getOrderingAssignment_2(), "rule__Fence__OrderingAssignment_2");
					put(grammarAccess.getCmpXchgAccess().getAdressAssignment_2(), "rule__CmpXchg__AdressAssignment_2");
					put(grammarAccess.getCmpXchgAccess().getCompare_valAssignment_4(), "rule__CmpXchg__Compare_valAssignment_4");
					put(grammarAccess.getCmpXchgAccess().getNew_valAssignment_6(), "rule__CmpXchg__New_valAssignment_6");
					put(grammarAccess.getCmpXchgAccess().getOrderingAssignment_8(), "rule__CmpXchg__OrderingAssignment_8");
					put(grammarAccess.getAtomicRMWAccess().getAdressAssignment_3(), "rule__AtomicRMW__AdressAssignment_3");
					put(grammarAccess.getAtomicRMWAccess().getValueAssignment_5(), "rule__AtomicRMW__ValueAssignment_5");
					put(grammarAccess.getAtomicRMWAccess().getOrderingAssignment_7(), "rule__AtomicRMW__OrderingAssignment_7");
					put(grammarAccess.getLoadAccess().getAdressAssignment_0_2(), "rule__Load__AdressAssignment_0_2");
					put(grammarAccess.getLoadAccess().getAlignAssignment_0_3_1(), "rule__Load__AlignAssignment_0_3_1");
					put(grammarAccess.getLoadAccess().getIndexAssignment_0_4_3(), "rule__Load__IndexAssignment_0_4_3");
					put(grammarAccess.getLoadAccess().getAdressAssignment_1_3(), "rule__Load__AdressAssignment_1_3");
					put(grammarAccess.getLoadAccess().getOrderingAssignment_1_5(), "rule__Load__OrderingAssignment_1_5");
					put(grammarAccess.getLoadAccess().getIndexAssignment_1_6_2(), "rule__Load__IndexAssignment_1_6_2");
					put(grammarAccess.getStoreAccess().getValueAssignment_0_2(), "rule__Store__ValueAssignment_0_2");
					put(grammarAccess.getStoreAccess().getAdressAssignment_0_4(), "rule__Store__AdressAssignment_0_4");
					put(grammarAccess.getStoreAccess().getValueAssignment_1_3(), "rule__Store__ValueAssignment_1_3");
					put(grammarAccess.getStoreAccess().getAdressAssignment_1_5(), "rule__Store__AdressAssignment_1_5");
					put(grammarAccess.getStoreAccess().getOrderingAssignment_1_7(), "rule__Store__OrderingAssignment_1_7");
					put(grammarAccess.getStoreAccess().getIndexAssignment_1_8_2(), "rule__Store__IndexAssignment_1_8_2");
					put(grammarAccess.getCallAccess().getPointerAssignment_4(), "rule__Call__PointerAssignment_4");
					put(grammarAccess.getCallAccess().getPlistAssignment_5(), "rule__Call__PlistAssignment_5");
					put(grammarAccess.getAllocAccess().getTypeAssignment_1(), "rule__Alloc__TypeAssignment_1");
					put(grammarAccess.getAllocAccess().getNumElementsAssignment_2_1(), "rule__Alloc__NumElementsAssignment_2_1");
					put(grammarAccess.getParameterListAccess().getParamsAssignment_2_1_0(), "rule__ParameterList__ParamsAssignment_2_1_0");
					put(grammarAccess.getParameterListAccess().getParamsAssignment_2_1_1_1(), "rule__ParameterList__ParamsAssignment_2_1_1_1");
					put(grammarAccess.getPHIAccess().getValuesAssignment_3(), "rule__PHI__ValuesAssignment_3");
					put(grammarAccess.getPHIAccess().getValuesAssignment_5_2(), "rule__PHI__ValuesAssignment_5_2");
					put(grammarAccess.getValuePairAccess().getValue1Assignment_1(), "rule__ValuePair__Value1Assignment_1");
					put(grammarAccess.getValuePairAccess().getValue2Assignment_4(), "rule__ValuePair__Value2Assignment_4");
					put(grammarAccess.getLandingPadAccess().getTypeAssignment_1(), "rule__LandingPad__TypeAssignment_1");
					put(grammarAccess.getLandingPadAccess().getPersonalityAssignment_3(), "rule__LandingPad__PersonalityAssignment_3");
					put(grammarAccess.getLandingPadAccess().getClauseAssignment_4_0_1(), "rule__LandingPad__ClauseAssignment_4_0_1");
					put(grammarAccess.getLandingPadAccess().getClauseAssignment_4_1(), "rule__LandingPad__ClauseAssignment_4_1");
					put(grammarAccess.getClauseAccess().getFilterAssignment_1_1(), "rule__Clause__FilterAssignment_1_1");
					put(grammarAccess.getClauseAccess().getFilterAssignment_1_2_1(), "rule__Clause__FilterAssignment_1_2_1");
					put(grammarAccess.getSelectAccess().getConditionAssignment_1(), "rule__Select__ConditionAssignment_1");
					put(grammarAccess.getSelectAccess().getVal1Assignment_3(), "rule__Select__Val1Assignment_3");
					put(grammarAccess.getSelectAccess().getVal2Assignment_5(), "rule__Select__Val2Assignment_5");
					put(grammarAccess.getVA_ArgAccess().getListAssignment_1(), "rule__VA_Arg__ListAssignment_1");
					put(grammarAccess.getVA_ArgAccess().getArgTypeAssignment_3(), "rule__VA_Arg__ArgTypeAssignment_3");
					put(grammarAccess.getExtractElementAccess().getVectorAssignment_1(), "rule__ExtractElement__VectorAssignment_1");
					put(grammarAccess.getExtractElementAccess().getIndexAssignment_3(), "rule__ExtractElement__IndexAssignment_3");
					put(grammarAccess.getInsertElementAccess().getVectorAssignment_1(), "rule__InsertElement__VectorAssignment_1");
					put(grammarAccess.getInsertElementAccess().getScalarAssignment_3(), "rule__InsertElement__ScalarAssignment_3");
					put(grammarAccess.getInsertElementAccess().getIndexAssignment_5(), "rule__InsertElement__IndexAssignment_5");
					put(grammarAccess.getShuffleVectorAccess().getVector1Assignment_1(), "rule__ShuffleVector__Vector1Assignment_1");
					put(grammarAccess.getShuffleVectorAccess().getVector2Assignment_3(), "rule__ShuffleVector__Vector2Assignment_3");
					put(grammarAccess.getShuffleVectorAccess().getMaskAssignment_5(), "rule__ShuffleVector__MaskAssignment_5");
					put(grammarAccess.getCastAccess().getValueAssignment_1(), "rule__Cast__ValueAssignment_1");
					put(grammarAccess.getCastAccess().getCasttoAssignment_3(), "rule__Cast__CasttoAssignment_3");
					put(grammarAccess.getIndirectBranchAccess().getAdressAssignment_1(), "rule__IndirectBranch__AdressAssignment_1");
					put(grammarAccess.getIndirectBranchAccess().getLListAssignment_4(), "rule__IndirectBranch__LListAssignment_4");
					put(grammarAccess.getLabelListAccess().getLabelsAssignment(), "rule__LabelList__LabelsAssignment");
					put(grammarAccess.getSwitchAccess().getValueAssignment_1(), "rule__Switch__ValueAssignment_1");
					put(grammarAccess.getSwitchAccess().getDefaultAssignment_3(), "rule__Switch__DefaultAssignment_3");
					put(grammarAccess.getSwitchAccess().getJTableAssignment_5(), "rule__Switch__JTableAssignment_5");
					put(grammarAccess.getJumpTableAccess().getValuesAssignment_0(), "rule__JumpTable__ValuesAssignment_0");
					put(grammarAccess.getJumpTableAccess().getDestinationsAssignment_2(), "rule__JumpTable__DestinationsAssignment_2");
					put(grammarAccess.getInvokeAccess().getFunctionAssignment_3(), "rule__Invoke__FunctionAssignment_3");
					put(grammarAccess.getInvokeAccess().getPListAssignment_4(), "rule__Invoke__PListAssignment_4");
					put(grammarAccess.getInvokeAccess().getToAssignment_7(), "rule__Invoke__ToAssignment_7");
					put(grammarAccess.getInvokeAccess().getUnwindAssignment_9(), "rule__Invoke__UnwindAssignment_9");
					put(grammarAccess.getReturnAccess().getValueAssignment_1_1(), "rule__Return__ValueAssignment_1_1");
					put(grammarAccess.getBranchAccess().getDestinationAssignment_0_1(), "rule__Branch__DestinationAssignment_0_1");
					put(grammarAccess.getBranchAccess().getCondAssignment_1_1(), "rule__Branch__CondAssignment_1_1");
					put(grammarAccess.getBranchAccess().getLabelTrueAssignment_1_3(), "rule__Branch__LabelTrueAssignment_1_3");
					put(grammarAccess.getBranchAccess().getLabelFalseAssignment_1_5(), "rule__Branch__LabelFalseAssignment_1_5");
					put(grammarAccess.getFunctionBodyAccess().getBlocksAssignment_1(), "rule__FunctionBody__BlocksAssignment_1");
					put(grammarAccess.getBasicBlockAccess().getNameAssignment_1(), "rule__BasicBlock__NameAssignment_1");
					put(grammarAccess.getBasicBlockAccess().getInstructionsAssignment_2(), "rule__BasicBlock__InstructionsAssignment_2");
					put(grammarAccess.getLabelStrAccess().getNameAssignment_0(), "rule__LabelStr__NameAssignment_0");
					put(grammarAccess.getFunctionHeaderAccess().getReturnTypeAssignment_6(), "rule__FunctionHeader__ReturnTypeAssignment_6");
					put(grammarAccess.getFunctionHeaderAccess().getNameAssignment_7(), "rule__FunctionHeader__NameAssignment_7");
					put(grammarAccess.getFunctionHeaderAccess().getPListAssignment_8(), "rule__FunctionHeader__PListAssignment_8");
					put(grammarAccess.getGlobalNameAccess().getNameAssignment_1(), "rule__GlobalName__NameAssignment_1");
					put(grammarAccess.getUnNammedAddrAccess().getAdressAssignment(), "rule__UnNammedAddr__AdressAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.upb.llvm_parser.ui.contentassist.antlr.internal.InternalLLVMParser typedParser = (de.upb.llvm_parser.ui.contentassist.antlr.internal.InternalLLVMParser) parser;
			typedParser.entryRuleLLVM();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public LLVMGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(LLVMGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
