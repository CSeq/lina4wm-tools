/*
* generated by Xtext
*/
grammar InternalLLVM;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.upb.llvm_parser.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.upb.llvm_parser.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.upb.llvm_parser.services.LLVMGrammarAccess;

}

@parser::members {
 
 	private LLVMGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(LLVMGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleLLVM
entryRuleLLVM 
:
{ before(grammarAccess.getLLVMRule()); }
	 ruleLLVM
{ after(grammarAccess.getLLVMRule()); } 
	 EOF 
;

// Rule LLVM
ruleLLVM
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLLVMAccess().getElementsAssignment()); }
(rule__LLVM__ElementsAssignment)*
{ after(grammarAccess.getLLVMAccess().getElementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletoplevelentity
entryRuletoplevelentity 
:
{ before(grammarAccess.getToplevelentityRule()); }
	 ruletoplevelentity
{ after(grammarAccess.getToplevelentityRule()); } 
	 EOF 
;

// Rule toplevelentity
ruletoplevelentity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getToplevelentityAccess().getAlternatives()); }
(rule__Toplevelentity__Alternatives)
{ after(grammarAccess.getToplevelentityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeAndValue
entryRuleTypeAndValue 
:
{ before(grammarAccess.getTypeAndValueRule()); }
	 ruleTypeAndValue
{ after(grammarAccess.getTypeAndValueRule()); } 
	 EOF 
;

// Rule TypeAndValue
ruleTypeAndValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAndValueAccess().getGroup()); }
(rule__TypeAndValue__Group__0)
{ after(grammarAccess.getTypeAndValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleMDNodeNumber
entryRuleMDNodeNumber 
:
{ before(grammarAccess.getMDNodeNumberRule()); }
	 ruleMDNodeNumber
{ after(grammarAccess.getMDNodeNumberRule()); } 
	 EOF 
;

// Rule MDNodeNumber
ruleMDNodeNumber
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMDNodeNumberAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getMDNodeNumberAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleGlobalType
entryRuleGlobalType 
:
{ before(grammarAccess.getGlobalTypeRule()); }
	 ruleGlobalType
{ after(grammarAccess.getGlobalTypeRule()); } 
	 EOF 
;

// Rule GlobalType
ruleGlobalType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGlobalTypeAccess().getAlternatives()); }
(rule__GlobalType__Alternatives)
{ after(grammarAccess.getGlobalTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleAliasee
entryRuleAliasee 
:
{ before(grammarAccess.getAliaseeRule()); }
	 ruleAliasee
{ after(grammarAccess.getAliaseeRule()); } 
	 EOF 
;

// Rule Aliasee
ruleAliasee
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAliaseeAccess().getAlternatives()); }
(rule__Aliasee__Alternatives)
{ after(grammarAccess.getAliaseeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleConst
entryRuleConst 
:
{ before(grammarAccess.getConstRule()); }
	 ruleConst
{ after(grammarAccess.getConstRule()); } 
	 EOF 
;

// Rule Const
ruleConst
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getConstAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptionalUnNammedAddr
entryRuleOptionalUnNammedAddr 
:
{ before(grammarAccess.getOptionalUnNammedAddrRule()); }
	 ruleOptionalUnNammedAddr
{ after(grammarAccess.getOptionalUnNammedAddrRule()); } 
	 EOF 
;

// Rule OptionalUnNammedAddr
ruleOptionalUnNammedAddr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionalUnNammedAddrAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getOptionalUnNammedAddrAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGlobalVar
entryRuleGlobalVar 
:
{ before(grammarAccess.getGlobalVarRule()); }
	 ruleGlobalVar
{ after(grammarAccess.getGlobalVarRule()); } 
	 EOF 
;

// Rule GlobalVar
ruleGlobalVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGlobalVarAccess().getGroup()); }
(rule__GlobalVar__Group__0)
{ after(grammarAccess.getGlobalVarAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUInt32
entryRuleUInt32 
:
{ before(grammarAccess.getUInt32Rule()); }
	 ruleUInt32
{ after(grammarAccess.getUInt32Rule()); } 
	 EOF 
;

// Rule UInt32
ruleUInt32
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUInt32Access().getINTTerminalRuleCall()); }
	RULE_INT
{ after(grammarAccess.getUInt32Access().getINTTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTLSModel
entryRuleTLSModel 
:
{ before(grammarAccess.getTLSModelRule()); }
	 ruleTLSModel
{ after(grammarAccess.getTLSModelRule()); } 
	 EOF 
;

// Rule TLSModel
ruleTLSModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTLSModelAccess().getAlternatives()); }
(rule__TLSModel__Alternatives)
{ after(grammarAccess.getTLSModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptionalThreadLocal
entryRuleOptionalThreadLocal 
:
{ before(grammarAccess.getOptionalThreadLocalRule()); }
	 ruleOptionalThreadLocal
{ after(grammarAccess.getOptionalThreadLocalRule()); } 
	 EOF 
;

// Rule OptionalThreadLocal
ruleOptionalThreadLocal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionalThreadLocalAccess().getAlternatives()); }
(rule__OptionalThreadLocal__Alternatives)
{ after(grammarAccess.getOptionalThreadLocalAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptionalLinkage
entryRuleOptionalLinkage 
:
{ before(grammarAccess.getOptionalLinkageRule()); }
	 ruleOptionalLinkage
{ after(grammarAccess.getOptionalLinkageRule()); } 
	 EOF 
;

// Rule OptionalLinkage
ruleOptionalLinkage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionalLinkageAccess().getAlternatives()); }
(rule__OptionalLinkage__Alternatives)
{ after(grammarAccess.getOptionalLinkageAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptionalAddrSpace
entryRuleOptionalAddrSpace 
:
{ before(grammarAccess.getOptionalAddrSpaceRule()); }
	 ruleOptionalAddrSpace
{ after(grammarAccess.getOptionalAddrSpaceRule()); } 
	 EOF 
;

// Rule OptionalAddrSpace
ruleOptionalAddrSpace
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionalAddrSpaceAccess().getAlternatives()); }
(rule__OptionalAddrSpace__Alternatives)
{ after(grammarAccess.getOptionalAddrSpaceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptionalVisibility
entryRuleOptionalVisibility 
:
{ before(grammarAccess.getOptionalVisibilityRule()); }
	 ruleOptionalVisibility
{ after(grammarAccess.getOptionalVisibilityRule()); } 
	 EOF 
;

// Rule OptionalVisibility
ruleOptionalVisibility
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionalVisibilityAccess().getAlternatives()); }
(rule__OptionalVisibility__Alternatives)
{ after(grammarAccess.getOptionalVisibilityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptionalCallingConv
entryRuleOptionalCallingConv 
:
{ before(grammarAccess.getOptionalCallingConvRule()); }
	 ruleOptionalCallingConv
{ after(grammarAccess.getOptionalCallingConvRule()); } 
	 EOF 
;

// Rule OptionalCallingConv
ruleOptionalCallingConv
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionalCallingConvAccess().getAlternatives()); }
(rule__OptionalCallingConv__Alternatives)
{ after(grammarAccess.getOptionalCallingConvAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUINT
entryRuleUINT 
:
{ before(grammarAccess.getUINTRule()); }
	 ruleUINT
{ after(grammarAccess.getUINTRule()); } 
	 EOF 
;

// Rule UINT
ruleUINT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUINTAccess().getINTTerminalRuleCall()); }
	RULE_INT
{ after(grammarAccess.getUINTAccess().getINTTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}













// Entry rule entryRuleLocalVar
entryRuleLocalVar 
:
{ before(grammarAccess.getLocalVarRule()); }
	 ruleLocalVar
{ after(grammarAccess.getLocalVarRule()); } 
	 EOF 
;

// Rule LocalVar
ruleLocalVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalVarAccess().getKeyword()); }

	'' 

{ after(grammarAccess.getLocalVarAccess().getKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptFuncAttrs
entryRuleOptFuncAttrs 
:
{ before(grammarAccess.getOptFuncAttrsRule()); }
	 ruleOptFuncAttrs
{ after(grammarAccess.getOptFuncAttrsRule()); } 
	 EOF 
;

// Rule OptFuncAttrs
ruleOptFuncAttrs
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptFuncAttrsAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getOptFuncAttrsAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAPSINTVAL
entryRuleAPSINTVAL 
:
{ before(grammarAccess.getAPSINTVALRule()); }
	 ruleAPSINTVAL
{ after(grammarAccess.getAPSINTVALRule()); } 
	 EOF 
;

// Rule APSINTVAL
ruleAPSINTVAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAPSINTVALAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getAPSINTVALAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypes
entryRuleTypes 
:
{ before(grammarAccess.getTypesRule()); }
	 ruleTypes
{ after(grammarAccess.getTypesRule()); } 
	 EOF 
;

// Rule Types
ruleTypes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypesAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getTypesAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterList
entryRuleParameterList 
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterListAccess().getAlternatives()); }
(rule__ParameterList__Alternatives)
{ after(grammarAccess.getParameterListAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArg
entryRuleArg 
:
{ before(grammarAccess.getArgRule()); }
	 ruleArg
{ after(grammarAccess.getArgRule()); } 
	 EOF 
;

// Rule Arg
ruleArg
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgAccess().getGroup()); }
(rule__Arg__Group__0)
{ after(grammarAccess.getArgAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getValueAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptionalAttributes
entryRuleOptionalAttributes 
:
{ before(grammarAccess.getOptionalAttributesRule()); }
	 ruleOptionalAttributes
{ after(grammarAccess.getOptionalAttributesRule()); } 
	 EOF 
;

// Rule OptionalAttributes
ruleOptionalAttributes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionalAttributesAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getOptionalAttributesAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgumentList
entryRuleArgumentList 
:
{ before(grammarAccess.getArgumentListRule()); }
	 ruleArgumentList
{ after(grammarAccess.getArgumentListRule()); } 
	 EOF 
;

// Rule ArgumentList
ruleArgumentList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentListAccess().getGroup()); }
(rule__ArgumentList__Group__0)
{ after(grammarAccess.getArgumentListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgTypeListI
entryRuleArgTypeListI 
:
{ before(grammarAccess.getArgTypeListIRule()); }
	 ruleArgTypeListI
{ after(grammarAccess.getArgTypeListIRule()); } 
	 EOF 
;

// Rule ArgTypeListI
ruleArgTypeListI
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgTypeListIAccess().getAlternatives()); }
(rule__ArgTypeListI__Alternatives)
{ after(grammarAccess.getArgTypeListIAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgType
entryRuleArgType 
:
{ before(grammarAccess.getArgTypeRule()); }
	 ruleArgType
{ after(grammarAccess.getArgTypeRule()); } 
	 EOF 
;

// Rule ArgType
ruleArgType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgTypeAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getArgTypeAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgTypeList
entryRuleArgTypeList 
:
{ before(grammarAccess.getArgTypeListRule()); }
	 ruleArgTypeList
{ after(grammarAccess.getArgTypeListRule()); } 
	 EOF 
;

// Rule ArgTypeList
ruleArgTypeList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgTypeListAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getArgTypeListAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleStructType
entryRuleStructType 
:
{ before(grammarAccess.getStructTypeRule()); }
	 ruleStructType
{ after(grammarAccess.getStructTypeRule()); } 
	 EOF 
;

// Rule StructType
ruleStructType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructTypeAccess().getAlternatives()); }
(rule__StructType__Alternatives)
{ after(grammarAccess.getStructTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleAlignStack
entryRuleAlignStack 
:
{ before(grammarAccess.getAlignStackRule()); }
	 ruleAlignStack
{ after(grammarAccess.getAlignStackRule()); } 
	 EOF 
;

// Rule AlignStack
ruleAlignStack
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlignStackAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getAlignStackAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSideEffect
entryRuleSideEffect 
:
{ before(grammarAccess.getSideEffectRule()); }
	 ruleSideEffect
{ after(grammarAccess.getSideEffectRule()); } 
	 EOF 
;

// Rule SideEffect
ruleSideEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSideEffectAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getSideEffectAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstVector
entryRuleConstVector 
:
{ before(grammarAccess.getConstVectorRule()); }
	 ruleConstVector
{ after(grammarAccess.getConstVectorRule()); } 
	 EOF 
;

// Rule ConstVector
ruleConstVector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstVectorAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getConstVectorAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleFunctionHeader
entryRuleFunctionHeader 
:
{ before(grammarAccess.getFunctionHeaderRule()); }
	 ruleFunctionHeader
{ after(grammarAccess.getFunctionHeaderRule()); } 
	 EOF 
;

// Rule FunctionHeader
ruleFunctionHeader
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionHeaderAccess().getGroup()); }
(rule__FunctionHeader__Group__0)
{ after(grammarAccess.getFunctionHeaderAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptGC
entryRuleOptGC 
:
{ before(grammarAccess.getOptGCRule()); }
	 ruleOptGC
{ after(grammarAccess.getOptGCRule()); } 
	 EOF 
;

// Rule OptGC
ruleOptGC
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptGCAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getOptGCAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptionalAlign
entryRuleOptionalAlign 
:
{ before(grammarAccess.getOptionalAlignRule()); }
	 ruleOptionalAlign
{ after(grammarAccess.getOptionalAlignRule()); } 
	 EOF 
;

// Rule OptionalAlign
ruleOptionalAlign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionalAlignAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getOptionalAlignAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptSection
entryRuleOptSection 
:
{ before(grammarAccess.getOptSectionRule()); }
	 ruleOptSection
{ after(grammarAccess.getOptSectionRule()); } 
	 EOF 
;

// Rule OptSection
ruleOptSection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptSectionAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getOptSectionAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGlobalName
entryRuleGlobalName 
:
{ before(grammarAccess.getGlobalNameRule()); }
	 ruleGlobalName
{ after(grammarAccess.getGlobalNameRule()); } 
	 EOF 
;

// Rule GlobalName
ruleGlobalName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGlobalNameAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getGlobalNameAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptRetAttrs
entryRuleOptRetAttrs 
:
{ before(grammarAccess.getOptRetAttrsRule()); }
	 ruleOptRetAttrs
{ after(grammarAccess.getOptRetAttrsRule()); } 
	 EOF 
;

// Rule OptRetAttrs
ruleOptRetAttrs
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptRetAttrsAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getOptRetAttrsAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleBasicBlock
entryRuleBasicBlock 
:
{ before(grammarAccess.getBasicBlockRule()); }
	 ruleBasicBlock
{ after(grammarAccess.getBasicBlockRule()); } 
	 EOF 
;

// Rule BasicBlock
ruleBasicBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBasicBlockAccess().getGroup()); }
(rule__BasicBlock__Group__0)
{ after(grammarAccess.getBasicBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLabelStr
entryRuleLabelStr 
:
{ before(grammarAccess.getLabelStrRule()); }
	 ruleLabelStr
{ after(grammarAccess.getLabelStrRule()); } 
	 EOF 
;

// Rule LabelStr
ruleLabelStr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLabelStrAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getLabelStrAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleInstruction
entryRuleInstruction 
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstructionAccess().getAlternatives()); }
(rule__Instruction__Alternatives)
{ after(grammarAccess.getInstructionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLabelList
entryRuleLabelList 
:
{ before(grammarAccess.getLabelListRule()); }
	 ruleLabelList
{ after(grammarAccess.getLabelListRule()); } 
	 EOF 
;

// Rule LabelList
ruleLabelList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLabelListAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getLabelListAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJumpTable
entryRuleJumpTable 
:
{ before(grammarAccess.getJumpTableRule()); }
	 ruleJumpTable
{ after(grammarAccess.getJumpTableRule()); } 
	 EOF 
;

// Rule JumpTable
ruleJumpTable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJumpTableAccess().getGroup()); }
(rule__JumpTable__Group__0)*
{ after(grammarAccess.getJumpTableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}









// Entry rule entryRuleArithmeticOps
entryRuleArithmeticOps 
:
{ before(grammarAccess.getArithmeticOpsRule()); }
	 ruleArithmeticOps
{ after(grammarAccess.getArithmeticOpsRule()); } 
	 EOF 
;

// Rule ArithmeticOps
ruleArithmeticOps
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArithmeticOpsAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getArithmeticOpsAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalVarID
entryRuleLocalVarID 
:
{ before(grammarAccess.getLocalVarIDRule()); }
	 ruleLocalVarID
{ after(grammarAccess.getLocalVarIDRule()); } 
	 EOF 
;

// Rule LocalVarID
ruleLocalVarID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalVarIDAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getLocalVarIDAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleFPredicates
entryRuleFPredicates 
:
{ before(grammarAccess.getFPredicatesRule()); }
	 ruleFPredicates
{ after(grammarAccess.getFPredicatesRule()); } 
	 EOF 
;

// Rule FPredicates
ruleFPredicates
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFPredicatesAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getFPredicatesAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIPredicates
entryRuleIPredicates 
:
{ before(grammarAccess.getIPredicatesRule()); }
	 ruleIPredicates
{ after(grammarAccess.getIPredicatesRule()); } 
	 EOF 
;

// Rule IPredicates
ruleIPredicates
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIPredicatesAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getIPredicatesAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleCastOpc
entryRuleCastOpc 
:
{ before(grammarAccess.getCastOpcRule()); }
	 ruleCastOpc
{ after(grammarAccess.getCastOpcRule()); } 
	 EOF 
;

// Rule CastOpc
ruleCastOpc
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCastOpcAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getCastOpcAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}

















// Entry rule entryRuleClause
entryRuleClause 
:
{ before(grammarAccess.getClauseRule()); }
	 ruleClause
{ after(grammarAccess.getClauseRule()); } 
	 EOF 
;

// Rule Clause
ruleClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClauseAccess().getGroup()); }
(rule__Clause__Group__0)
{ after(grammarAccess.getClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleOptionalInfo
entryRuleOptionalInfo 
:
{ before(grammarAccess.getOptionalInfoRule()); }
	 ruleOptionalInfo
{ after(grammarAccess.getOptionalInfoRule()); } 
	 EOF 
;

// Rule OptionalInfo
ruleOptionalInfo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionalInfoAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getOptionalInfoAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}











// Entry rule entryRuleBinOp
entryRuleBinOp 
:
{ before(grammarAccess.getBinOpRule()); }
	 ruleBinOp
{ after(grammarAccess.getBinOpRule()); } 
	 EOF 
;

// Rule BinOp
ruleBinOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinOpAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getBinOpAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleAtomicOrdering
entryRuleAtomicOrdering 
:
{ before(grammarAccess.getAtomicOrderingRule()); }
	 ruleAtomicOrdering
{ after(grammarAccess.getAtomicOrderingRule()); } 
	 EOF 
;

// Rule AtomicOrdering
ruleAtomicOrdering
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicOrderingAccess().getWSTerminalRuleCall()); }
	RULE_WS
{ after(grammarAccess.getAtomicOrderingAccess().getWSTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}











// Entry rule entryRuleElement
entryRuleElement 
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementAccess().getAlternatives()); }
(rule__Element__Alternatives)
{ after(grammarAccess.getElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Toplevelentity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getGroup_0()); }
(rule__Toplevelentity__Group_0__0)
{ after(grammarAccess.getToplevelentityAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getToplevelentityAccess().getGroup_1()); }
(rule__Toplevelentity__Group_1__0)
{ after(grammarAccess.getToplevelentityAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getToplevelentityAccess().getGroup_2()); }
(rule__Toplevelentity__Group_2__0)
{ after(grammarAccess.getToplevelentityAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getToplevelentityAccess().getGroup_3()); }
(rule__Toplevelentity__Group_3__0)
{ after(grammarAccess.getToplevelentityAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getToplevelentityAccess().getGroup_4()); }
(rule__Toplevelentity__Group_4__0)
{ after(grammarAccess.getToplevelentityAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getToplevelentityAccess().getGroup_5()); }
(rule__Toplevelentity__Group_5__0)
{ after(grammarAccess.getToplevelentityAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getToplevelentityAccess().getGroup_6()); }
(rule__Toplevelentity__Group_6__0)
{ after(grammarAccess.getToplevelentityAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getToplevelentityAccess().getGroup_7()); }
(rule__Toplevelentity__Group_7__0)
{ after(grammarAccess.getToplevelentityAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalTypeAccess().getConstantKeyword_0()); }

	'constant' 

{ after(grammarAccess.getGlobalTypeAccess().getConstantKeyword_0()); }
)

    |(
{ before(grammarAccess.getGlobalTypeAccess().getGlobalKeyword_1()); }

	'global' 

{ after(grammarAccess.getGlobalTypeAccess().getGlobalKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aliasee__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliaseeAccess().getTypeAndValueParserRuleCall_0()); }
	ruleTypeAndValue
{ after(grammarAccess.getAliaseeAccess().getTypeAndValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAliaseeAccess().getGroup_1()); }
(rule__Aliasee__Group_1__0)
{ after(grammarAccess.getAliaseeAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getAliaseeAccess().getGroup_2()); }
(rule__Aliasee__Group_2__0)
{ after(grammarAccess.getAliaseeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVar__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarAccess().getConstantKeyword_5_0()); }

	'constant' 

{ after(grammarAccess.getGlobalVarAccess().getConstantKeyword_5_0()); }
)

    |(
{ before(grammarAccess.getGlobalVarAccess().getGlobalKeyword_5_1()); }

	'global' 

{ after(grammarAccess.getGlobalVarAccess().getGlobalKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TLSModel__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTLSModelAccess().getLocaldynamicKeyword_0()); }

	'localdynamic' 

{ after(grammarAccess.getTLSModelAccess().getLocaldynamicKeyword_0()); }
)

    |(
{ before(grammarAccess.getTLSModelAccess().getInitialexecKeyword_1()); }

	'initialexec' 

{ after(grammarAccess.getTLSModelAccess().getInitialexecKeyword_1()); }
)

    |(
{ before(grammarAccess.getTLSModelAccess().getLocalexecKeyword_2()); }

	'localexec' 

{ after(grammarAccess.getTLSModelAccess().getLocalexecKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalThreadLocal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalThreadLocalAccess().getWSTerminalRuleCall_0()); }
	RULE_WS
{ after(grammarAccess.getOptionalThreadLocalAccess().getWSTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOptionalThreadLocalAccess().getThread_localKeyword_1()); }

	'thread_local' 

{ after(grammarAccess.getOptionalThreadLocalAccess().getThread_localKeyword_1()); }
)

    |(
{ before(grammarAccess.getOptionalThreadLocalAccess().getGroup_2()); }
(rule__OptionalThreadLocal__Group_2__0)
{ after(grammarAccess.getOptionalThreadLocalAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalLinkage__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalLinkageAccess().getWSTerminalRuleCall_0()); }
	RULE_WS
{ after(grammarAccess.getOptionalLinkageAccess().getWSTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOptionalLinkageAccess().getPrivateKeyword_1()); }

	'private' 

{ after(grammarAccess.getOptionalLinkageAccess().getPrivateKeyword_1()); }
)

    |(
{ before(grammarAccess.getOptionalLinkageAccess().getLinker_privateKeyword_2()); }

	'linker_private' 

{ after(grammarAccess.getOptionalLinkageAccess().getLinker_privateKeyword_2()); }
)

    |(
{ before(grammarAccess.getOptionalLinkageAccess().getLinker_private_weakKeyword_3()); }

	'linker_private_weak' 

{ after(grammarAccess.getOptionalLinkageAccess().getLinker_private_weakKeyword_3()); }
)

    |(
{ before(grammarAccess.getOptionalLinkageAccess().getInternalKeyword_4()); }

	'internal' 

{ after(grammarAccess.getOptionalLinkageAccess().getInternalKeyword_4()); }
)

    |(
{ before(grammarAccess.getOptionalLinkageAccess().getWeakKeyword_5()); }

	'weak' 

{ after(grammarAccess.getOptionalLinkageAccess().getWeakKeyword_5()); }
)

    |(
{ before(grammarAccess.getOptionalLinkageAccess().getWeak_odrKeyword_6()); }

	'weak_odr' 

{ after(grammarAccess.getOptionalLinkageAccess().getWeak_odrKeyword_6()); }
)

    |(
{ before(grammarAccess.getOptionalLinkageAccess().getLinkonceKeyword_7()); }

	'linkonce' 

{ after(grammarAccess.getOptionalLinkageAccess().getLinkonceKeyword_7()); }
)

    |(
{ before(grammarAccess.getOptionalLinkageAccess().getLinkonce_odrKeyword_8()); }

	'linkonce_odr' 

{ after(grammarAccess.getOptionalLinkageAccess().getLinkonce_odrKeyword_8()); }
)

    |(
{ before(grammarAccess.getOptionalLinkageAccess().getLinkonce_odr_auto_hideKeyword_9()); }

	'linkonce_odr_auto_hide' 

{ after(grammarAccess.getOptionalLinkageAccess().getLinkonce_odr_auto_hideKeyword_9()); }
)

    |(
{ before(grammarAccess.getOptionalLinkageAccess().getAvailable_externallyKeyword_10()); }

	'available_externally' 

{ after(grammarAccess.getOptionalLinkageAccess().getAvailable_externallyKeyword_10()); }
)

    |(
{ before(grammarAccess.getOptionalLinkageAccess().getAppendingKeyword_11()); }

	'appending' 

{ after(grammarAccess.getOptionalLinkageAccess().getAppendingKeyword_11()); }
)

    |(
{ before(grammarAccess.getOptionalLinkageAccess().getDllexportKeyword_12()); }

	'dllexport' 

{ after(grammarAccess.getOptionalLinkageAccess().getDllexportKeyword_12()); }
)

    |(
{ before(grammarAccess.getOptionalLinkageAccess().getCommonKeyword_13()); }

	'common' 

{ after(grammarAccess.getOptionalLinkageAccess().getCommonKeyword_13()); }
)

    |(
{ before(grammarAccess.getOptionalLinkageAccess().getDllimportKeyword_14()); }

	'dllimport' 

{ after(grammarAccess.getOptionalLinkageAccess().getDllimportKeyword_14()); }
)

    |(
{ before(grammarAccess.getOptionalLinkageAccess().getExtern_weakKeyword_15()); }

	'extern_weak' 

{ after(grammarAccess.getOptionalLinkageAccess().getExtern_weakKeyword_15()); }
)

    |(
{ before(grammarAccess.getOptionalLinkageAccess().getExternalKeyword_16()); }

	'external' 

{ after(grammarAccess.getOptionalLinkageAccess().getExternalKeyword_16()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalAddrSpace__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalAddrSpaceAccess().getWSTerminalRuleCall_0()); }
	RULE_WS
{ after(grammarAccess.getOptionalAddrSpaceAccess().getWSTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOptionalAddrSpaceAccess().getGroup_1()); }
(rule__OptionalAddrSpace__Group_1__0)
{ after(grammarAccess.getOptionalAddrSpaceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalVisibility__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalVisibilityAccess().getWSTerminalRuleCall_0()); }
	RULE_WS
{ after(grammarAccess.getOptionalVisibilityAccess().getWSTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOptionalVisibilityAccess().getDefaultKeyword_1()); }

	'default' 

{ after(grammarAccess.getOptionalVisibilityAccess().getDefaultKeyword_1()); }
)

    |(
{ before(grammarAccess.getOptionalVisibilityAccess().getHiddenKeyword_2()); }

	'hidden' 

{ after(grammarAccess.getOptionalVisibilityAccess().getHiddenKeyword_2()); }
)

    |(
{ before(grammarAccess.getOptionalVisibilityAccess().getProtectedKeyword_3()); }

	'protected' 

{ after(grammarAccess.getOptionalVisibilityAccess().getProtectedKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalCallingConv__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalCallingConvAccess().getWSTerminalRuleCall_0()); }
	RULE_WS
{ after(grammarAccess.getOptionalCallingConvAccess().getWSTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOptionalCallingConvAccess().getCccKeyword_1()); }

	'ccc' 

{ after(grammarAccess.getOptionalCallingConvAccess().getCccKeyword_1()); }
)

    |(
{ before(grammarAccess.getOptionalCallingConvAccess().getFastccKeyword_2()); }

	'fastcc' 

{ after(grammarAccess.getOptionalCallingConvAccess().getFastccKeyword_2()); }
)

    |(
{ before(grammarAccess.getOptionalCallingConvAccess().getColdccKeyword_3()); }

	'coldcc' 

{ after(grammarAccess.getOptionalCallingConvAccess().getColdccKeyword_3()); }
)

    |(
{ before(grammarAccess.getOptionalCallingConvAccess().getX86_stdcallccKeyword_4()); }

	'x86_stdcallcc' 

{ after(grammarAccess.getOptionalCallingConvAccess().getX86_stdcallccKeyword_4()); }
)

    |(
{ before(grammarAccess.getOptionalCallingConvAccess().getX86_fastcallccKeyword_5()); }

	'x86_fastcallcc' 

{ after(grammarAccess.getOptionalCallingConvAccess().getX86_fastcallccKeyword_5()); }
)

    |(
{ before(grammarAccess.getOptionalCallingConvAccess().getX86_thiscallccKeyword_6()); }

	'x86_thiscallcc' 

{ after(grammarAccess.getOptionalCallingConvAccess().getX86_thiscallccKeyword_6()); }
)

    |(
{ before(grammarAccess.getOptionalCallingConvAccess().getArm_apcsccKeyword_7()); }

	'arm_apcscc' 

{ after(grammarAccess.getOptionalCallingConvAccess().getArm_apcsccKeyword_7()); }
)

    |(
{ before(grammarAccess.getOptionalCallingConvAccess().getArm_aapcsccKeyword_8()); }

	'arm_aapcscc' 

{ after(grammarAccess.getOptionalCallingConvAccess().getArm_aapcsccKeyword_8()); }
)

    |(
{ before(grammarAccess.getOptionalCallingConvAccess().getArm_aapcs_vfpccKeyword_9()); }

	'arm_aapcs_vfpcc' 

{ after(grammarAccess.getOptionalCallingConvAccess().getArm_aapcs_vfpccKeyword_9()); }
)

    |(
{ before(grammarAccess.getOptionalCallingConvAccess().getMsp430_intrccKeyword_10()); }

	'msp430_intrcc' 

{ after(grammarAccess.getOptionalCallingConvAccess().getMsp430_intrccKeyword_10()); }
)

    |(
{ before(grammarAccess.getOptionalCallingConvAccess().getPtx_kernelKeyword_11()); }

	'ptx_kernel' 

{ after(grammarAccess.getOptionalCallingConvAccess().getPtx_kernelKeyword_11()); }
)

    |(
{ before(grammarAccess.getOptionalCallingConvAccess().getPtx_deviceKeyword_12()); }

	'ptx_device' 

{ after(grammarAccess.getOptionalCallingConvAccess().getPtx_deviceKeyword_12()); }
)

    |(
{ before(grammarAccess.getOptionalCallingConvAccess().getSpir_funcKeyword_13()); }

	'spir_func' 

{ after(grammarAccess.getOptionalCallingConvAccess().getSpir_funcKeyword_13()); }
)

    |(
{ before(grammarAccess.getOptionalCallingConvAccess().getSpir_kernelKeyword_14()); }

	'spir_kernel' 

{ after(grammarAccess.getOptionalCallingConvAccess().getSpir_kernelKeyword_14()); }
)

    |(
{ before(grammarAccess.getOptionalCallingConvAccess().getGroup_15()); }
(rule__OptionalCallingConv__Group_15__0)
{ after(grammarAccess.getOptionalCallingConvAccess().getGroup_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getFloatKeyword_0()); }

	'float' 

{ after(grammarAccess.getTypeAccess().getFloatKeyword_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getVoidKeyword_1()); }

	'void' 

{ after(grammarAccess.getTypeAccess().getVoidKeyword_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getStructTypeParserRuleCall_2()); }
	ruleStructType
{ after(grammarAccess.getTypeAccess().getStructTypeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_3()); }
(rule__Type__Group_3__0)
{ after(grammarAccess.getTypeAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_4()); }
(rule__Type__Group_4__0)
{ after(grammarAccess.getTypeAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getFooKeyword_5()); }

	'%foo' 

{ after(grammarAccess.getTypeAccess().getFooKeyword_5()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getPercentSignDigitFourKeyword_6()); }

	'%4' 

{ after(grammarAccess.getTypeAccess().getPercentSignDigitFourKeyword_6()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_7()); }
(rule__Type__Group_7__0)
{ after(grammarAccess.getTypeAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_8()); }
(rule__Type__Group_8__0)
{ after(grammarAccess.getTypeAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getGroup_9()); }
(rule__Type__Group_9__0)
{ after(grammarAccess.getTypeAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getGroup_0()); }
(rule__ParameterList__Group_0__0)
{ after(grammarAccess.getParameterListAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getParameterListAccess().getGroup_1()); }
(rule__ParameterList__Group_1__0)
{ after(grammarAccess.getParameterListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgTypeListI__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgTypeListIAccess().getWSTerminalRuleCall_0()); }
	RULE_WS
{ after(grammarAccess.getArgTypeListIAccess().getWSTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getArgTypeListIAccess().getFullStopFullStopFullStopKeyword_1()); }

	'...' 

{ after(grammarAccess.getArgTypeListIAccess().getFullStopFullStopFullStopKeyword_1()); }
)

    |(
{ before(grammarAccess.getArgTypeListIAccess().getGroup_2()); }
(rule__ArgTypeListI__Group_2__0)
{ after(grammarAccess.getArgTypeListIAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getArgTypeListIAccess().getGroup_3()); }
(rule__ArgTypeListI__Group_3__0)
{ after(grammarAccess.getArgTypeListIAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getGroup_0()); }
(rule__StructType__Group_0__0)
{ after(grammarAccess.getStructTypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStructTypeAccess().getGroup_1()); }
(rule__StructType__Group_1__0)
{ after(grammarAccess.getStructTypeAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getStructTypeAccess().getGroup_2()); }
(rule__StructType__Group_2__0)
{ after(grammarAccess.getStructTypeAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getStructTypeAccess().getGroup_3()); }
(rule__StructType__Group_3__0)
{ after(grammarAccess.getStructTypeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Instruction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getGroup_0()); }
(rule__Instruction__Group_0__0)
{ after(grammarAccess.getInstructionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getGroup_1()); }
(rule__Instruction__Group_1__0)
{ after(grammarAccess.getInstructionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getNullKeyword_0()); }

	'null' 

{ after(grammarAccess.getElementAccess().getNullKeyword_0()); }
)

    |(
{ before(grammarAccess.getElementAccess().getTypeAndValueParserRuleCall_1()); }
	ruleTypeAndValue
{ after(grammarAccess.getElementAccess().getTypeAndValueParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Toplevelentity__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_0__0__Impl
	rule__Toplevelentity__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getModuleKeyword_0_0()); }

	'module' 

{ after(grammarAccess.getToplevelentityAccess().getModuleKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_0__1__Impl
	rule__Toplevelentity__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getAsmKeyword_0_1()); }

	'asm' 

{ after(grammarAccess.getToplevelentityAccess().getAsmKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getSTRINGTerminalRuleCall_0_2()); }
	RULE_STRING
{ after(grammarAccess.getToplevelentityAccess().getSTRINGTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Toplevelentity__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_1__0__Impl
	rule__Toplevelentity__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getTargetKeyword_1_0()); }

	'target' 

{ after(grammarAccess.getToplevelentityAccess().getTargetKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_1__1__Impl
	rule__Toplevelentity__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getTripleKeyword_1_1()); }

	'triple' 

{ after(grammarAccess.getToplevelentityAccess().getTripleKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_1__2__Impl
	rule__Toplevelentity__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getEqualsSignKeyword_1_2()); }

	'=' 

{ after(grammarAccess.getToplevelentityAccess().getEqualsSignKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getSTRINGTerminalRuleCall_1_3()); }
	RULE_STRING
{ after(grammarAccess.getToplevelentityAccess().getSTRINGTerminalRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Toplevelentity__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_2__0__Impl
	rule__Toplevelentity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getTargetKeyword_2_0()); }

	'target' 

{ after(grammarAccess.getToplevelentityAccess().getTargetKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_2__1__Impl
	rule__Toplevelentity__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getDatalayoutKeyword_2_1()); }

	'datalayout' 

{ after(grammarAccess.getToplevelentityAccess().getDatalayoutKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_2__2__Impl
	rule__Toplevelentity__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getEqualsSignKeyword_2_2()); }

	'=' 

{ after(grammarAccess.getToplevelentityAccess().getEqualsSignKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getSTRINGTerminalRuleCall_2_3()); }
	RULE_STRING
{ after(grammarAccess.getToplevelentityAccess().getSTRINGTerminalRuleCall_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Toplevelentity__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_3__0__Impl
	rule__Toplevelentity__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getDeplibsKeyword_3_0()); }

	'deplibs' 

{ after(grammarAccess.getToplevelentityAccess().getDeplibsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_3__1__Impl
	rule__Toplevelentity__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getEqualsSignKeyword_3_1()); }

	'=' 

{ after(grammarAccess.getToplevelentityAccess().getEqualsSignKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_3__2__Impl
	rule__Toplevelentity__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getLeftSquareBracketKeyword_3_2()); }

	'[' 

{ after(grammarAccess.getToplevelentityAccess().getLeftSquareBracketKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getRightSquareBracketKeyword_3_3()); }

	']' 

{ after(grammarAccess.getToplevelentityAccess().getRightSquareBracketKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Toplevelentity__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_4__0__Impl
	rule__Toplevelentity__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getDeplibsKeyword_4_0()); }

	'deplibs' 

{ after(grammarAccess.getToplevelentityAccess().getDeplibsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_4__1__Impl
	rule__Toplevelentity__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getEqualsSignKeyword_4_1()); }

	'=' 

{ after(grammarAccess.getToplevelentityAccess().getEqualsSignKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_4__2__Impl
	rule__Toplevelentity__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getLeftSquareBracketKeyword_4_2()); }

	'[' 

{ after(grammarAccess.getToplevelentityAccess().getLeftSquareBracketKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_4__3__Impl
	rule__Toplevelentity__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getSTRINGTerminalRuleCall_4_3()); }
	RULE_STRING
{ after(grammarAccess.getToplevelentityAccess().getSTRINGTerminalRuleCall_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_4__4__Impl
	rule__Toplevelentity__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getGroup_4_4()); }
(rule__Toplevelentity__Group_4_4__0)*
{ after(grammarAccess.getToplevelentityAccess().getGroup_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_4__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_4__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_4__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getRightSquareBracketKeyword_4_5()); }

	']' 

{ after(grammarAccess.getToplevelentityAccess().getRightSquareBracketKeyword_4_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Toplevelentity__Group_4_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_4_4__0__Impl
	rule__Toplevelentity__Group_4_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_4_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getCommaKeyword_4_4_0()); }

	',' 

{ after(grammarAccess.getToplevelentityAccess().getCommaKeyword_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_4_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_4_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_4_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getSTRINGTerminalRuleCall_4_4_1()); }
	RULE_STRING
{ after(grammarAccess.getToplevelentityAccess().getSTRINGTerminalRuleCall_4_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Toplevelentity__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_5__0__Impl
	rule__Toplevelentity__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getDeclareKeyword_5_0()); }

	'declare' 

{ after(grammarAccess.getToplevelentityAccess().getDeclareKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getFunctionHeaderParserRuleCall_5_1()); }
	ruleFunctionHeader
{ after(grammarAccess.getToplevelentityAccess().getFunctionHeaderParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Toplevelentity__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_6__0__Impl
	rule__Toplevelentity__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getLocalVarParserRuleCall_6_0()); }
	ruleLocalVar
{ after(grammarAccess.getToplevelentityAccess().getLocalVarParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_6__1__Impl
	rule__Toplevelentity__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getEqualsSignKeyword_6_1()); }

	'=' 

{ after(grammarAccess.getToplevelentityAccess().getEqualsSignKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_6__2__Impl
	rule__Toplevelentity__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getTypeKeyword_6_2()); }

	'type' 

{ after(grammarAccess.getToplevelentityAccess().getTypeKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getTypeParserRuleCall_6_3()); }
	ruleType
{ after(grammarAccess.getToplevelentityAccess().getTypeParserRuleCall_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Toplevelentity__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_7__0__Impl
	rule__Toplevelentity__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getDefineKeyword_7_0()); }

	'define' 

{ after(grammarAccess.getToplevelentityAccess().getDefineKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_7__1__Impl
	rule__Toplevelentity__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getFunctionHeaderParserRuleCall_7_1()); }
	ruleFunctionHeader
{ after(grammarAccess.getToplevelentityAccess().getFunctionHeaderParserRuleCall_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Toplevelentity__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Toplevelentity__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Toplevelentity__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getToplevelentityAccess().getLeftCurlyBracketKeyword_7_2()); }

	'{' 

{ after(grammarAccess.getToplevelentityAccess().getLeftCurlyBracketKeyword_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypeAndValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAndValue__Group__0__Impl
	rule__TypeAndValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAndValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAndValueAccess().getTypeParserRuleCall_0()); }
	ruleType
{ after(grammarAccess.getTypeAndValueAccess().getTypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAndValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAndValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAndValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAndValueAccess().getFooKeyword_1()); }

	'%foo' 

{ after(grammarAccess.getTypeAndValueAccess().getFooKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Aliasee__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aliasee__Group_1__0__Impl
	rule__Aliasee__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aliasee__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliaseeAccess().getBitcastKeyword_1_0()); }

	'bitcast' 

{ after(grammarAccess.getAliaseeAccess().getBitcastKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aliasee__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aliasee__Group_1__1__Impl
	rule__Aliasee__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Aliasee__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliaseeAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getAliaseeAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aliasee__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aliasee__Group_1__2__Impl
	rule__Aliasee__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Aliasee__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliaseeAccess().getTypeAndValueParserRuleCall_1_2()); }
	ruleTypeAndValue
{ after(grammarAccess.getAliaseeAccess().getTypeAndValueParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aliasee__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aliasee__Group_1__3__Impl
	rule__Aliasee__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Aliasee__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliaseeAccess().getToKeyword_1_3()); }

	'to' 

{ after(grammarAccess.getAliaseeAccess().getToKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aliasee__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aliasee__Group_1__4__Impl
	rule__Aliasee__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Aliasee__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliaseeAccess().getTypeParserRuleCall_1_4()); }
	ruleType
{ after(grammarAccess.getAliaseeAccess().getTypeParserRuleCall_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aliasee__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aliasee__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aliasee__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliaseeAccess().getRightParenthesisKeyword_1_5()); }

	')' 

{ after(grammarAccess.getAliaseeAccess().getRightParenthesisKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Aliasee__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aliasee__Group_2__0__Impl
	rule__Aliasee__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aliasee__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliaseeAccess().getGetelementptrKeyword_2_0()); }

	'getelementptr' 

{ after(grammarAccess.getAliaseeAccess().getGetelementptrKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aliasee__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aliasee__Group_2__1__Impl
	rule__Aliasee__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Aliasee__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliaseeAccess().getInboundsKeyword_2_1()); }
(
	'inbounds' 
)?
{ after(grammarAccess.getAliaseeAccess().getInboundsKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aliasee__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aliasee__Group_2__2__Impl
	rule__Aliasee__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Aliasee__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliaseeAccess().getLeftParenthesisKeyword_2_2()); }

	'(' 

{ after(grammarAccess.getAliaseeAccess().getLeftParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aliasee__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aliasee__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aliasee__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliaseeAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getAliaseeAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__GlobalVar__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVar__Group__0__Impl
	rule__GlobalVar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVar__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarAccess().getOptionalLinkageParserRuleCall_0()); }
	ruleOptionalLinkage
{ after(grammarAccess.getGlobalVarAccess().getOptionalLinkageParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVar__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVar__Group__1__Impl
	rule__GlobalVar__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVar__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarAccess().getOptionalVisibilityParserRuleCall_1()); }
	ruleOptionalVisibility
{ after(grammarAccess.getGlobalVarAccess().getOptionalVisibilityParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVar__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVar__Group__2__Impl
	rule__GlobalVar__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVar__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarAccess().getOptionalThreadLocalParserRuleCall_2()); }
	ruleOptionalThreadLocal
{ after(grammarAccess.getGlobalVarAccess().getOptionalThreadLocalParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVar__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVar__Group__3__Impl
	rule__GlobalVar__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVar__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarAccess().getOptionalAddrSpaceParserRuleCall_3()); }
	ruleOptionalAddrSpace
{ after(grammarAccess.getGlobalVarAccess().getOptionalAddrSpaceParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVar__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVar__Group__4__Impl
	rule__GlobalVar__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVar__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarAccess().getOptionalUnNammedAddrParserRuleCall_4()); }
	ruleOptionalUnNammedAddr
{ after(grammarAccess.getGlobalVarAccess().getOptionalUnNammedAddrParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVar__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalVar__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVar__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalVarAccess().getAlternatives_5()); }
(rule__GlobalVar__Alternatives_5)
{ after(grammarAccess.getGlobalVarAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__OptionalThreadLocal__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalThreadLocal__Group_2__0__Impl
	rule__OptionalThreadLocal__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalThreadLocal__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalThreadLocalAccess().getThread_localKeyword_2_0()); }

	'thread_local' 

{ after(grammarAccess.getOptionalThreadLocalAccess().getThread_localKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalThreadLocal__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalThreadLocal__Group_2__1__Impl
	rule__OptionalThreadLocal__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalThreadLocal__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalThreadLocalAccess().getLeftParenthesisKeyword_2_1()); }

	'(' 

{ after(grammarAccess.getOptionalThreadLocalAccess().getLeftParenthesisKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalThreadLocal__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalThreadLocal__Group_2__2__Impl
	rule__OptionalThreadLocal__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalThreadLocal__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalThreadLocalAccess().getTLSModelParserRuleCall_2_2()); }
	ruleTLSModel
{ after(grammarAccess.getOptionalThreadLocalAccess().getTLSModelParserRuleCall_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalThreadLocal__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalThreadLocal__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalThreadLocal__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalThreadLocalAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getOptionalThreadLocalAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OptionalAddrSpace__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalAddrSpace__Group_1__0__Impl
	rule__OptionalAddrSpace__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalAddrSpace__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalAddrSpaceAccess().getAddrspaceKeyword_1_0()); }

	'addrspace' 

{ after(grammarAccess.getOptionalAddrSpaceAccess().getAddrspaceKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalAddrSpace__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalAddrSpace__Group_1__1__Impl
	rule__OptionalAddrSpace__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalAddrSpace__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalAddrSpaceAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getOptionalAddrSpaceAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalAddrSpace__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalAddrSpace__Group_1__2__Impl
	rule__OptionalAddrSpace__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalAddrSpace__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalAddrSpaceAccess().getUInt32ParserRuleCall_1_2()); }
	ruleUInt32
{ after(grammarAccess.getOptionalAddrSpaceAccess().getUInt32ParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalAddrSpace__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalAddrSpace__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalAddrSpace__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalAddrSpaceAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getOptionalAddrSpaceAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OptionalCallingConv__Group_15__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalCallingConv__Group_15__0__Impl
	rule__OptionalCallingConv__Group_15__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalCallingConv__Group_15__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalCallingConvAccess().getCcKeyword_15_0()); }

	'cc' 

{ after(grammarAccess.getOptionalCallingConvAccess().getCcKeyword_15_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalCallingConv__Group_15__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalCallingConv__Group_15__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalCallingConv__Group_15__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalCallingConvAccess().getUINTParserRuleCall_15_1()); }
	ruleUINT
{ after(grammarAccess.getOptionalCallingConvAccess().getUINTParserRuleCall_15_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Type__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_3__0__Impl
	rule__Type__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_3_0()); }

	'[' 

{ after(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_3_1()); }

	']' 

{ after(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_4__0__Impl
	rule__Type__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLessThanSignKeyword_4_0()); }

	'<' 

{ after(grammarAccess.getTypeAccess().getLessThanSignKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGreaterThanSignKeyword_4_1()); }

	'>' 

{ after(grammarAccess.getTypeAccess().getGreaterThanSignKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_7__0__Impl
	rule__Type__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypesParserRuleCall_7_0()); }
	ruleTypes
{ after(grammarAccess.getTypeAccess().getTypesParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_7__1__Impl
	rule__Type__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_7_1()); }

	'(' 

{ after(grammarAccess.getTypeAccess().getLeftParenthesisKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_7__2__Impl
	rule__Type__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getArgTypeListIParserRuleCall_7_2()); }
	ruleArgTypeListI
{ after(grammarAccess.getTypeAccess().getArgTypeListIParserRuleCall_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_7__3__Impl
	rule__Type__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRightParenthesisKeyword_7_3()); }

	')' 

{ after(grammarAccess.getTypeAccess().getRightParenthesisKeyword_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_7__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_7__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_7__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getOptFuncAttrsParserRuleCall_7_4()); }
	ruleOptFuncAttrs
{ after(grammarAccess.getTypeAccess().getOptFuncAttrsParserRuleCall_7_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Type__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_8__0__Impl
	rule__Type__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_8_0()); }

	'[' 

{ after(grammarAccess.getTypeAccess().getLeftSquareBracketKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_8__1__Impl
	rule__Type__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAPSINTVALParserRuleCall_8_1()); }
	ruleAPSINTVAL
{ after(grammarAccess.getTypeAccess().getAPSINTVALParserRuleCall_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_8__2__Impl
	rule__Type__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getXKeyword_8_2()); }

	'x' 

{ after(grammarAccess.getTypeAccess().getXKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_8__3__Impl
	rule__Type__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypesParserRuleCall_8_3()); }
	ruleTypes
{ after(grammarAccess.getTypeAccess().getTypesParserRuleCall_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_8__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_8__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_8__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_8_4()); }

	']' 

{ after(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_8_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Type__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_9__0__Impl
	rule__Type__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getLessThanSignKeyword_9_0()); }

	'<' 

{ after(grammarAccess.getTypeAccess().getLessThanSignKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_9__1__Impl
	rule__Type__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAPSINTVALParserRuleCall_9_1()); }
	ruleAPSINTVAL
{ after(grammarAccess.getTypeAccess().getAPSINTVALParserRuleCall_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_9__2__Impl
	rule__Type__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getXKeyword_9_2()); }

	'x' 

{ after(grammarAccess.getTypeAccess().getXKeyword_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_9__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_9__3__Impl
	rule__Type__Group_9__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_9__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypesParserRuleCall_9_3()); }
	ruleTypes
{ after(grammarAccess.getTypeAccess().getTypesParserRuleCall_9_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_9__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_9__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_9__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGreaterThanSignKeyword_9_4()); }

	'>' 

{ after(grammarAccess.getTypeAccess().getGreaterThanSignKeyword_9_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ParameterList__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_0__0__Impl
	rule__ParameterList__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getRightParenthesisKeyword_0_1()); }

	')' 

{ after(grammarAccess.getParameterListAccess().getRightParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_1__0__Impl
	rule__ParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_1__1__Impl
	rule__ParameterList__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getArgParserRuleCall_1_1()); }
	ruleArg
{ after(grammarAccess.getParameterListAccess().getArgParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_1__2__Impl
	rule__ParameterList__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getGroup_1_2()); }
(rule__ParameterList__Group_1_2__0)*
{ after(grammarAccess.getParameterListAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getParameterListAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ParameterList__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_1_2__0__Impl
	rule__ParameterList__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getParameterListAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterList__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterListAccess().getArgParserRuleCall_1_2_1()); }
	ruleArg
{ after(grammarAccess.getParameterListAccess().getArgParserRuleCall_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arg__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group__0__Impl
	rule__Arg__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getTypeParserRuleCall_0()); }
	ruleType
{ after(grammarAccess.getArgAccess().getTypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arg__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group__1__Impl
	rule__Arg__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getOptionalAttributesParserRuleCall_1()); }
	ruleOptionalAttributes
{ after(grammarAccess.getArgAccess().getOptionalAttributesParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arg__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group__2__Impl
	rule__Arg__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getValueParserRuleCall_2()); }
	ruleValue
{ after(grammarAccess.getArgAccess().getValueParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arg__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgAccess().getOptionalAttributesParserRuleCall_3()); }
	ruleOptionalAttributes
{ after(grammarAccess.getArgAccess().getOptionalAttributesParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ArgumentList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentList__Group__0__Impl
	rule__ArgumentList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentListAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getArgumentListAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentList__Group__1__Impl
	rule__ArgumentList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentListAccess().getArgTypeListIParserRuleCall_1()); }
	ruleArgTypeListI
{ after(grammarAccess.getArgumentListAccess().getArgTypeListIParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentListAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getArgumentListAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArgTypeListI__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgTypeListI__Group_2__0__Impl
	rule__ArgTypeListI__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgTypeListI__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgTypeListIAccess().getArgTypeListParserRuleCall_2_0()); }
	ruleArgTypeList
{ after(grammarAccess.getArgTypeListIAccess().getArgTypeListParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgTypeListI__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgTypeListI__Group_2__1__Impl
	rule__ArgTypeListI__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgTypeListI__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgTypeListIAccess().getCommaKeyword_2_1()); }

	',' 

{ after(grammarAccess.getArgTypeListIAccess().getCommaKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgTypeListI__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgTypeListI__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgTypeListI__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgTypeListIAccess().getFullStopFullStopFullStopKeyword_2_2()); }

	'...' 

{ after(grammarAccess.getArgTypeListIAccess().getFullStopFullStopFullStopKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArgTypeListI__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgTypeListI__Group_3__0__Impl
	rule__ArgTypeListI__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgTypeListI__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgTypeListIAccess().getArgTypeParserRuleCall_3_0()); }
	ruleArgType
{ after(grammarAccess.getArgTypeListIAccess().getArgTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgTypeListI__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgTypeListI__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgTypeListI__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgTypeListIAccess().getGroup_3_1()); }
(rule__ArgTypeListI__Group_3_1__0)*
{ after(grammarAccess.getArgTypeListIAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArgTypeListI__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgTypeListI__Group_3_1__0__Impl
	rule__ArgTypeListI__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgTypeListI__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgTypeListIAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getArgTypeListIAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgTypeListI__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgTypeListI__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgTypeListI__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgTypeListIAccess().getArgTypeParserRuleCall_3_1_1()); }
	ruleArgType
{ after(grammarAccess.getArgTypeListIAccess().getArgTypeParserRuleCall_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__StructType__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_0__0__Impl
	rule__StructType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_0_0()); }

	'{' 

{ after(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_0_1()); }

	'}' 

{ after(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_1__0__Impl
	rule__StructType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1_0()); }

	'{' 

{ after(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_1__1__Impl
	rule__StructType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getTypeParserRuleCall_1_1()); }
	ruleType
{ after(grammarAccess.getStructTypeAccess().getTypeParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_1__2__Impl
	rule__StructType__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getGroup_1_2()); }
(rule__StructType__Group_1_2__0)*
{ after(grammarAccess.getStructTypeAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_1_3()); }

	'}' 

{ after(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StructType__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_1_2__0__Impl
	rule__StructType__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getStructTypeAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getTypeParserRuleCall_1_2_1()); }
	ruleType
{ after(grammarAccess.getStructTypeAccess().getTypeParserRuleCall_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StructType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_2__0__Impl
	rule__StructType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getLessThanSignKeyword_2_0()); }

	'<' 

{ after(grammarAccess.getStructTypeAccess().getLessThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_2__1__Impl
	rule__StructType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_2_1()); }

	'{' 

{ after(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_2__2__Impl
	rule__StructType__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_2_2()); }

	'}' 

{ after(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getGreaterThanSignKeyword_2_3()); }

	'>' 

{ after(grammarAccess.getStructTypeAccess().getGreaterThanSignKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StructType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_3__0__Impl
	rule__StructType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getLessThanSignKeyword_3_0()); }

	'<' 

{ after(grammarAccess.getStructTypeAccess().getLessThanSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_3__1__Impl
	rule__StructType__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_3_1()); }

	'{' 

{ after(grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_3__2__Impl
	rule__StructType__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getTypeParserRuleCall_3_2()); }
	ruleType
{ after(grammarAccess.getStructTypeAccess().getTypeParserRuleCall_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_3__3__Impl
	rule__StructType__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getGroup_3_3()); }
(rule__StructType__Group_3_3__0)*
{ after(grammarAccess.getStructTypeAccess().getGroup_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_3__4__Impl
	rule__StructType__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_3_4()); }

	'}' 

{ after(grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_3__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getGreaterThanSignKeyword_3_5()); }

	'>' 

{ after(grammarAccess.getStructTypeAccess().getGreaterThanSignKeyword_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__StructType__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_3_3__0__Impl
	rule__StructType__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getCommaKeyword_3_3_0()); }

	',' 

{ after(grammarAccess.getStructTypeAccess().getCommaKeyword_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructType__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructType__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructType__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructTypeAccess().getTypeParserRuleCall_3_3_1()); }
	ruleType
{ after(grammarAccess.getStructTypeAccess().getTypeParserRuleCall_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__FunctionHeader__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group__0__Impl
	rule__FunctionHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getOptionalLinkageParserRuleCall_0()); }
	ruleOptionalLinkage
{ after(grammarAccess.getFunctionHeaderAccess().getOptionalLinkageParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group__1__Impl
	rule__FunctionHeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getOptionalVisibilityParserRuleCall_1()); }
	ruleOptionalVisibility
{ after(grammarAccess.getFunctionHeaderAccess().getOptionalVisibilityParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group__2__Impl
	rule__FunctionHeader__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getOptionalCallingConvParserRuleCall_2()); }
	ruleOptionalCallingConv
{ after(grammarAccess.getFunctionHeaderAccess().getOptionalCallingConvParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group__3__Impl
	rule__FunctionHeader__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getOptRetAttrsParserRuleCall_3()); }
	ruleOptRetAttrs
{ after(grammarAccess.getFunctionHeaderAccess().getOptRetAttrsParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group__4__Impl
	rule__FunctionHeader__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getOptionalUnNammedAddrParserRuleCall_4()); }
	ruleOptionalUnNammedAddr
{ after(grammarAccess.getFunctionHeaderAccess().getOptionalUnNammedAddrParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group__5__Impl
	rule__FunctionHeader__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getTypeParserRuleCall_5()); }
	ruleType
{ after(grammarAccess.getFunctionHeaderAccess().getTypeParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group__6__Impl
	rule__FunctionHeader__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getGlobalNameParserRuleCall_6()); }
	ruleGlobalName
{ after(grammarAccess.getFunctionHeaderAccess().getGlobalNameParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group__7__Impl
	rule__FunctionHeader__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getLeftParenthesisKeyword_7()); }

	'(' 

{ after(grammarAccess.getFunctionHeaderAccess().getLeftParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group__8__Impl
	rule__FunctionHeader__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getArgumentListParserRuleCall_8()); }
	ruleArgumentList
{ after(grammarAccess.getFunctionHeaderAccess().getArgumentListParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group__9__Impl
	rule__FunctionHeader__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getRightParenthesisKeyword_9()); }

	')' 

{ after(grammarAccess.getFunctionHeaderAccess().getRightParenthesisKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group__10__Impl
	rule__FunctionHeader__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getOptFuncAttrsParserRuleCall_10()); }
	ruleOptFuncAttrs
{ after(grammarAccess.getFunctionHeaderAccess().getOptFuncAttrsParserRuleCall_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group__11__Impl
	rule__FunctionHeader__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getOptSectionParserRuleCall_11()); }
	ruleOptSection
{ after(grammarAccess.getFunctionHeaderAccess().getOptSectionParserRuleCall_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group__12__Impl
	rule__FunctionHeader__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getOptionalAlignParserRuleCall_12()); }
	ruleOptionalAlign
{ after(grammarAccess.getFunctionHeaderAccess().getOptionalAlignParserRuleCall_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionHeader__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionHeader__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionHeader__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionHeaderAccess().getOptGCParserRuleCall_13()); }
	ruleOptGC
{ after(grammarAccess.getFunctionHeaderAccess().getOptGCParserRuleCall_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}































rule__BasicBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicBlock__Group__0__Impl
	rule__BasicBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicBlockAccess().getLabelStrParserRuleCall_0()); }
(	ruleLabelStr)?
{ after(grammarAccess.getBasicBlockAccess().getLabelStrParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BasicBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BasicBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBasicBlockAccess().getInstructionParserRuleCall_1()); }
(	ruleInstruction)*
{ after(grammarAccess.getBasicBlockAccess().getInstructionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Instruction__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0__0__Impl
	rule__Instruction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getSwitchKeyword_0_0()); }

	'switch' 

{ after(grammarAccess.getInstructionAccess().getSwitchKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0__1__Impl
	rule__Instruction__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getTypeAndValueParserRuleCall_0_1()); }
	ruleTypeAndValue
{ after(grammarAccess.getInstructionAccess().getTypeAndValueParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0__2__Impl
	rule__Instruction__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getCommaKeyword_0_2()); }

	',' 

{ after(grammarAccess.getInstructionAccess().getCommaKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0__3__Impl
	rule__Instruction__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getTypeAndValueParserRuleCall_0_3()); }
	ruleTypeAndValue
{ after(grammarAccess.getInstructionAccess().getTypeAndValueParserRuleCall_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0__4__Impl
	rule__Instruction__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getLeftSquareBracketKeyword_0_4()); }

	'[' 

{ after(grammarAccess.getInstructionAccess().getLeftSquareBracketKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0__5__Impl
	rule__Instruction__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getJumpTableParserRuleCall_0_5()); }
	ruleJumpTable
{ after(grammarAccess.getInstructionAccess().getJumpTableParserRuleCall_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getRightSquareBracketKeyword_0_6()); }

	']' 

{ after(grammarAccess.getInstructionAccess().getRightSquareBracketKeyword_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Instruction__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_1__0__Impl
	rule__Instruction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getIndirectbrKeyword_1_0()); }

	'indirectbr' 

{ after(grammarAccess.getInstructionAccess().getIndirectbrKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_1__1__Impl
	rule__Instruction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getTypeAndValueParserRuleCall_1_1()); }
	ruleTypeAndValue
{ after(grammarAccess.getInstructionAccess().getTypeAndValueParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_1__2__Impl
	rule__Instruction__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getCommaKeyword_1_2()); }

	',' 

{ after(grammarAccess.getInstructionAccess().getCommaKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_1__3__Impl
	rule__Instruction__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getLeftSquareBracketKeyword_1_3()); }

	'[' 

{ after(grammarAccess.getInstructionAccess().getLeftSquareBracketKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_1__4__Impl
	rule__Instruction__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getLabelListParserRuleCall_1_4()); }
	ruleLabelList
{ after(grammarAccess.getInstructionAccess().getLabelListParserRuleCall_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instruction__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getRightSquareBracketKeyword_1_5()); }

	']' 

{ after(grammarAccess.getInstructionAccess().getRightSquareBracketKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__JumpTable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpTable__Group__0__Impl
	rule__JumpTable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpTable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpTableAccess().getTypeAndValueParserRuleCall_0()); }
	ruleTypeAndValue
{ after(grammarAccess.getJumpTableAccess().getTypeAndValueParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JumpTable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpTable__Group__1__Impl
	rule__JumpTable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpTable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpTableAccess().getCommaKeyword_1()); }

	',' 

{ after(grammarAccess.getJumpTableAccess().getCommaKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JumpTable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JumpTable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JumpTable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJumpTableAccess().getTypeAndValueParserRuleCall_2()); }
	ruleTypeAndValue
{ after(grammarAccess.getJumpTableAccess().getTypeAndValueParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Clause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clause__Group__0__Impl
	rule__Clause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseAccess().getCatchKeyword_0()); }

	'catch' 

{ after(grammarAccess.getClauseAccess().getCatchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clause__Group__1__Impl
	rule__Clause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseAccess().getTypeAndValueParserRuleCall_1()); }
	ruleTypeAndValue
{ after(grammarAccess.getClauseAccess().getTypeAndValueParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clause__Group__2__Impl
	rule__Clause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseAccess().getFilterKeyword_2()); }

	'filter' 

{ after(grammarAccess.getClauseAccess().getFilterKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clause__Group__3__Impl
	rule__Clause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseAccess().getFilterKeyword_3()); }

	'filter' 

{ after(grammarAccess.getClauseAccess().getFilterKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clause__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clause__Group__4__Impl
	rule__Clause__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseAccess().getTypeAndValueParserRuleCall_4()); }
	ruleTypeAndValue
{ after(grammarAccess.getClauseAccess().getTypeAndValueParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clause__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clause__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseAccess().getGroup_5()); }
(rule__Clause__Group_5__0)*
{ after(grammarAccess.getClauseAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Clause__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clause__Group_5__0__Impl
	rule__Clause__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getClauseAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clause__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clause__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseAccess().getTypeAndValueParserRuleCall_5_1()); }
	ruleTypeAndValue
{ after(grammarAccess.getClauseAccess().getTypeAndValueParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__LLVM__ElementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLLVMAccess().getElementsToplevelentityParserRuleCall_0()); }
	ruletoplevelentity{ after(grammarAccess.getLLVMAccess().getElementsToplevelentityParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


